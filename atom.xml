<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zqhxuyuan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://github.com/zqhxuyuan/"/>
  <updated>2017-10-19T05:22:53.000Z</updated>
  <id>http://github.com/zqhxuyuan/</id>
  
  <author>
    <name>任何忧伤,都抵不过世界的美丽</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kafka技术内幕</title>
    <link href="http://github.com/zqhxuyuan/2018/01/01/Kafka-Code-Index/"/>
    <id>http://github.com/zqhxuyuan/2018/01/01/Kafka-Code-Index/</id>
    <published>2017-12-31T16:00:00.000Z</published>
    <updated>2017-10-19T05:22:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>《Kafka技术内幕》<br><a href="http://www.ituring.com.cn/book/1927" target="_blank" rel="external">图灵社区主页</a><br><a id="more"></a></p>
<p><img src="http://img.blog.csdn.net/20171019131423727" alt="book"></p>
<h2 id="本书介绍：">本书介绍：</h2><p>本书主要以0.10版本的Kafka源码为基础，并通过图文详解的方式分析Kafka内部组件的实现细节，全书原创的图片有近400幅。对于Kafka流处理的一些新特性，也会分析0.11版本的相关源码。本书各个章节的主要内容如下。</p>
<ul>
<li>第一章首先介绍了Kafka作为流式数据平台的三个组成，包括消息系统、存储系统、流处理系统。Kafka基本概念的三种模型，包括分区模型、消费模型、分布式模型。然后介绍了Kafka几个比较重要的设计思路，最后介绍了如何在一台机器上模拟单机模式与分布式模式，以及如何搭建源码开发环境。</li>
<li>第二章从一个生产者的示例开始，引出了新版本生产者的两种消息发送方式。生产者客户端利用记录收集器、发送线程，对消息集进行分组和缓存，并为目标节点创建生产请求，发送到不同的代理节点。接着介绍了与网络相关的Kafka通道、选择器、轮询等NIO操作。另外还介绍了Scala版本的旧生产者，它使用阻塞通道的方式发送请求。最后介绍了服务端采用<code>Reactor</code>模式处理客户端的请求。</li>
<li>第三章首先介绍了消费者相关的基础概念，然后从一个消费者的示例开始，引出了基于ZooKeeper的高级消费者API，理解高级API主要是要理解消费线程的模型以及变量的传递方式。接着介绍了消费者提交分区偏移量的两种方式。最后，我们举了一个低级API的示例，开发者需要自己实现一些比较复杂的逻辑处理才能保证消费程序的健壮性和稳定性。</li>
<li>第四章介绍了新版本的消费者，不同于旧版本的消费者，新版本去除了ZooKeeper的依赖，统一了旧版本的高级API和低级API，并提供了两种消费方式：订阅和分配。新版本引入订阅状态来管理消费者的订阅信息、并使用拉取器拉取消息。新版本的消费者没有使用拉取线程，而是采用轮询的方式拉取消息，它的性能比旧版本的消费者更好。另外还介绍了消费者采用回调器、处理器、监听器、适配器、组合模式、链式调用等实现不同类型的异步请求。最后，我们介绍了新消费者的心跳任务、提交偏移量以及三种消息处理语义的使用方式。</li>
<li>第五章介绍了新版本消费者相关的协调者实现，主要包括“加入组”与“同步组”。每个消费者都有一个客户端的协调者，服务端也有一个消费组级别的协调者负责处理所有消费者客户端的请求。当消费组触发再平衡操作，服务端的协调者会记录消费组元数据的变化，并通过状态机保证消费组状态的正常转换。本章会通过很多不同的示例场景来帮助读者理解消费组相关的实现。</li>
<li>第六章介绍了Kafka的存储层实现，包括日志的读写、日志的管理、日志的压缩等一些常用的日志操作。服务端通过副本管理器处理客户端的生产请求和拉取请求。接着介绍了副本机制相关的分区、副本、最高水位、复制点等一些概念。最后介绍了延迟操作接口与延迟缓存。服务端如果不能立即返回响应结果给客户端，会先将延迟操作缓存起来，直到请求处理完成或超时。</li>
<li>第七章介绍了作为服务端核心的Kafka控制器，它主要负责管理分区状态机和副本状态机，以及多种类型的监听器，比如代理节点上线和下线、删除主题、重新分配分区等。控制器的一个重要职责是选举分区的主副本。不同代理节点根据控制器下发的请求，决定成为分区的主副本还是从副本。另外，我们还分析了本地副本与远程副本的区别，以及元数据缓存的作用。</li>
<li>第八章首先介绍了两种集群的同步工具：Kafka内置的MirrorMaker和Uber开源的uReplicator。接着介绍了新版本Kafka提供的连接器框架，以及如何开发一个自定义的连接器。然后介绍了连接器的架构模型的具体实现，主要包括数据模型、Connector模型、Worker模型。</li>
<li>第九章介绍了Kafka流处理的两种API：低级Processor API和高级DSL。本章我们重点介绍了流处理的线程模型，主要包括流实例、流线程、流任务。我们还介绍了流处理的本地状态存储，它主要用来作为备份任务的数据恢复。高级DSL包括两个组件：<code>KStream</code>与<code>KTable</code>，它们都定义了一些常用的流处理算子操作，比如无状态的操作（过滤、映射等）、有状态的操作（连接、窗口等）。</li>
<li>第十章介绍了Kafka的一些高级特性，比如客户端的配额、新的消息格式、事务特性。</li>
</ul>
<p>本书相关的示例代码在笔者的Github主页<a href="https://github.com/zqhxuyuan/kafka-book">https://github.com/zqhxuyuan/kafka-book</a>上，另外，限于篇幅，本书的附录部分会放在个人博客上。由于个人能力有限，文中的错误在所难免，读者在阅读本书的过程中，发现不妥之处，可以私信笔者的微博：<a href="http://weibo.com/xuyuantree" target="_blank" rel="external">http://weibo.com/xuyuantree</a>，笔者会定期将勘误表更新到个人博客上。</p>
<h2 id="English_Introduce">English Introduce</h2><p>《Apache Kafka Internal》</p>
<p>This book mostly based on Kafka-0.10, and some part of 0.11 for streaming. It has nearly 400 pictures to analysis Kafka internal implementation. The book written from client to coordinator, from storage to controller, and also including Kafka Connect and Kafka Streams. Here is content introduction of each chapter:</p>
<p>Chapter 1: Being a streaming platform, kafka composed of message system, storage and streaming processing. There are three model of Kafka basic concepts: Partition model, Consumer model and Distributed model. We also introduce some important design ideas of kafka, such as file system persistent, data transformation, producer and consumer, replication and HA.</p>
<p>Chapter 2: From a producer example into how client send message. The whole workflow include record accumulator, sender thread, grouping message, create request and at last send to different target broker. Then we introduce Kafka channel, selector and also how server use NIO reactor to handle client request.</p>
<p>Chapter 3: From a old high-level consumer example into zookeeper based api. The most important of high-level consuemr is consumer thread model. Then we introduce two approach to commit consumer offset which is zookeeper or internal topic. After that, we illustrate how to write low-level consumer to ensure processing messages stability and robust.</p>
<p>Chapter 4: New version consumer client use subscription state and polling fetch instead of fetcher thread. We also introduce how consumer use callback, handler, listener, adapter, chain to implement different asynchronous request mode. Last we introduce heartbeat, offset commit and three consumer processing semantic: at-most-once,at-least-once,exactly-once.</p>
<p>Chapter 5: New consumer communicate with server coordinator by ConsumerCoordinator, there’re mainly two request/response involved: Join-group and Sync-group. This process also called consumer group rebalance. We also discussed how server coordinator use state machine to ensure group state transformation, such as PreparingRebalance,AwaitingSync,Stable. This chapter also give some different scene to help reader understand how consumer group worked in production environment.</p>
<p>Chapter 6: Kafka’s storage layer process include log read/write, log manager, log compaction. In server side, ReplicationManager is responsible for client’s request. Then we introduce Replication mechanism concepts, such as Partition, Replication, HW, LEO. Last we introduce delayed operation and delayed purgatory. If server can’t response immediately to client, they have to cache request and send response to client some times later.</p>
<p>Chapter 7: Kafka Controller component is in charge of managing PartitionState, ReplicationState, and some listeners, such as broker up/down, topic deletion, partition reassign. The main duty of controller is selecting partition’s leader and sent LeaderAndIsr request down to brokers. Target brokers receiving request will decide to be partition leader or follower. Furthermore, we introduce the different between local replication and remote replication, also the function of metadata cache.</p>
<p>Chapter 8: First we introduce two kind of cluster synchronization: Kafka internal MirrorMaker and Uber open sourced uReplicator, we also show how apache helix build replicated uReplicator. Next we introduce new build-in kafka connect framework and how to develop a custom connector plugin. Then we deep into connector’s architecture, mainly concentrate on data model, connector model, worker model.</p>
<p>Chapter 9: Introduce Kafka Streams two api: low-level processor and high-level DSL. This chapter focus on streaming thread model, including stream instance, thread and task. We also introduce local state store used by standby task for recovery. After that, we introduce two abstract components in High-level DSL: KStream and KTable, they both based on low-level processor, support common operator and advance function, such as window, join and so on.</p>
<p>Chapter 10: Introduce some advanced features. such as client quota, new message format in 0.11 and also  transaction support.</p>
<h2 id="目录">目录</h2><p><img src="http://img.blog.csdn.net/20171019132244310" alt="toc1"></p>
<p><img src="http://img.blog.csdn.net/20171019132056607" alt="toc"></p>
<h2 id="勘误表">勘误表</h2><p>TODO</p>
<hr>
<p>下面是以前写的一些博客，当然实际的书籍已经改动很大了，下面的一些博文仅供参考。</p>
<h2 id="Introduce">Introduce</h2><ul>
<li><a href="http://zqhxuyuan.github.io/2016/01/05/2016-01-05-Kafka-Unix/" target="_blank" rel="external">使用Unix管道解释Kafka</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/01/13/2016-01-13-Kafka-Picture/" target="_blank" rel="external">Kafka图文理解</a></li>
</ul>
<h2 id="源码分析汇总">源码分析汇总</h2><ul>
<li><a href="http://zqhxuyuan.github.io/2016/01/06/2016-01-06-Kafka_Producer/" target="_blank" rel="external">生产者(java)</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/01/07/2016-01-07-Kafka_Producer-scala/" target="_blank" rel="external">生产者(scala)</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/01/08/2016-01-08-Kafka_SocketServer/" target="_blank" rel="external">网络层SocketServer</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/01/10/2016-01-10-Kafka_LogAppend/" target="_blank" rel="external">消息存储到日志文件中</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/01/14/2016-01-14-Kafka-ISR/" target="_blank" rel="external">Partition的ISR工作机制</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/01/19/2016-01-19-Kafka-Consumer-scala/" target="_blank" rel="external">消费者初始化(scala)</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/01/20/2016-01-20-Kafka-Consumer-fetcher/" target="_blank" rel="external">消费者抓取流程</a></li>
<li>☆☆☆<a href="http://zqhxuyuan.github.io/2016/05/26/2016-05-13-Kafka-Book-Sample/" target="_blank" rel="external">旧的样章</a>  </li>
</ul>
<h2 id="新消费者">新消费者</h2><ul>
<li>☆☆☆☆☆<a href="http://zqhxuyuan.github.io/2016/02/20/Kafka-Consumer-New/" target="_blank" rel="external">译：使用新的Kafka消费者客户端</a></li>
</ul>
<h2 id="Kafka_Connect">Kafka Connect</h2><ul>
<li><a href="http://zqhxuyuan.github.io/2016/02/21/Kafka-Connect/" target="_blank" rel="external">使用Kafka Connect构建一个可扩展的ETL管道</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/02/21/Kafka-connect-pipeline/" target="_blank" rel="external">使用Kafka Connect构建大规模低延迟的数据管道</a></li>
</ul>
<h2 id="Kafka_Streams">Kafka Streams</h2><ul>
<li><a href="http://zqhxuyuan.github.io/2016/11/18/Kafka-CQRS-Streams/" target="_blank" rel="external">译：Kafka事件驱动和流处理</a></li>
<li>☆☆☆☆☆<a href="http://zqhxuyuan.github.io/2016/11/02/Kafka-Streams-cn/" target="_blank" rel="external">Kafka Streams中文翻译</a></li>
<li><a href="http://zqhxuyuan.github.io/2016/10/29/Kafka-Interactive-Query/" target="_blank" rel="external">译：Kafka交互式查询和流处理的统一</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《Kafka技术内幕》&lt;br&gt;&lt;a href=&quot;http://www.ituring.com.cn/book/1927&quot;&gt;图灵社区主页&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/categories/kafka/"/>
    
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>Kafka技术内幕拾遗</title>
    <link href="http://github.com/zqhxuyuan/2017/12/31/Kafka-Book-Resources/"/>
    <id>http://github.com/zqhxuyuan/2017/12/31/Kafka-Book-Resources/</id>
    <published>2017-12-30T16:00:00.000Z</published>
    <updated>2017-10-19T05:28:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>Kafka技术内幕拾遗</p>
<ul>
<li>✅ 客户端元数据（Metadata）</li>
<li>即席查询（Interactive Query）</li>
<li>EOS事务（Transaction）<a id="more"></a>
</li>
</ul>
<h3 id="客户端的元数据对象">客户端的元数据对象</h3><p>客户端的连接对象（<code>NetworkClient</code>）在轮询时会判断是否需要更新元数据。客户端调用元数据更新器的<code>maybeUpdate()</code>方法，并不一定每次都需要更新元数据。只有当元数据的超时时间（<code>metadataTimeout</code>）等于<code>0</code>时，客户端才会发送元数据请求。</p>
<h4 id="1-_客户端轮询与元数据更新器">1. 客户端轮询与元数据更新器</h4><p>客户端调用选择器的轮询方法，最长的阻塞时间会在“轮询时间（<code>pollTimeout</code>）、元数据的更新时间（<code>metadataTimeout</code>）、请求的超时时间（<code>requestTimeoutMs</code>）”三者中选取最小值。如果元数据的更新时间等于0，表示客户端会立即发送元数据请求，不会阻塞。下面解释这几个时间变量的数据来源，以及它们在发送请求过程中所代表的含义。</p>
<ul>
<li>生产者的<code>requestTimeoutMs</code>变量，对应的配置项是<code>request.timeout.ms</code>，默认值<code>30</code>秒。该配置表示生产者等待收到响应结果的最长时间。如果生产者在这个时间超时后没有收到响应结果，就会认为生产请求失败，它可以重新发送生产请求。</li>
<li>生产者的<code>retryBackoffMs</code>变量，对应的配置项是<code>retry.backoff.ms</code>，默认值<code>100</code>毫秒。该配置表示客户端发送请求失败时，为了避免在短时间内客户端重复地发送请求导致重试次数用光，客户端必须要等待一小会儿才允许发送新的请求。这个配置项可用于元数据请求、生产请求和拉取请求，但只有在发送失败时才会用到。该配置会传给元数据对象（元数据请求）、记录收集器（生产请求）。</li>
<li>生产者的<code>lingerMs</code>变量，对应的配置项是<code>linger.ms</code>，默认值为<code>0</code>毫秒。该配置表示生产者在发送请求之前是否会延迟等待一段时间收集更多的消息。如果等于0，表示生产者会立即发送请求。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 客户端的网络连接对象在每次轮询之前，都会判断是否需要更新元数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NetworkClient</span> <span class="keyword">implements</span> <span class="title">KafkaClient</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> MetadataUpdater metadataUpdater; <span class="comment">// 元数据的更新器</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 生产者会由发送线程调用该方法，消费者会由ConsumerNetworkClient调用该方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;ClientResponse&gt; <span class="title">poll</span><span class="params">(<span class="keyword">long</span> pollTimeout, <span class="keyword">long</span> now)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> metadataTimeout = metadataUpdater.maybeUpdate(now);</span><br><span class="line">    selector.poll(Utils.min(pollTimeout,metadataTimeout,requestTimeoutMs));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">DefaultMetadataUpdater</span> <span class="keyword">implements</span> <span class="title">MetadataUpdater</span> </span>&#123;</span><br><span class="line">    Metadata metadata;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">maybeUpdate</span><span class="params">(<span class="keyword">long</span> now, Node node)</span> </span>&#123;</span><br><span class="line">      <span class="comment">// 这里简化了其他一些判断条件，实际的超时时间计算方式比较复杂</span></span><br><span class="line">      <span class="keyword">long</span> metadataTimeout = metadata.timeToNextUpdate(now);</span><br><span class="line">      <span class="keyword">if</span>(metadataTimeout == <span class="number">0</span>) <span class="comment">// 准备发送“获取元数据”的请求</span></span><br><span class="line">        doSend(<span class="keyword">new</span> MetadataRequest(metadata.topics()), now);</span><br><span class="line">      <span class="keyword">return</span> metadataTimeout; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 处理“获取元数据请求”的响应</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">handleResponse</span><span class="params">(RequestHeader header, Struct body, <span class="keyword">long</span> now)</span> </span>&#123;</span><br><span class="line">      Cluster cluster = <span class="keyword">new</span> MetadataResponse(body).cluster();</span><br><span class="line">      <span class="keyword">this</span>.metadata.update(cluster, now); <span class="comment">// 更新元数据的具体逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>客户端每次轮询收到元数据请求的响应结果后，会解析成<code>Cluster</code>对象，然后更新元数据对象。</p>
<h4 id="2-_元数据对象">2. 元数据对象</h4><p>元数据对象有多个用于控制元数据更新策略的变量，相关的时间配置项主要有下面几个。</p>
<ul>
<li><code>metadata.fetch.timeout.ms</code>（生产者的<code>maxBlockTimeMs</code>变量，默认值为<code>60</code>秒）：生产者第一次发送消息，如果主题没有分区，它等待元数据更新的最长阻塞时间（第7.3.2节第三小节）。</li>
<li><code>metadata.max.age.ms</code>（元数据的<code>metadataExpireMs</code>变量，默认值为五分钟）：即使不需要更新元数据，客户端也需要间隔一段时间更新一次元数据。</li>
<li><code>retry.backoff.ms</code>（元数据的<code>refreshBackoffMs</code>变量，默认值为<code>100</code>毫秒）：客户端多次发送元数据请求，需要等待一小段时间再发送元数据请求。</li>
</ul>
<p>元数据的更新时间主要与后两项配置有关。<code>refreshBackoffMs</code>变量用来计算允许更新的时间（<code>timeToAllowUpdate</code>），<code>metadataExpireMs</code>变量用来计算失效的时间（<code>timeToExpire</code>）。默认情况下，<code>retry.backoff.ms</code>等于<code>100</code>毫秒时，允许更新的时间一般小于<code>0</code>。<code>timeToNextUpdate()</code>方法主要取决于失效的时间，下面列举了几种不同的场景。</p>
<ul>
<li>需要更新元数据时，失效时间等于<code>0</code>，表示需要立即更新元数据。</li>
<li>当前时间在失效阈值的范围内，即上次更新时间加上失效阈值大于当前时间，失效时间等于上次更新时间加上失效阈值，再减去当前时间，结果会大于0，表示再过指定的失效时间才需要更新元数据。</li>
<li>当前时间超过失效阈值的范围，即当前时间大于上次更新时间加上失效阈值，失效时间也设置为0。</li>
</ul>
<blockquote>
<p><strong>注意：</strong>元数据对象的<code>metadataExpireMs</code>和<code>refreshBackoffMs</code>都是固定的值，<code>timeToNextUpdate()</code>方法依赖<code>needUpdate</code>和上次的更新时间，来计算下次更新元数据的时间。当调用元数据对象的<code>requestUpdate()</code>方法和<code>update()</code>方法时，才会分别更新<code>needUpdate</code>和上次的更新时间。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Metadata</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> refreshBackoffMs; <span class="comment">// 更新失败时，下一次更新的补偿时间</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> metadataExpireMs; <span class="comment">// 每隔多久，更细一次元数据</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">int</span> version; <span class="comment">// 版本号，当更新一次元数据，版本号加一</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">long</span> lastRefreshMs; <span class="comment">// 上一次更新的时间，更新失败也会更新这个值</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">long</span> lastSuccessfulRefreshMs; <span class="comment">// 上一次成功更新的时间</span></span><br><span class="line">  <span class="keyword">private</span> Cluster cluster; <span class="comment">// 集群的配置信息</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">boolean</span> needUpdate; <span class="comment">// 是否需要更新元数据</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">int</span> <span class="title">requestUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.needUpdate = <span class="keyword">true</span>; <span class="comment">// 需要更新元数据</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.version; <span class="comment">// 返回当前的版本号，这个版本号是旧的</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">boolean</span> <span class="title">updateRequested</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="keyword">this</span>.needUpdate;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">long</span> <span class="title">timeToNextUpdate</span><span class="params">(<span class="keyword">long</span> nowMs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> timeToExpire = needUpdate ? <span class="number">0</span> : Math.max(</span><br><span class="line">      <span class="keyword">this</span>.lastSuccessfulRefreshMs + <span class="keyword">this</span>.metadataExpireMs - nowMs, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">long</span> timeToAllowUpdate=<span class="keyword">this</span>.lastRefreshMs+<span class="keyword">this</span>.refreshBackoffMs-nowMs;</span><br><span class="line">    <span class="keyword">return</span> Math.max(timeToExpire, timeToAllowUpdate);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">awaitUpdate</span><span class="params">(<span class="keyword">int</span> lastVersion,<span class="keyword">long</span> maxWaitMs)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">long</span> remainingWaitMs = maxWaitMs;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">this</span>.version &lt;= lastVersion) &#123;</span><br><span class="line">      <span class="keyword">if</span> (remainingWaitMs != <span class="number">0</span>) wait(remainingWaitMs); <span class="comment">// 等待</span></span><br><span class="line">      <span class="keyword">long</span> elapsed = System.currentTimeMillis() - begin;</span><br><span class="line">      <span class="keyword">if</span> (elapsed &gt;= maxWaitMs) <span class="keyword">throw</span> <span class="keyword">new</span> TimeoutException(<span class="string">"failed"</span>)</span><br><span class="line">      remainingWaitMs = maxWaitMs - elapsed;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Cluster cluster, <span class="keyword">long</span> now)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.needUpdate = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.version += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">this</span>.lastRefreshMs = now;</span><br><span class="line">    <span class="keyword">this</span>.lastSuccessfulRefreshMs = now;</span><br><span class="line">    <span class="keyword">for</span>(Listener listener:listeners) listener.onMetadataUpdate(cluster);</span><br><span class="line">    <span class="keyword">this</span>.cluster = cluster;</span><br><span class="line">    notifyAll(); <span class="comment">// 通知</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>元数据对象的每个方法都加上了<code>synchronized</code>关键字，即使有多个客户端线程（用户线程）使用同一个生产者示例，并且访问相同的元数据对象，也是线程安全的。<code>awaitUpdate()</code>方法只会被生产者在的<code>waitOnMetadata()</code>方法调用。如果元数据的版本号（<code>this.version</code>）小于上一次的版本号（<code>lastVersion</code>），用户线程会通过<code>wait()</code>进入阻塞状态。调用元数据对象的<code>update()</code>方法，更新版本号，并通知用户线程退出<code>awaitUpdate()</code>方法。</p>
<p>元数据对象除了会更新元数据内容，还有一个保存集群配置的<code>Cluster</code>对象。<code>Cluster</code>保存了分区信息相关的变量，分区信息包括分区的主副本、<code>ISR</code>、<code>AR</code>等内容。第二章生产者客户端发送消息时，利用“分区信息”为消息指定分区编号。本章从控制器、<code>LeaderAndIsr</code>请求，最后到<code>Metadata</code>请求，与第二章的“分区信息”互相呼应，算是画上了一个圆满的句号。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Cluster</span> </span>&#123; <span class="comment">// 集群配置</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Node&gt; nodes;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;String&gt; unauthorizedTopics;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;TopicPartition, PartitionInfo&gt; partitionsByTopicPartition;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, List&lt;PartitionInfo&gt;&gt; partitionsByTopic;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, List&lt;PartitionInfo&gt;&gt; availablePartitionsByTopic;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Integer, List&lt;PartitionInfo&gt;&gt; partitionsByNode;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Integer, Node&gt; nodesById;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PartitionInfo</span> </span>&#123; <span class="comment">// 分区信息</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> String topic;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> partition;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Node leader;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Node[] replicas;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Node[] inSyncReplicas;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-_元数据更新的日志与实例">3. 元数据更新的日志与实例</h4><p>下面举例了生产者发送两条消息，为了模拟发送第一条消息时，生产者必须要等待元数据更新完成。下面的代码会在第一条消息发送完成后等待一秒钟才发送第二条消息。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生产者发送消息的示例</span></span><br><span class="line">KafkaProducer&lt;String, String&gt; producer = <span class="keyword">new</span> KafkaProducer&lt;&gt;(props);</span><br><span class="line">log.info(<span class="string">"start producer client app"</span>);</span><br><span class="line">Thread.sleep(<span class="number">1000</span>*<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">"start send #1 message..."</span>);</span><br><span class="line">producer.send(<span class="keyword">new</span> ProducerRecord&lt;String, String&gt;(<span class="string">"test"</span>, <span class="string">"m1"</span>));</span><br><span class="line">log.info(<span class="string">"sending #1 message end.."</span>);</span><br><span class="line">Thread.sleep(<span class="number">1000</span>); <span class="comment">// 等待一秒才发送第二条消息</span></span><br><span class="line">log.info(<span class="string">"start send #2 message..."</span>);</span><br><span class="line">producer.send(<span class="keyword">new</span> ProducerRecord&lt;String, String&gt;(<span class="string">"test"</span>, <span class="string">"m2"</span>));</span><br><span class="line">log.info(<span class="string">"sending #2 message end.."</span>);</span><br></pre></td></tr></table></figure>
<p>为了更清晰地理解元数据、<code>NetworkClient</code>一些变量的含义，在必要的地方加上了日志（比如<code>needUpdate</code>、<code>metadataTimeout</code>等）。将日志级别调成<code>TRACE</code>后，更详细的日志如下。</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">18:00:04</span>,<span class="number">596</span>] TRACE Starting the Kafka producer</span><br><span class="line"><span class="list">[<span class="keyword">18:00:04</span>,<span class="number">939</span>] DEBUG Updated cluster metadata version <span class="number">1</span> to Cluster<span class="list">(</span><br><span class="line">  nodes = <span class="list">[<span class="keyword">localhost:9092</span> <span class="list">(<span class="keyword">id:</span> <span class="number">-1</span> rack: null)</span>], partitions = <span class="list">[])</span><br><span class="line"><span class="list">[<span class="keyword">18:00:05</span>,<span class="number">077</span>] DEBUG Starting Kafka producer I/O thread.</span><br><span class="line"><span class="list">[<span class="keyword">18:00:05</span>,<span class="number">079</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:30000</span><br><span class="line"><span class="list">[<span class="keyword">18:00:05</span>,<span class="number">094</span>] DEBUG Kafka producer started</span><br><span class="line"><span class="list">[<span class="keyword">18:00:05</span>,<span class="number">094</span>] INFO start producer client app <span class="list">(<span class="keyword">kafka.examples.Producer</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">103</span>] INFO start send #<span class="number">1</span> message... <span class="list">(<span class="keyword">kafka.examples.Producer</span>)</span></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">109</span>] TRACE Requesting metadata update for topic test. 【1】</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">109</span>] TRACE Waking up Sender thread for metadata update.</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">111</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] awaitUpdate begin...</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">117</span>] INFO <span class="list">[<span class="keyword">Sender</span>] readyNodes:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">117</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] needUpdate: true</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">118</span>] INFO <span class="list">[<span class="keyword">MetadataUpdater</span>] metadataTimeout: <span class="number">0</span></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">118</span>] DEBUG Initialize connection to node1 for send metadata request</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">118</span>] DEBUG Initiating connection to node1 at localhost:9092. 【2】</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">241</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] metadataTimeout:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">241</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">246</span>] DEBUG Completed connection to node <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">246</span>] INFO <span class="list">[<span class="keyword">Sender</span>] readyNodes:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">246</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] needUpdate: true</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">247</span>] INFO <span class="list">[<span class="keyword">MetadataUpdater</span>] metadataTimeout: <span class="number">0</span></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">443</span>] DEBUG Sending metadata request &#123;topics=<span class="list">[<span class="keyword">test</span>]&#125; to node <span class="number">-1</span> 【3】</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">444</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] metadataTimeout:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">444</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">448</span>] INFO <span class="list">[<span class="keyword">Sender</span>] readyNodes:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">448</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] needUpdate: true</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">449</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] metadataTimeout:2147483647</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">449</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:30000</span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">628</span>] DEBUG Updated cluster metadata version <span class="number">2</span> to Cluster<span class="list">( 【4】</span><br><span class="line">  nodes = <span class="list">[<span class="keyword">192.168.199.101:9092</span> <span class="list">(<span class="keyword">id:</span> <span class="number">0</span> rack: null)</span>], partitions = <span class="list">[</span><br><span class="line">   Partition<span class="list">(<span class="keyword">topic=test</span>,partition=1,leader=0,replicas=<span class="list">[<span class="keyword">0</span>,],isr=<span class="list">[<span class="keyword">0</span>,], </span><br><span class="line">   Partition<span class="list">(<span class="keyword">topic=test</span>,partition=0,leader=0,replicas=<span class="list">[<span class="keyword">0</span>,],isr=<span class="list">[<span class="keyword">0</span>,], </span><br><span class="line">   Partition<span class="list">(<span class="keyword">topi</span> =test,partition=2,leader=0,replicas=<span class="list">[<span class="keyword">0</span>,],isr=<span class="list">[<span class="keyword">0</span>,]])</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">628</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] awaitUpdate end...</span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">628</span>] INFO <span class="list">[<span class="keyword">Sender</span>] readyNodes:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">628</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] needUpdate: false</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">629</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] metadataTimeout:299839</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">629</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:30000</span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">636</span>] TRACE Sending record ProducerRecord<span class="list">(<span class="keyword">topic=test</span>, partition=null,</span><br><span class="line">  key=null, value=m1, timestamp=null)</span> with callback null to topic test_0 【5】</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">636</span>] TRACE Allocating a new <span class="number">16384</span> byte message buffer for test_0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">700</span>] TRACE Waking up the sender, test_0 is full or a new batch 【6】</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">700</span>] INFO sending #<span class="number">1</span> message end.. <span class="list">(<span class="keyword">kafka.examples.Producer</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">702</span>] INFO <span class="list">[<span class="keyword">accumulator</span>] batch: test-0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">702</span>] INFO <span class="list">[<span class="keyword">accumulator</span>] ready expired: true</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">702</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] needUpdate: false</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">703</span>] DEBUG Initiating connection to node <span class="number">0</span> at localhost:9092. 【7】</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">704</span>] INFO <span class="list">[<span class="keyword">Sender</span>] readyNodes:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">705</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] metadataTimeout:299767</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">705</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:30000</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">706</span>] DEBUG Completed connection to node <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">706</span>] INFO <span class="list">[<span class="keyword">accumulator</span>] batch: test-0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">707</span>] INFO <span class="list">[<span class="keyword">accumulator</span>] ready expired: true</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">707</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] needUpdate: false</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">707</span>] INFO <span class="list">[<span class="keyword">accumulator</span>] drained batch: test-0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">718</span>] TRACE Nodes with data ready to send: <span class="list">[<span class="keyword">localhost:9092</span>]</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">719</span>] TRACE Created <span class="number">1</span> produce requests: <span class="list">[<span class="keyword">ClientRequest</span><span class="list">( 【8】</span><br><span class="line">  expectResponse=true,callback=o.a.k.c.p.internals.Sender$1@6008d3ea, </span><br><span class="line">  request=RequestSend<span class="list">(<span class="keyword">header=</span>&#123;.&#125;, body=&#123;acks=1,timeout=30000,</span><br><span class="line">    topic_data=<span class="list">[&#123;topic=test,data=<span class="list">[&#123;partition=0,</span><br><span class="line">      record_set=HeapByteBuffer<span class="list">[<span class="keyword">pos=0</span> lim=36 cap=16384]</span><br><span class="line">  &#125;]&#125;]&#125;), createdTimeMs=1494151215706, sendTimeMs=0)]</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">719</span>] INFO <span class="list">[<span class="keyword">Sender</span>] readyNodes:1</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">720</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] poll timeout:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">720</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] metadataTimeout:299761</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">720</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">720</span>] INFO <span class="list">[<span class="keyword">Sender</span>] readyNodes:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">721</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] needUpdate: false</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">721</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] metadataTimeout:299747</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">721</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:30000</span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">737</span>] TRACE Received produce response from node <span class="number">0</span> 【9】</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">740</span>] TRACE Produced messages to test-0 with base offset offset <span class="number">11</span>.</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">741</span>] INFO <span class="list">[<span class="keyword">Sender</span>] readyNodes:0</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">741</span>] INFO <span class="list">[<span class="keyword">Metadata</span>] needUpdate: false</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">741</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] metadataTimeout:299726</span><br><span class="line"><span class="list">[<span class="keyword">18:00:15</span>,<span class="number">741</span>] INFO <span class="list">[<span class="keyword">NetworkClient</span>] select timeout:30000</span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">18:00:16</span>,<span class="number">705</span>] INFO start send #<span class="number">2</span> message... <span class="list">(<span class="keyword">kafka.examples.Producer</span>)</span></span><br><span class="line"><span class="list">[<span class="keyword">18:00:16</span>,<span class="number">706</span>] TRACE <span class="list">[<span class="keyword">KafkaProducer</span>] waitedOnMetadataMs: <span class="number">0</span></span><br><span class="line"><span class="list">[<span class="keyword">18:00:16</span>,<span class="number">706</span>] TRACE Sending record ProducerRecord<span class="list">(<span class="keyword">topic=test</span>, partition=null,</span><br><span class="line">  key=null, value=m2, timestamp=null)</span> with callback null to test_2</span><br><span class="line"><span class="list">[<span class="keyword">18:00:16</span>,<span class="number">706</span>] TRACE Allocating a new <span class="number">16384</span> byte message buffer for test_2</span><br><span class="line"><span class="list">[<span class="keyword">18:00:16</span>,<span class="number">706</span>] TRACE Waking up the sender, test_2 is full or a new batch</span><br><span class="line"><span class="list">[<span class="keyword">18:00:16</span>,<span class="number">706</span>] INFO sending #<span class="number">2</span> message end.. <span class="list">(<span class="keyword">kafka.examples.Producer</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
<p>如图1所示，将上面日志中一些重要的时间点与事件抽取出来，具体步骤如下。</p>
<ol>
<li>第一次发送消息，唤醒发送线程，等待元数据更新完成；</li>
<li>初始化网络连接，为发送元数据请求做准备；</li>
<li>生产者发送元数据请求；</li>
<li>收到元数据响应，更新元数据对象，步骤(1)等待元数据更新完成正式结束；</li>
<li>生产者发送消息的流程接着执行，为消息指定分区，追加消息到记录收集器；</li>
<li>创建新的批记录（RecordBatch），再次唤醒发送线程；</li>
<li>从记录收集器中获取准备好的目标代理节点，并初始化网络连接，准备发送生产请求；</li>
<li>从记录收集器中再次获取准备好的节点，并获取需要发送的数据，创建生产请求；</li>
<li>发送生产请求，并等待响应结果，一批记录（实际上只有一条记录）的发送流程结束。</li>
</ol>
<p><img src="http://img.blog.csdn.net/20170507223930619" alt="7"></p>
<p>图1 生产者发送消息与更新元数据的过程</p>
<h3 id="即席查询（Interactive_Query）">即席查询（Interactive Query）</h3><h3 id="EOS事务（Transaction）">EOS事务（Transaction）</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kafka技术内幕拾遗&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ 客户端元数据（Metadata）&lt;/li&gt;
&lt;li&gt;即席查询（Interactive Query）&lt;/li&gt;
&lt;li&gt;EOS事务（Transaction）
    
    </summary>
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/categories/kafka/"/>
    
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>Kafka技术内幕附录</title>
    <link href="http://github.com/zqhxuyuan/2017/12/31/Kafka-Book-Appendix/"/>
    <id>http://github.com/zqhxuyuan/2017/12/31/Kafka-Book-Appendix/</id>
    <published>2017-12-30T16:00:00.000Z</published>
    <updated>2017-10-19T05:25:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>Kafka技术内幕附录<br><a id="more"></a></p>
<h1 id="第11章：附录">第11章：附录</h1><h2 id="11-1_Kafka基本操作">11.1 Kafka基本操作</h2><h3 id="11-1-1_创建、修改、删除、查看主题">11.1.1 创建、修改、删除、查看主题</h3><p>我们可以手动创建主题或者让Kafka自动创建主题，手动创建主题必须指定分区数和副本因子。如果服务端开启了自动创建主题，新数据写入一个不存在的主题，服务端会自动创建这个主题。自动模式下主题的配置信息在server.properties文件中，比如分区数默认只有一个。因为分区是Kafka的最小并行单位，所以我们一般会根据集群规模设置合理的分区数，来达到客户端和服务端的负载均衡。副本因子（<code>replication-factor</code>）是分区的副本数量，每条消息会复制到多个节点上，一般设置为3个副本。假设副本数为<em>N</em>，则最多允许<em>N</em> - 1个节点宕机。 下面的实验在本机安装Kafka，假设ZK的端口为2181，Kafka的端口为9092。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 创建主题</span></span><br><span class="line">$ bin/kafka-topics.sh --zookeeper localhost:<span class="number">2181</span> --create \</span><br><span class="line">    --topic test --partitions <span class="number">1</span> --replication-factor <span class="number">3</span></span><br><span class="line"><span class="preprocessor"># 修改主题的分区数</span></span><br><span class="line">$ bin/kafka-topics.sh --zookeeper localhost:<span class="number">2181</span> --alter \</span><br><span class="line">    --topic test --partitions <span class="number">2</span></span><br><span class="line"><span class="preprocessor"># 列出所有的主题</span></span><br><span class="line">$ bin/kafka-topics.sh --<span class="built_in">list</span> --zookeeper localhost:<span class="number">2181</span></span><br><span class="line">test</span><br><span class="line"><span class="preprocessor"># 查看某个主题的详细信息</span></span><br><span class="line">$ bin/kafka-topics.sh --describe --zookeeper localhost:<span class="number">2181</span> --topic test</span><br><span class="line">Topic:test  PartitionCount:<span class="number">1</span>    ReplicationFactor:<span class="number">1</span> Configs:</span><br><span class="line">    Topic: test Partition: <span class="number">0</span>    主副本: <span class="number">0</span>   Replicas: <span class="number">0</span> Isr: <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>在0.8.2版本之后，Kafka提供了删除主题的功能，但是默认并不会直接将Topic数据物理删除。如果要启用物理删除（即删除主题后，日志文件也会一同删除），需要在server.properties中设置<code>delete.topic.enable=true</code>。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ bin/kafka-topics.sh <span class="comment">--zookeeper localhost:2181 --delete --topic test</span></span><br><span class="line">Topic test is marked for deletion.</span><br><span class="line">Note: This will have no impact if <span class="operator"><span class="keyword">delete</span>.topic.<span class="keyword">enable</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">set</span> <span class="keyword">to</span> <span class="literal">true</span>.</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">bin</span>/kafka-topics.sh <span class="comment">--list --zookeeper localhost:2181</span></span><br><span class="line"><span class="keyword">test</span> - marked <span class="keyword">for</span> deletion</span></span><br></pre></td></tr></table></figure>
<p>管理员创建好主题后，主题会被生产者和消费者使用。注意下面的实验中，新版本的生产者和消费者都是使用Broker地址连接Kafka集群，旧版本的消费者则使用ZK地址连接Kafka集群。</p>
<h3 id="11-1-2_生产者和消费者">11.1.2 生产者和消费者</h3><p>在终端控制台模拟生产消息和消费消息，每个控制台的消费者都会被分配唯一的消费组：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 生产者</span></span><br><span class="line">$ bin/kafka-console-producer.sh --broker-<span class="built_in">list</span> localhost:<span class="number">9092</span> --topic test</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="preprocessor"># 旧消费者（控制台）</span></span><br><span class="line">$ bin/kafka-console-consumer.sh --zookeeper localhost:<span class="number">2181</span> --topic test</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="preprocessor"># 新消费者（控制台）</span></span><br><span class="line">$ bin/kafka-console-consumer.sh --bootstrap-server localhost:<span class="number">9092</span> \</span><br><span class="line">  --<span class="keyword">new</span>-consumer --topic test --from-beginning</span><br></pre></td></tr></table></figure>
<p>执行查看消费组列表的操作，可以列出当前活动的消费组，默认控制台的消费组是<code>console-consumer</code>加上一个随机数。上面由于分别启动了两个版本的消费者，所以对应了两个消费组。当然，也可以在控制台通过其他参数来指定消费组。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 查看使用旧消费者的消费组列表</span></span><br><span class="line">$ bin/kafka-consumer-groups.sh --<span class="built_in">list</span> --zookeeper localhost:<span class="number">2181</span></span><br><span class="line">console-consumer-<span class="number">36296</span></span><br><span class="line"><span class="preprocessor"># 查询使用新消费者的消费组列表</span></span><br><span class="line">$ bin/kafka-consumer-groups.sh --<span class="built_in">list</span> --bootstrap-server localhost:<span class="number">9092</span></span><br><span class="line">console-consumer-<span class="number">89231</span></span><br></pre></td></tr></table></figure>
<p>查看消费组对某个主题的消费状态，需要指定主题和消费组，这会打印出主题的所有分区、日志的大小、所属的消费者等。<br>采用新消费者方式的<code>Owner</code>为<code>none</code>：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ bin/kafka-consumer-offset-checker.sh --zookeeper localhost:<span class="number">2181</span> \</span><br><span class="line">  --topic test --group console-consumer-<span class="number">36296</span></span><br><span class="line">Group         Topic Pid Offset logSize Lag Owner</span><br><span class="line">console-<span class="number">36296</span> test  <span class="number">0</span>   <span class="number">2</span>      <span class="number">2</span>       <span class="number">0</span>   dp0652-f94edaea-<span class="number">0</span></span><br><span class="line">console-<span class="number">36296</span> test  <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>       <span class="number">0</span>   dp0652-f94edaea-<span class="number">0</span></span><br><span class="line">console-<span class="number">36296</span> test  <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span>       <span class="number">0</span>   dp0652-f94edaea-<span class="number">0</span></span><br><span class="line"></span><br><span class="line">$ bin/kafka-consumer-offset-checker.sh --zookeeper localhost:<span class="number">2181</span> \</span><br><span class="line">  --topic test --group console-consumer-<span class="number">89231</span></span><br><span class="line">Group         Topic Pid Offset logSize Lag Owner</span><br><span class="line">console-<span class="number">89231</span> test  <span class="number">0</span>   <span class="number">2</span>      <span class="number">2</span>       <span class="number">0</span>   none</span><br><span class="line">console-<span class="number">89231</span> test  <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>       <span class="number">0</span>   none</span><br><span class="line">console-<span class="number">89231</span> test  <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span>       <span class="number">0</span>   none</span><br></pre></td></tr></table></figure>
<h3 id="11-1-3_扩展集群">11.1.3 扩展集群</h3><p>要向已有的Kafka集群添加新节点，我们只需要保证<code>broker.id</code>编号是唯一的，即可启动Kafka服务。但是新节点不会自动地分配到分区，除非在新加节点之后，新创建了主题。因此，通常我们希望在新添加节点后，能够将旧节点上的分区迁移一部分到新节点上，从而达到负载均衡的目的。迁移分区，实际上是将新节点作为分区的备份副本，当新节点完全复制了一个分区的所有数据，并且加入分区的ISR集合后，旧节点已有的一个副本就会被删除。在整个迁移过程中，分区的副本数保持不变，只不过分区的所属节点从旧节点迁移到了新节点。Kafka提供了分区重新分配（<code>partition reassignment tool</code>）的工具来在不同节点之间移动分区，但该工具并不会自动学习Kafka集群的数据分布来移动分区达到数据的均匀分布，管理员需要手动指定哪些主题或分区需要移动。使用该工具需要执行下面的3个步骤。</p>
<ol>
<li><code>--generate</code>：给定主题和需要移动到的目标节点，生成候选的分区分配计划。</li>
<li><code>--execute</code>：根据上一步的分区分配计划或者手动定义的计划执行数据迁移的任务。</li>
<li><code>--verify</code>：验证上一步执行任务涉及的所有分区的分配状态是否已经完成。</li>
</ol>
<p>下面的示例会将<code>foo1</code>和<code>foo2</code>主题的所有分区全部移动到新的节点5、6上，最后这两个主题的所有分区都只在5、6节点上。第一步生成计划时，会列举出当前主题所有分区目前所在的节点，如果执行失败，管理员还可以进行回滚操作。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># [<span class="number">1</span>] 生成分区分配计划，指定需要移动的主题和需要移动到的目标节点</span></span><br><span class="line">$ cat topics-to-move.json</span><br><span class="line">&#123;<span class="string">"topics"</span>: [&#123;<span class="string">"topic"</span>: <span class="string">"foo1"</span>&#125;, &#123;<span class="string">"topic"</span>: <span class="string">"foo2"</span>&#125;], <span class="string">"version"</span>:<span class="number">1</span>&#125;</span><br><span class="line">$ bin/kafka-reassign-partitions.sh --zookeeper localhost:<span class="number">2181</span> </span><br><span class="line">    --topics-to-move-json-file topics-to-move.json \</span><br><span class="line">    --broker-<span class="built_in">list</span> <span class="string">"5,6"</span> --generate</span><br><span class="line">Current partition replica assignment</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>, <span class="string">"partitions"</span>:[</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">2</span>,<span class="string">"replicas"</span>:[<span class="number">1</span>,<span class="number">2</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">3</span>,<span class="number">4</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">2</span>,<span class="string">"replicas"</span>:[<span class="number">1</span>,<span class="number">2</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">3</span>,<span class="number">4</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">1</span>,<span class="string">"replicas"</span>:[<span class="number">2</span>,<span class="number">3</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">1</span>,<span class="string">"replicas"</span>:[<span class="number">2</span>,<span class="number">3</span>]&#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Proposed partition reassignment configuration</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>, <span class="string">"partitions"</span>:[&#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">2</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">2</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">1</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">1</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>]&#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># [<span class="number">2</span>] 执行分区重新分配的任务</span></span><br><span class="line">$ bin/kafka-reassign-partitions.sh --zookeeper localhost:<span class="number">2181</span> \</span><br><span class="line">  --reassignment-json-file expand-cluster-reassignment.json --execute</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># [<span class="number">3</span>] 验证分区重新分配的进度</span></span><br><span class="line">$ bin/kafka-reassign-partitions.sh --zookeeper localhost:<span class="number">2181</span> \</span><br><span class="line">    --reassignment-json-file expand-cluster-reassignment.json --verify</span><br><span class="line">Status of partition reassignment:</span><br><span class="line">Reassignment of partition [foo1,<span class="number">0</span>] completed successfully</span><br><span class="line">Reassignment of partition [foo1,<span class="number">1</span>] is in progress</span><br><span class="line">Reassignment of partition [foo1,<span class="number">2</span>] is in progress</span><br><span class="line">Reassignment of partition [foo2,<span class="number">0</span>] completed successfully</span><br><span class="line">Reassignment of partition [foo2,<span class="number">1</span>] completed successfully</span><br><span class="line">Reassignment of partition [foo2,<span class="number">2</span>] completed successfully</span><br></pre></td></tr></table></figure>
<p>除了给定主题，由工具生成所有分区的执行计划，我们也可以直接指定主题需要迁移的分区（当然在<code>execute</code>阶段，工具还是会列出指定主题分区当前所在的节点）：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ cat custom-reassignment.json</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>,<span class="string">"partitions"</span>:[</span><br><span class="line">  &#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>]&#125;,</span><br><span class="line">  &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">1</span>,<span class="string">"replicas"</span>:[<span class="number">2</span>,<span class="number">3</span>]&#125;</span><br><span class="line">]&#125;</span><br><span class="line">$ bin/kafka-reassign-partitions.sh --zookeeper localhost:<span class="number">2181</span> \</span><br><span class="line">  --reassignment-json-file custom-reassignment.json --execute</span><br><span class="line">Current partition replica assignment</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>, <span class="string">"partitions"</span>:[</span><br><span class="line">  &#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">1</span>,<span class="number">2</span>]&#125;,</span><br><span class="line">  &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">1</span>,<span class="string">"replicas"</span>:[<span class="number">3</span>,<span class="number">4</span>]&#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Save <span class="keyword">this</span> to use as the --reassignment-json-file option during rollback</span><br><span class="line">Successfully started reassignment of partitions</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>, <span class="string">"partitions"</span>:[</span><br><span class="line">  &#123;<span class="string">"topic"</span>:<span class="string">"foo1"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>]&#125;,</span><br><span class="line">  &#123;<span class="string">"topic"</span>:<span class="string">"foo2"</span>,<span class="string">"partition"</span>:<span class="number">1</span>,<span class="string">"replicas"</span>:[<span class="number">2</span>,<span class="number">3</span>]&#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>除此之外，迁移工具还适用于给分区增加副本数。增加副本数是复制（而不是移动）已有的分区到其他节点，不管使用手动还是自动生成的分配计划，都要包含分区之前所在的节点。下面的示例中，<code>foo</code>主题的分区0只有一个副本是存在节点5上，增加到3个副本后，存在的节点有5、6、7这3个节点。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ cat increase-replication-factor.json</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>, <span class="string">"partitions"</span>:[</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]&#125;]</span><br><span class="line">&#125;</span><br><span class="line">$ bin/kafka-reassign-partitions.sh --zookeeper localhost:<span class="number">2181</span> \</span><br><span class="line">    --reassignment-json-file increase-replication-factor.json --execute</span><br><span class="line">Current partition replica assignment</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>, <span class="string">"partitions"</span>:[&#123;</span><br><span class="line">    <span class="string">"topic"</span>:<span class="string">"foo"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>]&#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Save <span class="keyword">this</span> to use as the --reassignment-json-file option during rollback</span><br><span class="line">Successfully started reassignment of partitions</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>, <span class="string">"partitions"</span>:[</span><br><span class="line">    &#123;<span class="string">"topic"</span>:<span class="string">"foo"</span>,<span class="string">"partition"</span>:<span class="number">0</span>,<span class="string">"replicas"</span>:[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]&#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 副本数为一个时的主题信息</span></span><br><span class="line">$ bin/kafka-topics.sh --zookeeper localhost:<span class="number">2181</span> --topic foo --describe</span><br><span class="line">Topic:foo PartitionCount:<span class="number">1</span>  ReplicationFactor:<span class="number">1</span> Configs:</span><br><span class="line">    Topic: foo  Partition: <span class="number">0</span>  主副本: <span class="number">5</span> Replicas: <span class="number">5</span> Isr: <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 增加副本数后的主题信息</span></span><br><span class="line">$ bin/kafka-topics.sh --zookeeper localhost:<span class="number">2181</span> --topic foo --describe</span><br><span class="line">Topic:foo PartitionCount:<span class="number">1</span>  ReplicationFactor:<span class="number">3</span> Configs:</span><br><span class="line">    Topic: foo  Partition: <span class="number">0</span>  主副本: <span class="number">5</span> Replicas: <span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> Isr: <span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：</strong>修改主题的分区数可以直接采用修改主题的方式，但是修改分区的副本数涉及数据的复制，需要用到上面的分区迁移工具。</p>
</blockquote>
<h2 id="11-2_安全机制（Security）">11.2 安全机制（<code>Security</code>）</h2><p>Kafka的安全机制主要分为下面两个部分：</p>
<ul>
<li>身份认证（<code>Authentication</code>）：对客户端与服务器的连接进行身份认证。Kafka目前支持<code>SSL</code>、<code>SASL/Kerberos</code>、<code>SASL/PLAIN</code>三种认证机制。</li>
<li>权限控制（<code>Authorization</code>）：对消息级别的访问控制列表（ACL）权限控制。</li>
</ul>
<p>下面以<code>SASL/PLAIN</code>的身份认证为例，服务端需要先修改下面三个配置文件，然后启动服务端：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>vi config/server.properties</span><br><span class="line">listeners=<span class="constant">SASL_PLAINTEXT</span><span class="symbol">://localhost</span><span class="symbol">:</span><span class="number">9092</span></span><br><span class="line">security.inter.broker.protocol=<span class="constant">SASL_PLAINTEXT</span></span><br><span class="line">sasl.mechanism.inter.broker.protocol=<span class="constant">PLAIN</span></span><br><span class="line">sasl.enabled.mechanisms=<span class="constant">PLAIN</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ </span>vi config/jaas.conf</span><br><span class="line"><span class="constant">KafkaServer</span> &#123;</span><br><span class="line">  org.apache.kafka.common.security.plain.<span class="constant">PlainLoginModule</span> required</span><br><span class="line">  username=<span class="string">"admin"</span></span><br><span class="line">  password=<span class="string">"admin"</span></span><br><span class="line">  user_admin=<span class="string">"admin"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="constant">KafkaClient</span> &#123;</span><br><span class="line">  org.apache.kafka.common.security.plain.<span class="constant">PlainLoginModule</span> required</span><br><span class="line">  username=<span class="string">"admin"</span></span><br><span class="line">  password=<span class="string">"admin"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ </span>vi bin/kafka-run-<span class="class"><span class="keyword">class</span>.<span class="title">sh</span></span></span><br><span class="line"><span class="constant">KAFKA_SASL_OPTS</span>=<span class="string">"-Djava.security.auth.login.config=../config/jaas.conf"</span></span><br><span class="line"><span class="constant">KAFKA_OPTS</span>=<span class="string">"$KAFKA_SASL_OPTS $KAFKA_OPTS"</span></span><br></pre></td></tr></table></figure>
<p>客户端也需要添加两个配置项，下面以控制台的生产者和消费者为例，说明客户端的身份认证：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ vi config/producer<span class="class">.properties</span></span><br><span class="line">security.protocol=SASL_PLAINTEXT</span><br><span class="line">sasl.mechanism=PLAIN</span><br><span class="line"></span><br><span class="line">$ vi config/consumer<span class="class">.properties</span></span><br><span class="line">security.protocol=SASL_PLAINTEXT</span><br><span class="line">sasl.mechanism=PLAIN</span><br><span class="line"></span><br><span class="line">$ bin/kafka-console-producer<span class="class">.sh</span> --broker-list localhost:<span class="number">9092</span> \</span><br><span class="line">  --topic test-security --producer<span class="class">.config</span> config/producer<span class="class">.properties</span></span><br><span class="line">hello</span><br><span class="line"></span><br><span class="line">$ bin/kafka-console-consumer<span class="class">.sh</span> --new-consumer \</span><br><span class="line">  --bootstrap-server localhost:<span class="number">9092</span> --topic test-security \</span><br><span class="line">  --from-beginning --consumer<span class="class">.config</span> config/consumer<span class="class">.properties</span></span><br><span class="line">hello</span><br></pre></td></tr></table></figure>
<p>如果使用代码，还需要设置<code>java.security.auth.login.config</code>为系统的环境变量配置。下面是生产者使用身份认证的示例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaProducerDemo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 设置客户端登陆的身份认证机制，指定配置文件</span></span><br><span class="line">    System.setProperty(<span class="string">"java.security.auth.login.config"</span>, </span><br><span class="line">      <span class="string">"/Users/zhengqh/.../resources/kafka_client_jaas.conf"</span>);</span><br><span class="line">    Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">    props.put(<span class="string">"bootstrap.servers"</span>, <span class="string">"localhost:9092"</span>);</span><br><span class="line">    props.put(<span class="string">"client.id"</span>, <span class="string">"DemoProducer"</span>);</span><br><span class="line">    props.put(<span class="string">"key.serializer"</span>, <span class="string">"org.apache.kafka.common.serialization.IntegerSerializer"</span>);</span><br><span class="line">    props.put(<span class="string">"value.serializer"</span>,  <span class="string">"org.apache.kafka.common.serialization.StringSerializer"</span>);</span><br><span class="line">    props.put(<span class="string">"security.protocol"</span>, <span class="string">"SASL_PLAINTEXT"</span>); <span class="comment">// 安全协议类型</span></span><br><span class="line">    props.put(<span class="string">"sasl.mechanism"</span>, <span class="string">"PLAIN"</span>); <span class="comment">// 安全机制</span></span><br><span class="line">    KafkaProducer&lt;Integer, String&gt; producer = <span class="keyword">new</span> KafkaProducer&lt;&gt;(props);</span><br><span class="line">    ProducerRecord&lt;Integer, String&gt; record1 = <span class="keyword">new</span> ProducerRecord&lt;Integer, String&gt;(<span class="string">"test-security"</span>, <span class="number">1</span>, <span class="string">"one"</span>);</span><br><span class="line">    producer.send(record1, <span class="keyword">new</span> Callback() &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompletion</span><span class="params">(RecordMetadata recordMetadata,Exception e)</span></span>&#123;</span><br><span class="line">        System.out.println(recordMetadata);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    producer.flush();</span><br><span class="line">    producer.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面我们只分析了<code>SASL_PLAINTEXT</code>安全协议的例子，Kafka支持的其他安全协议以及权限认证可以参考官方的文档。另外，服务端与ZooKeeper以及服务端之间也都有安全机制和身份认证机制，这里就不再深入分析。</p>
<h2 id="11-3_Kafka配置">11.3 Kafka配置</h2><p>Kafka官方文档中针对服务端（代理节点）、主题、生产者、消费者都有完整的配置说明，下面列举了比较重要的一些配置项。</p>
<h3 id="11-3-1_服务端的配置项">11.3.1 服务端的配置项</h3><p>服务端的配置项参见表1。</p>
<p>表1 服务端配置信息</p>
<table>
<thead>
<tr>
<th>配置项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>broker.id</code></td>
<td>Kafka服务器的编号，同一个集群不同节点的编号应该唯一</td>
</tr>
<tr>
<td><code>zookeeper.connect</code></td>
<td>连接ZooKeeper的地址，不同Kafka集群如果连接到同一个ZooKeeper，应该使用不同的chroot路径</td>
</tr>
<tr>
<td><code>auto.create.topics.enable</code></td>
<td>自动创建主题，默认为<code>true</code></td>
</tr>
<tr>
<td><code>auto.leader.rebalance.enable</code></td>
<td>开启主副本自动平衡，当节点宕机后，会影响这个节点上的主副本转移到其他节点，宕机的节点重启后只能作为备份副本，如果开启平衡，则会将主副本转移到原节点</td>
</tr>
<tr>
<td><code>delete.topic.enable</code></td>
<td>自动删除主题，默认为<code>false</code>，通过<code>delete</code>命令删除主题，并不会物理删除，只有开启该选项才会真正删除主题的日志文件</td>
</tr>
<tr>
<td><code>log.dirs</code></td>
<td>日志文件的目录，可以指定多个目录。默认是/tmp/kafka-logs</td>
</tr>
<tr>
<td><code>log.flush.interval.messages</code></td>
<td>在消息集刷写到磁盘之前需要收集的消息数量，默认值为<code>Long.MAX</code></td>
</tr>
<tr>
<td><code>log.flush.scheduler.interval.ms</code></td>
<td>日志刷新线程过久，检查一次是否有日志文件需要刷写到磁盘，默认值为<code>Long.MAX</code>。</td>
</tr>
<tr>
<td><code>log.retention.bytes</code></td>
<td>日志文件超过最大大小时删除旧数据，默认值为<code>-1</code>，即永不会删除</td>
</tr>
<tr>
<td><code>log.retention.hours</code></td>
<td>日志文件保留的时间，默认为168小时，即7天</td>
</tr>
<tr>
<td><code>log.segment.bytes</code></td>
<td>单个日志文件片段的最大值，默认为1 GB，日志超过1 GB后会刷写到磁盘</td>
</tr>
<tr>
<td><code>message.max.bytes</code></td>
<td>服务端接收的消息最大值，默认为1 MB，即一批消息最大不能超过1 MB</td>
</tr>
<tr>
<td><code>min.insync.replicas</code></td>
<td>当生产者的应答策略设置为<code>all</code>时，写操作的数量必须满足该值才算成功。默认值为<code>1</code>，表示只要写到一个节点就算成功</td>
</tr>
<tr>
<td><code>offsets.commit.required.acks</code></td>
<td>消费者提交偏移量和生产者写消息的行为类似，用应答来表示写操作是否成功，默认值为<code>-1</code></td>
</tr>
<tr>
<td><code>offsets.commit.timeout.ms</code></td>
<td>类似于生产者的请求超时时间，写请求会被延迟，默认5秒</td>
</tr>
<tr>
<td><code>offsets.topic.num.partitions</code></td>
<td>消费者提交偏移量内部主题的分区数量，默认为50个</td>
</tr>
<tr>
<td><code>offsets.topic.replication.factor</code></td>
<td>消费者提交偏移量内部主题的副本数量，默认为3个</td>
</tr>
<tr>
<td><code>replica.fetch.min.bytes</code></td>
<td>每个拉取请求最少要拉取的字节数量，默认为1byte。</td>
</tr>
<tr>
<td><code>replica.fetch.wait.max.ms</code></td>
<td>每个拉取请求的最大等待时间，默认为500毫秒</td>
</tr>
<tr>
<td><code>replica.lag.time.max.ms</code></td>
<td>备份副本在指定时间内都没有发送拉取请求，或者在这个时间内仍然没有赶上主副本，它将会被从ISR中移除，默认10秒</td>
</tr>
<tr>
<td><code>request.timeout.ms</code></td>
<td>客户端从发送请求到接收响应的超时时间，默认30秒</td>
</tr>
<tr>
<td><code>zookeeper.session.timeout.ms</code></td>
<td>ZooKeeper会话的超时时间，默认6秒</td>
</tr>
<tr>
<td><code>default.replication.factor</code></td>
<td>自动创建的主题的副本数，默认为1个</td>
</tr>
<tr>
<td><code>log.cleaner.delete.retention.ms</code></td>
<td>被删除的记录保存的时间，默认为1天</td>
</tr>
<tr>
<td><code>log.cleaner.enable</code></td>
<td>是否开启日志清理线程，当清理策略为<code>compact</code>时，建议开启</td>
</tr>
<tr>
<td><code>log.index.interval.bytes</code></td>
<td>添加1条索引到日志文件的间隔，默认为4096条</td>
</tr>
<tr>
<td><code>log.index.size.max.bytes</code></td>
<td>索引文件的最大大小，默认为10 MB</td>
</tr>
<tr>
<td><code>num.partitions</code></td>
<td>每个主题的分区数量，默认为1个</td>
</tr>
<tr>
<td><code>replica.fetch.max.bytes</code></td>
<td>拉取请求中每个分区的消息最大值，默认为1 MB</td>
</tr>
<tr>
<td><code>replica.fetch.response.max.bytes</code></td>
<td>整个拉取请求的消息最大值，默认为10 MB</td>
</tr>
</tbody>
</table>
<p>主题级别的一些配置和服务端级别的设置类似，比如<code>flush.messages</code>类似<code>log.flush.interval.messages</code>，表示刷写到磁盘的消息数量；<code>flush.ms</code>类似<code>log.flush.scheduler.interval.ms</code>，表示刷写到磁盘的时间间隔；<code>max.message.bytes</code>类似<code>message.max.bytes</code>，表示服务端接收的单条消息大小。</p>
<h3 id="11-3-2_生产者的配置项">11.3.2 生产者的配置项</h3><p>生产者配置信息参见表2。</p>
<p>表2 生产者配置信息</p>
<table>
<thead>
<tr>
<th>配置项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>bootstrap.servers</code></td>
<td>生产者客户端连接Kafka集群的地址和端口，多个节点用逗号分隔</td>
</tr>
<tr>
<td><code>acks</code></td>
<td>生产者请求要求主副本收到的应答数量满足后，写请求才算成功。<code>0</code>表示记录添加到网络缓冲区后就认为已经发送，生产者不会等待服务端的任何应答；<code>1</code>表示主副本会将记录到本地日志文件，但不会等待任何备份副本的应答；<code>-1</code>或<code>all</code>表示主副本必须等待ISR中所有副本都返回应答给它</td>
</tr>
<tr>
<td><code>retries</code></td>
<td>发送时出现短暂的错误或者收到错误码，客户端会重新发送记录。如果<code>max.in.flight.requests.per.connection</code>没有设置为<code>1</code>，在异常重试时，服务端收到的记录可能是乱序的</td>
</tr>
<tr>
<td><code>buffer.memory</code></td>
<td>生产者发送记录给服务端在客户端的缓冲区，默认为32 MB</td>
</tr>
<tr>
<td><code>batch.size</code></td>
<td>当多条记录发送到同一个分区，生产者会尝试将一批记录分成更少的请求，来提高客户端和服务端的性能，默认每一个Batch的大小为16 KB。如果一条记录就超过了16 KB，则这条记录不会和其他记录组成Batch。Batch太小会减小吞吐量，Batch太大会占用太多的内存</td>
</tr>
<tr>
<td><code>max.request.size</code></td>
<td>一个请求的最大值，实际上也是记录的最大值。注意服务端关于记录的最大值（Broker的<code>message.max.bytes</code>，或者Topic的<code>max.message.bytes</code>）可能和它不同（实际上默认值都是1 MB）。这个配置项会限制生产者一个请求中Batch的记录数，防止发送过大的请求</td>
</tr>
<tr>
<td><code>partitioner.class</code></td>
<td>消息的分区语义，对消息进行路由到指定的分区，实现分区接口</td>
</tr>
<tr>
<td><code>request.timeout.ms</code></td>
<td>客户端等待一个请求的响应的最长时间，超时后客户端会重新发送或失败</td>
</tr>
<tr>
<td><code>timeout.ms</code></td>
<td>服务端等待备份的应答来达到生产者设置的<code>ack</code>的最长时间，超时后不满足失败</td>
</tr>
</tbody>
</table>
<h3 id="11-3-3_新消费者的配置项">11.3.3 新消费者的配置项</h3><p>新消费者的配置信息参见表3。</p>
<p>表3 新消费者的配置信息</p>
<table>
<thead>
<tr>
<th>配置项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>fetch.min.bytes</code></td>
<td>拉取请求要求服务端返回的数据最小值，如果服务端的数据量还不够，客户端的请求会一直等待，直到服务端收集到足够的数据才会返回响应给客户端。默认值为1个字节，表示服务端处理的拉取请求数据量只要达到1个字节就立即收到响应，或者因为在等待数据的到达一直没有满足最小值时而超时后，拉取请求也会结束。将该值设置大一点，可以牺牲一些延迟来获取服务端更高的吞吐量</td>
</tr>
<tr>
<td><code>fetch.max.bytes</code></td>
<td>服务端对一个拉取请求返回数据的最大值，默认值为50 MB</td>
</tr>
<tr>
<td><code>fetch.max.wait.ms</code></td>
<td>在没有收集到满足<code>fetch.min.bytes</code>大小的数据之前，服务端对拉取请求的响应会阻塞直到超时，默认500毫秒</td>
</tr>
<tr>
<td><code>group.id</code></td>
<td>消费者所述的唯一消费组名称，在使用基于Kafka的偏移量管理策略，或者使用消费组管理协议的订阅方法时，必须指定消费组名称</td>
</tr>
<tr>
<td><code>heartbeat.interval.ms</code></td>
<td>使用消费组管理协议时消费者和协调者的心跳间隔，心跳用来确保消费者的会话保持活动的状态，以及当有新消费者加入或消费者离开时可以更容易地进行平衡，该选项必须比<code>session.timeout.ms</code>小，通常设置为不大于它的1/3。默认值为3秒，我们可以将心跳值设置得更低，来更好地控制平衡：需要平衡时，心跳间隔越短就能越快地感知到</td>
</tr>
<tr>
<td><code>max.partition.fetch.bytes</code></td>
<td>服务端返回的数据中每个分区的最大值，默认值为1 MB</td>
</tr>
<tr>
<td><code>session.timeout.ms</code></td>
<td>使用消费组管理协议检测到消费者失败的最大时间，消费者定时地向Broker发送心跳表示处于存活状态。服务端的Broker会记录消费者的心跳时间，如果在指定的会话时间内都没有收到消费者的心跳，Broker会将其从消费组中移除并启动一次平衡</td>
</tr>
<tr>
<td><code>auto.offset.reset</code></td>
<td>Kafka中没有分区的初始偏移量，消费者任何定位分区位置。<code>earliest</code>表示重置到最旧的位置；<code>latest</code>表示重置到最新的位置，默认值为<code>latest</code></td>
</tr>
<tr>
<td><code>enable.auto.commit</code></td>
<td>消费者的偏移量是否会在后台定时地提交，默认值为<code>true</code></td>
</tr>
<tr>
<td><code>auto.commit.interval.ms</code></td>
<td>消费者自动提交偏移量的时间间隔，默认值为5秒</td>
</tr>
<tr>
<td><code>max.poll.interval.ms</code></td>
<td>使用消费组管理协议时，在调用<code>poll()</code>之间的最大延迟，它设置了消费者在下一次拉取更多记录之前允许的最长停顿时间。如果超时后消费者仍然没有调用<code>poll()</code>，那么消费者就会被认为失败了，就会启动消费组的平衡，默认值为5秒</td>
</tr>
<tr>
<td><code>max.poll.records</code></td>
<td>在一次<code>poll()</code>调用中允许返回的最大记录数，默认值为500条</td>
</tr>
<tr>
<td><code>partition.assignment.strategy</code></td>
<td>使用消费者管理协议时，消费者实例之间用来进行分区分配的策略，默认值为<code>RangeAssignor</code></td>
</tr>
</tbody>
</table>
<h2 id="11-4_Kafka其他操作实验">11.4 Kafka其他操作实验</h2><h3 id="11-4-1_ZooKeeper连接配置">11.4.1 ZooKeeper连接配置</h3><p>Kafka的ZooKeeper配置和命令行的ZooKeeper地址不一致导致连接不上ZooKeeper，下面是server.properties的ZooKeeper连接配置，指定了Kafka在ZooKeeper中的根节点是<code>/kafka</code>：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">broker.id=<span class="number">0</span></span><br><span class="line"><span class="preprocessor">#listeners=PLAINTEXT:<span class="comment">//:9092</span></span></span><br><span class="line">zookeeper.connect=localhost:<span class="number">2181</span>/kafka</span><br><span class="line"><span class="built_in">log</span>.dirs=/tmp/kafka-logs</span><br></pre></td></tr></table></figure>
<p>如果命令行中连接的ZooKeeper地址没有加上<code>/kafka</code>，创建主题会报错可用的节点为0，加上<code>/kafka</code>后可以成功创建主题：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ bin/kafka-topics<span class="class">.sh</span> --create --zookeeper localhost:<span class="number">2181</span> \</span><br><span class="line">--replication-factor <span class="number">1</span> --partitions <span class="number">1</span> --topic test</span><br><span class="line">Error while executing topic command : RF: <span class="number">1</span> larger than available brokers: <span class="number">0</span></span><br><span class="line">ERROR AdminOperationException: RF: <span class="number">1</span> larger than available brokers: <span class="number">0</span></span><br><span class="line">    at kafka<span class="class">.admin</span><span class="class">.AdminUtils</span>$.<span class="function"><span class="title">assignReplicasToBrokers</span><span class="params">(AdminUtils.scala:<span class="number">117</span>)</span></span></span><br><span class="line">    at kafka<span class="class">.admin</span><span class="class">.AdminUtils</span>$.<span class="function"><span class="title">createTopic</span><span class="params">(AdminUtils.scala:<span class="number">403</span>)</span></span></span><br><span class="line">    at kafka<span class="class">.admin</span><span class="class">.TopicCommand</span>$.<span class="function"><span class="title">createTopic</span><span class="params">(TopicCommand.scala:<span class="number">110</span>)</span></span></span><br><span class="line">    at kafka<span class="class">.admin</span><span class="class">.TopicCommand</span>$.<span class="function"><span class="title">main</span><span class="params">(TopicCommand.scala:<span class="number">61</span>)</span></span></span><br><span class="line">    at kafka<span class="class">.admin</span><span class="class">.TopicCommand</span><span class="class">.main</span>(TopicCommand.scala)</span><br><span class="line"></span><br><span class="line">$ bin/kafka-topics<span class="class">.sh</span> --create --zookeeper localhost:<span class="number">2181</span>/kafka \</span><br><span class="line">--replication-factor <span class="number">1</span> --partitions <span class="number">1</span> --topic test</span><br><span class="line">Created topic <span class="string">"test"</span>.</span><br><span class="line">$ bin/kafka-topics<span class="class">.sh</span> --list --zookeeper localhost:<span class="number">2181</span>/kafka</span><br><span class="line">test</span><br></pre></td></tr></table></figure>
<p>生产者连接的是Kafka代理节点的地址，和ZooKeeper没有关系。而旧消费者连接的是ZooKeeper，所以也要加上<code>/kafka</code>才能读取到消息：</p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ bin/kafka-<span class="built_in">console</span>-producer.sh --broker-list <span class="attribute">localhost</span>:<span class="number">9092</span> --topic test</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> a message</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> another message</span><br><span class="line">$ bin/kafka-<span class="built_in">console</span>-consumer.sh --zookeeper <span class="attribute">localhost</span>:<span class="number">2181</span>/kafka <span class="string">\</span></span><br><span class="line">  --topic test --<span class="keyword">from</span>-beginning</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> a message</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> another message</span><br></pre></td></tr></table></figure>
<p>上面的实验通过在Kafka服务端的配置文件中设置ZooKeeper根节点，可以在一个ZooKeeper中区分多个Kafka集群。下面的实验就利用了该功能。</p>
<h3 id="11-4-2_MirrorMaker演示消费者线程数量">11.4.2 <code>MirrorMaker</code>演示消费者线程数量</h3><p>单机模拟多个Kafka集群，每个集群各自只有一台服务器。不同Kafka集群的<code>zookeeper.connect</code>配置项分别是：<code>localhost:2181/kafka</code>和<code>localhost:2181/kafka_dc</code>（这两个集群叫作kafka集群、kafka_dc集群）。查看ZooKeeper的节点，因为是不同的Kafka集群，所以代理节点的编号可以一样（当然由于在本机模拟多个集群，端口号不能一样）：</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">zk:</span> localhost:2181<span class="list">(<span class="keyword">CONNECTED</span>)</span> <span class="number">0</span>] ls /</span><br><span class="line"><span class="list">[<span class="keyword">kafka_dc</span>, zookeeper, kafka]</span><br><span class="line"><span class="list">[<span class="keyword">zk:</span> localhost:2181<span class="list">(<span class="keyword">CONNECTED</span>)</span> <span class="number">3</span>] ls /kafka/brokers/ids</span><br><span class="line"><span class="list">[<span class="keyword">0</span>]</span><br><span class="line"><span class="list">[<span class="keyword">zk:</span> localhost:2181<span class="list">(<span class="keyword">CONNECTED</span>)</span> <span class="number">4</span>] ls /kafka_dc/brokers/ids</span><br><span class="line"><span class="list">[<span class="keyword">0</span>]</span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
<p>在Kafka集群创建分区数只有一个的主题<code>test</code>，然后启动<code>MirrorMaker</code>，设置消费者线程数量为3：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ bin/kafka-mirror-maker<span class="class">.sh</span> --num<span class="class">.streams</span> <span class="number">3</span> \</span><br><span class="line">  --consumer<span class="class">.config</span> config/consumer_source<span class="class">.properties</span> \</span><br><span class="line">  --producer<span class="class">.config</span> config/producer_dest<span class="class">.properties</span> --whitelist test</span><br></pre></td></tr></table></figure>
<p>ZooKeeper中消费者的数量也有3个，但是因为分区只有一个，消费者<code>Owner</code>也只有一个：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">zk:</span> <span class="string">localhost:</span><span class="number">2181</span>] ls <span class="regexp">/kafka/</span>consumers<span class="regexp">/mm/</span>ids</span><br><span class="line">[mm_zqhmac-dd52d0ea, mm_zqhmac-<span class="number">60</span>c27086, mm_zqhmac-d0eece39]</span><br><span class="line">[<span class="string">zk:</span> <span class="string">localhost:</span><span class="number">2181</span>] get <span class="regexp">/kafka/</span>consumers<span class="regexp">/mm/</span>owners<span class="regexp">/test/</span><span class="number">0</span></span><br><span class="line">mm_zqhmac-<span class="number">60</span>c27086-<span class="number">0</span></span><br><span class="line">[<span class="string">zk:</span> <span class="string">localhost:</span><span class="number">2181</span>] get <span class="regexp">/kafka/</span>consumers<span class="regexp">/mm/</span>ids/mm_zqhmac-<span class="number">60</span>c27086</span><br><span class="line">&#123;<span class="string">"version"</span>:<span class="number">1</span>,<span class="string">"subscription"</span>:&#123;<span class="string">"test"</span>:<span class="number">1</span>&#125;,<span class="string">"pattern"</span>:<span class="string">"white_list"</span>&#125;</span><br></pre></td></tr></table></figure>
<p>因为消费者数量比分区的数量要多，所以有些消费者会分配不到分区。在执行<code>MirrorMaker</code>程序时，控制台会提示有两个消费者线程没有分配到分区。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WARN <span class="keyword">No</span> broker partitions consumed <span class="keyword">by</span> consumer thread </span><br><span class="line">  mm_zqhmac-d0eece39-0 <span class="keyword">for</span> topic <span class="keyword">test</span> (kafka.consumer.RangeAssignor)</span><br><span class="line">WARN <span class="keyword">No</span> broker partitions consumed <span class="keyword">by</span> consumer thread </span><br><span class="line">  mm_zqhmac-dd52d0ea-0 <span class="keyword">for</span> topic <span class="keyword">test</span> (kafka.consumer.RangeAssignor)</span><br></pre></td></tr></table></figure>
<p>通过控制台的消费者检查<code>Mirror</code>（kafka_dc）目标集群是否有数据写入，可以看到虽然我们没有在kafka_dc集群创建<code>test</code>主题，但是通过镜像工具，源集群的数据会复制到目标集群。</p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ bin/kafka-topics.sh --list --zookeeper <span class="attribute">localhost</span>:<span class="number">2181</span>/kafka_dc</span><br><span class="line">test</span><br><span class="line">$ bin/kafka-<span class="built_in">console</span>-consumer.sh --zookeeper <span class="attribute">localhost</span>:<span class="number">2181</span>/kafka_dc <span class="string">\</span></span><br><span class="line">  --topic test --<span class="keyword">from</span>-beginning</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> third message</span><br><span class="line"><span class="keyword">this</span> <span class="keyword">is</span> fouth message</span><br></pre></td></tr></table></figure>
<p>检查消费组所有消费者的消费情况，也只有一个消费者：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ bin/kafka-run-<span class="keyword">class</span>.sh kafka.tools.ConsumerOffsetChecker \</span><br><span class="line">    --group mm --zookeeper localhost:<span class="number">2181</span>/kafka --topic test</span><br><span class="line">Group  Topic  Pid   Offset  logSize   Lag    Owner</span><br><span class="line">mm     test   <span class="number">0</span>     <span class="number">4</span>       <span class="number">4</span>         <span class="number">0</span>      mm_zqhmac-<span class="number">60</span>c27086-<span class="number">0</span></span><br></pre></td></tr></table></figure>
<h3 id="11-4-3_生产者和消费者性能测试">11.4.3 生产者和消费者性能测试</h3><p>Kafka提供了一些工具类，包括生产者和消费者的性能测试，端到端的延迟。下面的实验是在一个小型的Kafka集群上，并且测试主题<code>test-rep-3</code>有3个副本、6个分区：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ zookeeper=<span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">2181</span>,<span class="number">192.168</span><span class="number">.6</span><span class="number">.56</span>:<span class="number">2181</span>,<span class="number">192.168</span><span class="number">.6</span><span class="number">.57</span>:<span class="number">2181</span>/kafka010</span><br><span class="line">$ kafka=<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">9092</span>,<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">9093</span>,<span class="number">192.168</span><span class="number">.6</span><span class="number">.53</span>:<span class="number">9094</span>,<span class="number">192.168</span><span class="number">.6</span><span class="number">.53</span>:<span class="number">9095</span></span><br><span class="line">$ bin/kafka-topics.sh --zookeeper $zookeeper --create \</span><br><span class="line">    --topic test-rep-<span class="number">3</span> --partitions <span class="number">6</span> --replication-factor <span class="number">3</span></span><br><span class="line">$ bin/kafka-topics.sh --describe --zookeeper $zookeeper --topic test-rep-<span class="number">3</span></span><br><span class="line">Topic:test-rep-<span class="number">3</span>    PartitionCount:<span class="number">6</span>    ReplicationFactor:<span class="number">3</span> Configs:</span><br><span class="line">Topic: test-rep-<span class="number">3</span>   Partition: <span class="number">0</span>    主副本: <span class="number">3</span>   Replicas: <span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span> Isr: <span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span></span><br><span class="line">Topic: test-rep-<span class="number">3</span>   Partition: <span class="number">1</span>    主副本: <span class="number">0</span>   Replicas: <span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span> Isr: <span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span></span><br><span class="line">Topic: test-rep-<span class="number">3</span>   Partition: <span class="number">2</span>    主副本: <span class="number">1</span>   Replicas: <span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span> Isr: <span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span></span><br><span class="line">Topic: test-rep-<span class="number">3</span>   Partition: <span class="number">3</span>    主副本: <span class="number">2</span>   Replicas: <span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span> Isr: <span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span></span><br><span class="line">Topic: test-rep-<span class="number">3</span>   Partition: <span class="number">4</span>    主副本: <span class="number">3</span>   Replicas: <span class="number">3</span>,<span class="number">0</span>,<span class="number">1</span> Isr: <span class="number">3</span>,<span class="number">0</span>,<span class="number">1</span></span><br><span class="line">Topic: test-rep-<span class="number">3</span>   Partition: <span class="number">5</span>    主副本: <span class="number">0</span>   Replicas: <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> Isr: <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>接着对生产者和消费者进行性能测试（笔者的测试环境还有其他服务，所以测试结果并不是很理想，如果要对Kafka进行压测，最好模拟线上的机器配置）：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#####生产者性能测试#####</span></span><br><span class="line">$ bin/kafka-run-<span class="keyword">class</span>.sh org.apache.kafka.tools.ProducerPerformance \</span><br><span class="line">    --topic test-rep-<span class="number">3</span> --num-records <span class="number">50000000</span> --record-size <span class="number">100</span> \</span><br><span class="line">    --throughput -<span class="number">1</span> --producer-props acks=<span class="number">1</span> buffer.memory=<span class="number">67108864</span> \</span><br><span class="line">    batch.size=<span class="number">8196</span> bootstrap.servers=$kafka</span><br><span class="line"><span class="preprocessor">## 第一次在集群内测试</span></span><br><span class="line"><span class="number">50000000</span> records sent, <span class="number">749906.261717</span> records/sec (<span class="number">71.52</span> MB/sec), </span><br><span class="line"><span class="number">50.73</span> ms avg latency, <span class="number">1356.00</span> ms max latency, </span><br><span class="line"><span class="number">2</span> ms <span class="number">50</span>th, <span class="number">266</span> ms <span class="number">95</span>th, <span class="number">603</span> ms <span class="number">99</span>th, <span class="number">1327</span> ms <span class="number">99.9</span>th.</span><br><span class="line"><span class="preprocessor">## 第二次在集群内测试</span></span><br><span class="line"><span class="number">50000000</span> records sent, <span class="number">84956.858907</span> records/sec (<span class="number">8.10</span> MB/sec), </span><br><span class="line"><span class="number">5781.48</span> ms avg latency, <span class="number">17968.00</span> ms max latency, </span><br><span class="line"><span class="number">9872</span> ms <span class="number">50</span>th, <span class="number">16705</span> ms <span class="number">95</span>th, <span class="number">17492</span> ms <span class="number">99</span>th, <span class="number">17909</span> ms <span class="number">99.9</span>th.</span><br><span class="line"><span class="preprocessor">## 第三次在集群外测试</span></span><br><span class="line"><span class="number">50000000</span> records sent, <span class="number">42554.459069</span> records/sec (<span class="number">4.06</span> MB/sec), </span><br><span class="line"><span class="number">11455.58</span> ms avg latency, <span class="number">51425.00</span> ms max latency, </span><br><span class="line"><span class="number">82</span> ms <span class="number">50</span>th, <span class="number">29290</span> ms <span class="number">95</span>th, <span class="number">30192</span> ms <span class="number">99</span>th, <span class="number">36732</span> ms <span class="number">99.9</span>th.</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#####消费者性能测试#####</span></span><br><span class="line">$ bin/kafka-consumer-perf-test.sh --zookeeper $zookeeper \</span><br><span class="line">    --messages <span class="number">50000000</span> --topic test-rep-<span class="number">3</span> --threads <span class="number">1</span></span><br><span class="line"><span class="preprocessor">## 第一次在集群内测试</span></span><br><span class="line">start, end, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec</span><br><span class="line"><span class="number">17</span>:<span class="number">00</span>:<span class="number">32</span>:<span class="number">149</span>, <span class="number">17</span>:<span class="number">00</span>:<span class="number">56</span>:<span class="number">811</span>, <span class="number">4767.4932</span>, <span class="number">193.3133</span>, <span class="number">49990789</span>, <span class="number">2027037.1016</span></span><br><span class="line"><span class="preprocessor">## 第二次在集群内测试</span></span><br><span class="line"><span class="number">17</span>:<span class="number">39</span>:<span class="number">11</span>:<span class="number">883</span>, <span class="number">17</span>:<span class="number">44</span>:<span class="number">03</span>:<span class="number">117</span>, <span class="number">4768.3716</span>, <span class="number">16.3730</span>, <span class="number">50000000</span>, <span class="number">171683.2513</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 消费者性能测试（多线程）</span></span><br><span class="line">$ bin/kafka-consumer-perf-test.sh --zookeeper $zookeeper \</span><br><span class="line">    --messages <span class="number">50000000</span> --topic test-rep-<span class="number">3</span> --threads <span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>在生产者的测试过程中，有些分区由于网络或者其他原因会对ISR进行调整，日志如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO Partition [test-rep-<span class="number">3</span>,<span class="number">1</span>] on broker <span class="number">0</span>: Shrinking ISR from <span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span> to <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">INFO Partition [test-rep-<span class="number">3</span>,<span class="number">5</span>] on broker <span class="number">0</span>: Expanding ISR from <span class="number">0</span>,<span class="number">1</span> to <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span></span><br><span class="line">INFO Partition [test-rep-<span class="number">3</span>,<span class="number">1</span>] on broker <span class="number">0</span>: Expanding ISR from <span class="number">0</span>,<span class="number">1</span> to <span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>这时如果查看主题信息，会发现主题中每个分区的ISR和最开始创建的时候不同。不过等生产者测试运行完毕，再过一段时间，就会恢复到刚开始的ISR，这是因为默认开启了主副本自动迁移：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ bin/kafka-topics.sh --describe --zookeeper $zookeeper --topic test-rep-<span class="number">3</span></span><br><span class="line">Topic:test-rep-<span class="number">3</span>    PartitionCount:<span class="number">6</span>    ReplicationFactor:<span class="number">3</span> Configs:</span><br><span class="line">Topic:test-rep-<span class="number">3</span>   Partition: <span class="number">0</span>    主副本: <span class="number">3</span>   Replicas: <span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span> Isr: <span class="number">3</span>,<span class="number">2</span></span><br><span class="line">Topic:test-rep-<span class="number">3</span>   Partition: <span class="number">1</span>    主副本: <span class="number">0</span>   Replicas: <span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span> Isr: <span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span></span><br><span class="line">Topic:test-rep-<span class="number">3</span>   Partition: <span class="number">2</span>    主副本: <span class="number">1</span>   Replicas: <span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span> Isr: <span class="number">1</span>,<span class="number">0</span></span><br><span class="line">Topic:test-rep-<span class="number">3</span>   Partition: <span class="number">3</span>    主副本: <span class="number">2</span>   Replicas: <span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span> Isr: <span class="number">2</span>,<span class="number">3</span></span><br><span class="line">Topic:test-rep-<span class="number">3</span>   Partition: <span class="number">4</span>    主副本: <span class="number">3</span>   Replicas: <span class="number">3</span>,<span class="number">0</span>,<span class="number">1</span> Isr: <span class="number">3</span></span><br><span class="line">Topic:test-rep-<span class="number">3</span>   Partition: <span class="number">5</span>    主副本: <span class="number">0</span>   Replicas: <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> Isr: <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span></span><br></pre></td></tr></table></figure>
<h2 id="11-5_第三方工具">11.5 第三方工具</h2><h3 id="11-5-1_Confluent_Platform">11.5.1 Confluent Platform</h3><p>Confluent的各个组件和默认端口如下：</p>
<table>
<thead>
<tr>
<th>Component</th>
<th>Default Port</th>
</tr>
</thead>
<tbody>
<tr>
<td>Zookeeper</td>
<td>2181</td>
</tr>
<tr>
<td>Apache Kafka brokers (plain text)</td>
<td>9092</td>
</tr>
<tr>
<td>Schema Registry REST API</td>
<td>8081</td>
</tr>
<tr>
<td>REST Proxy</td>
<td>8082</td>
</tr>
<tr>
<td>Kafka Connect REST API</td>
<td>8083</td>
</tr>
<tr>
<td>Confluent Control Center</td>
<td>9021</td>
</tr>
</tbody>
</table>
<p>安装包主要有三个目录：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">confluent-<span class="number">3.3</span><span class="number">.0</span>/bin/        <span class="preprocessor"># Driver scripts for starting/stopping services</span></span><br><span class="line">confluent-<span class="number">3.3</span><span class="number">.0</span>/etc/        <span class="preprocessor"># Configuration files</span></span><br><span class="line">confluent-<span class="number">3.3</span><span class="number">.0</span>/share/java/ <span class="preprocessor"># Jars</span></span><br></pre></td></tr></table></figure>
<p>启动各个组件：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./bin/zookeeper-server-<span class="operator"><span class="keyword">start</span> ./etc/kafka/zookeeper.properties &amp;</span><br><span class="line">./<span class="keyword">bin</span>/kafka-<span class="keyword">server</span>-<span class="keyword">start</span> ./etc/kafka/<span class="keyword">server</span>.properties &amp;</span><br><span class="line">./<span class="keyword">bin</span>/<span class="keyword">schema</span>-registry-<span class="keyword">start</span> ./etc/<span class="keyword">schema</span>-registry/<span class="keyword">schema</span>-registry.properties &amp;</span></span><br></pre></td></tr></table></figure>
<h4 id="1-_控制中心（Controll_Center）">1. 控制中心（Controll Center）</h4><p>Confluent商业产品的一个重要功能是控制中心（Controll Center）。在启动控制中心之前呢，需要修改下面三个文件的配置信息：</p>
<ul>
<li>Kafka服务端的配置文件：etc/kafka/server.properties</li>
<li>Kafka Connect集群的配置文件：etc/kafka/connect-distributed.properties</li>
<li>控制中心中心的配置文件：etc/confluent-control-center/control-center.properties</li>
</ul>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'s/#metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter/metric.reporters=io.confluent.metrics.reporter.ConfluentMetricsReporter/g'</span> &amp;&amp; \</span><br><span class="line">sed <span class="string">'s/#confluent.metrics.reporter.bootstrap.servers=localhost:9092/confluent.metrics.reporter.bootstrap.servers=localhost:9092/g'</span> &amp;&amp; \</span><br><span class="line">sed <span class="string">'s/#confluent.metrics.reporter.zookeeper.connect=localhost:2181/confluent.metrics.reporter.zookeeper.connect=localhost:2181/g'</span> &amp;&amp; \</span><br><span class="line">sed <span class="string">'s/#confluent.metrics.reporter.topic.replicas=1/confluent.metrics.reporter.topic.replicas=1/g'</span> \</span><br><span class="line">etc/kafka/server.properties</span><br><span class="line"></span><br><span class="line"><span class="keyword">cat</span> &lt;&lt;EOF &gt;&gt; etc/kafka/connect-distributed.properties</span><br><span class="line"></span><br><span class="line"># Interceptor setup</span><br><span class="line">consumer.interceptor.classes=io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor</span><br><span class="line">producer.interceptor.classes=io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="keyword">cat</span> &lt;&lt;EOF &gt;&gt; etc/confluent-control-<span class="keyword">center</span>/control-<span class="keyword">center</span>.properties</span><br><span class="line"></span><br><span class="line"># Quickstart partition <span class="built_in">and</span> replication <span class="built_in">values</span></span><br><span class="line">confluent.controlcenter.internal.topics.partitions=<span class="number">1</span></span><br><span class="line">confluent.controlcenter.internal.topics.replication=<span class="number">1</span></span><br><span class="line">confluent.controlcenter.<span class="keyword">command</span>.topic.replication=<span class="number">1</span></span><br><span class="line">confluent.monitoring.interceptor.topic.partitions=<span class="number">1</span></span><br><span class="line">confluent.monitoring.interceptor.topic.replication=<span class="number">1</span></span><br><span class="line">confluent.metrics.topic.partition=<span class="number">1</span></span><br><span class="line">confluent.metrics.topic.replication=<span class="number">1</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>接着启动confluent-control-center和分布式的Kafka连接器集群：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin/control-center-<span class="operator"><span class="keyword">start</span> etc/confluent-control-center/control-center.properties &amp;</span><br><span class="line"><span class="keyword">bin</span>/<span class="keyword">connect</span>-<span class="keyword">distributed</span> etc/kafka/<span class="keyword">connect</span>-<span class="keyword">distributed</span>.properties  &amp;</span></span><br></pre></td></tr></table></figure>
<p>然后执行一些性能测试，比如执行生产者和消费者的性能测试脚本：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics --zookeeper localhost:<span class="number">2181</span> --create \</span><br><span class="line">    --topic test-<span class="number">1</span> --partitions <span class="number">1</span> --replication-factor <span class="number">1</span></span><br><span class="line"></span><br><span class="line">bin/kafka-run-<span class="keyword">class</span> org.apache.kafka.tools.ProducerPerformance \</span><br><span class="line">    --topic test-<span class="number">1</span> --num-records <span class="number">50000000</span> --record-size <span class="number">100</span> \</span><br><span class="line">    --throughput -<span class="number">1</span> --producer-props acks=<span class="number">1</span> buffer.memory=<span class="number">67108864</span> \</span><br><span class="line">    batch.size=<span class="number">8196</span> bootstrap.servers=localhost:<span class="number">9092</span></span><br><span class="line"></span><br><span class="line">bin/kafka-consumer-perf-test --zookeeper localhost:<span class="number">2181</span> \</span><br><span class="line">    --messages <span class="number">50000000</span> --topic test-<span class="number">1</span> --threads <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>打开浏览器：<a href="http://192.168.6.53:9021" target="_blank" rel="external">http://192.168.6.53:9021</a>，观察到页面实时显示集群的相关度量曲线图：</p>
<p><img src="http://img.blog.csdn.net/20170928175456695" alt="controlcenter"></p>
<h4 id="2-_连接器（Kafka_Connect）">2. 连接器（Kafka Connect）</h4><p>自带的kafka-connect-elasticsearch插件的相关文件：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0653 confluent-<span class="number">3.2</span><span class="number">.1</span>]$ ll etc/kafka-connect-elasticsearch/</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users <span class="number">803</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">11</span> quickstart-elasticsearch.properties</span><br><span class="line"></span><br><span class="line">[qihuang.zheng@dp0653 confluent-<span class="number">3.2</span><span class="number">.1</span>]$ ll share/java/kafka-connect-elasticsearch/</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users  <span class="number">263965</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> commons-codec-<span class="number">1.9</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users  <span class="number">434678</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> commons-lang3-<span class="number">3.4</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users   <span class="number">61829</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> commons-logging-<span class="number">1.2</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users  <span class="number">212164</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> gson-<span class="number">2.4</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users <span class="number">2256213</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> guava-<span class="number">18.0</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users  <span class="number">177013</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> httpasyncclient-<span class="number">4.1</span><span class="number">.1</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users  <span class="number">732765</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> httpclient-<span class="number">4.5</span><span class="number">.1</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users  <span class="number">326724</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> httpcore-<span class="number">4.4</span><span class="number">.4</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users  <span class="number">356091</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> httpcore-nio-<span class="number">4.4</span><span class="number">.4</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users   <span class="number">18398</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> jest-<span class="number">2.0</span><span class="number">.0</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users  <span class="number">216228</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> jest-common-<span class="number">2.0</span><span class="number">.0</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users   <span class="number">44524</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> kafka-connect-elasticsearch-<span class="number">3.2</span><span class="number">.1</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users   <span class="number">41071</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> slf4j-api-<span class="number">1.7</span><span class="number">.21</span>.jar</span><br><span class="line">-rw-r--r-- <span class="number">1</span> qihuang.zheng users   <span class="number">10680</span> <span class="number">9</span>月  <span class="number">28</span> <span class="number">16</span>:<span class="number">12</span> slf4j-simple-<span class="number">1.7</span><span class="number">.5</span>.jar</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kafka技术内幕附录&lt;br&gt;
    
    </summary>
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/categories/kafka/"/>
    
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>深入解析中间件之-RocketMQ</title>
    <link href="http://github.com/zqhxuyuan/2017/10/18/Midd-RocketMQ/"/>
    <id>http://github.com/zqhxuyuan/2017/10/18/Midd-RocketMQ/</id>
    <published>2017-10-17T16:00:00.000Z</published>
    <updated>2017-10-19T01:44:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Apache RocketMQ<br><a id="more"></a></p>
<h1 id="基本流程">基本流程</h1><h2 id="Remoting_RPC示例">Remoting RPC示例</h2><p>rocketmq-remoting模块采用Netty封装了RPC的调用，包括客户端和服务端之间的交互。</p>
<p>不同分布式系统在通信上都会实现RPC模块，比如Kafka、Hadoop等都有各自的RPC实现。</p>
<p>先来查看测试用例RemotingServerTest的使用方法：</p>
<ul>
<li>启动RemotingServer和RemotingClient</li>
<li>调用RemotingClient的invokeAsync()或者invokeSync()、invokeOneway()方法</li>
</ul>
<p>以异步调用为例，RemotingClient的invokeAsync()方法主要有三个参数：</p>
<ul>
<li>服务端地址，RPC调用需要指定服务端的地址，这样客户端才能发送请求，让服务端处理</li>
<li>远程指令（RemotingCommand），即客户端发送的请求</li>
<li>回调对象（InvokeCallback），即客户端收到服务端返回的响应结果后，如何处理</li>
</ul>
<p>RPC调用的具体步骤如下：</p>
<ul>
<li>启动客户端和服务端</li>
<li>客户端构造远程指令对象</li>
<li>客户端通过RemotingClient同步或者异步调用</li>
<li>服务端在启动时注册的处理器，会处理客户端发送的请求，即调用处理器的processRequest()方法</li>
<li>服务端处理完请求后，返回响应给客户端</li>
<li>客户端收到服务端返回的响应结果，会触发回调对象调用operationComplete()方法</li>
</ul>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function">RemotingServer <span class="title">createRemotingServer</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    NettyServerConfig config = <span class="keyword">new</span> NettyServerConfig();</span><br><span class="line">    RemotingServer remotingServer = <span class="keyword">new</span> NettyRemotingServer(config);</span><br><span class="line">    remotingServer.registerProcessor(<span class="number">0</span>, <span class="keyword">new</span> NettyRequestProcessor() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function">RemotingCommand <span class="title">processRequest</span><span class="params">(ChannelHandlerContext ctx, RemotingCommand request)</span> </span>&#123;</span><br><span class="line">            request.setRemark(<span class="string">"Hi "</span> + ctx.channel().remoteAddress());</span><br><span class="line">            <span class="keyword">return</span> request;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, Executors.newCachedThreadPool());</span><br><span class="line">    remotingServer.start();</span><br><span class="line">    <span class="keyword">return</span> remotingServer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">testInvokeAsync</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException, RemotingConnectException,</span><br><span class="line">    RemotingTimeoutException, RemotingTooMuchRequestException, RemotingSendRequestException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> CountDownLatch latch = <span class="keyword">new</span> CountDownLatch(<span class="number">1</span>);</span><br><span class="line">    RemotingCommand request = RemotingCommand.createRequestCommand(<span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line">    request.setRemark(<span class="string">"messi"</span>);</span><br><span class="line">    remotingClient.invokeAsync(<span class="string">"localhost:8888"</span>, request, <span class="number">1000</span> * <span class="number">3</span>, <span class="keyword">new</span> InvokeCallback() &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">operationComplete</span><span class="params">(ResponseFuture responseFuture)</span> </span>&#123;</span><br><span class="line">            latch.countDown();</span><br><span class="line">            assertThat(responseFuture.getResponseCommand().getExtFields()).hasSize(<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    latch.await();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>RemotingServer的registerProcessor()方法有三个参数：</p>
<ul>
<li>请求编码，比如SEND_MESSAGE表示（生产者）客户端发送消息的请求</li>
<li>请求处理器，比如服务端如何处理客户端发送消息的处理器，实现类为：SendMessageProcessor</li>
<li>处理线程，每种请求编码都对应一个处理线程池。如果没有指定，则使用默认的线程池</li>
</ul>
<p>客户端调用服务端有三种方式：同步（Sync）、异步（Async）、一次性（OneWay）。前两种有响应结果，最后一种不产生响应结果。</p>
<h2 id="Netty_RPC">Netty RPC</h2><p><code>NettyRemotingServer</code>在启动时，会绑定NettyServerHandler。Netty RPC的特点如下：</p>
<ul>
<li>请求和响应都是用RemotingCommand对象来表示</li>
<li>服务端（NettyRemotingServer）和客户端（NettyRemotingClient）实现了抽象的NettyRemotingAbstract</li>
<li>抽象类根据不同的指令类型调用不同的处理方法，比如处理请求调用processRequestCommand，处理响应调用processResponseCommand</li>
</ul>
<p>下面举例客户端和服务端执行一次RPC调用链路的过程：</p>
<ul>
<li>客户端发送请求给服务端，通过Netty的Channel发送请求给服务端</li>
<li>服务端处理客户端发送的请求，NettyServerHandler接收的消息类型为REQUEST_COMMAND，调用processRequestCommand方法</li>
<li>服务端处理完成后，通过Netty的Channel发送响应结果给客户端</li>
<li>客户端处理服务端发送的响应，NettyClientHandler接收的消息类型为RESPONSE_COMMAND，调用processResponseCommand方法</li>
</ul>
<p>NettyRemotingAbstract用<code>processorTable</code>变量记录了请求编码、处理器、线程池之间的关系。</p>
<ul>
<li>每个请求编码都对应了一种唯一的处理器，相同请求编码的处理器是相同的</li>
<li>由于处理器与线程池组成一对，所以相同请求编码的请求在相同的线程池中执行</li>
</ul>
<p>不同的请求编码在不同的线程池中运行，以发送消息和消费消息为例：</p>
<table>
<thead>
<tr>
<th>请求编码（request code）</th>
<th>处理器</th>
<th>线程池</th>
</tr>
</thead>
<tbody>
<tr>
<td>SEND_MESSAGE</td>
<td>SendMessageProcessor</td>
<td>ExecutorService#1</td>
</tr>
<tr>
<td>GET_MESSAGE</td>
<td>PullMessageProcessor</td>
<td>ExecutorService#2</td>
</tr>
</tbody>
</table>
<p>以经典的RPC通信模型来看，客户端向服务端发起RPC调用请求。那么<code>processorTable</code>主要针对服务端，<code>responseTable</code>则主要针对客户端。</p>
<ul>
<li>客户端发起RPC调动时，会创建异步的响应对象，并放入将opaque和ResponseFuture的映射关系放入responseTable</li>
<li>当客户端收到服务端发送的响应结果后，会将opaque以及ResponseFuture从responseTable中移除</li>
</ul>
<p>那么opaque是如何在请求和响应之间进行关联的呢？下面代码中的注释说明了opaque在请求和响应之间的设置和获取流程。</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">final</span> HashMap&lt;Integer<span class="comment">/* request code */</span>, Pair&lt;NettyRequestProcessor, ExecutorService&gt;&gt; processorTable =</span><br><span class="line">    <span class="keyword">new</span> HashMap&lt;Integer, Pair&lt;NettyRequestProcessor, ExecutorService&gt;&gt;(<span class="number">64</span>);</span><br><span class="line"> <span class="keyword">protected</span> <span class="keyword">final</span> ConcurrentMap&lt;Integer <span class="comment">/* opaque */</span>, ResponseFuture&gt; responseTable =</span><br><span class="line">    <span class="keyword">new</span> ConcurrentHashMap&lt;Integer, ResponseFuture&gt;(<span class="number">256</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">processMessageReceived</span><span class="params">(ChannelHandlerContext ctx, RemotingCommand msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> RemotingCommand cmd = msg;</span><br><span class="line">    <span class="keyword">if</span> (cmd != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (cmd.getType()) &#123;</span><br><span class="line">            <span class="keyword">case</span> REQUEST_COMMAND:</span><br><span class="line">                processRequestCommand(ctx, cmd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> RESPONSE_COMMAND:</span><br><span class="line">                processResponseCommand(ctx, cmd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理请求，比如服务端处理客户端发送的请求，NettyServerHandler会调用到这里</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">processRequestCommand</span><span class="params">(<span class="keyword">final</span> ChannelHandlerContext ctx, <span class="keyword">final</span> RemotingCommand cmd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Pair&lt;NettyRequestProcessor, ExecutorService&gt; matched = <span class="keyword">this</span>.processorTable.get(cmd.getCode());</span><br><span class="line">    <span class="comment">// 4. 从请求对象中获取opaque，那么什么时候opaque设置到请求中？</span></span><br><span class="line">    <span class="comment">// 这里的cmd实际上是步骤3的request，因为步骤1已经有opaque，所以这里也能取到opaque</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> opaque = cmd.getOpaque();</span><br><span class="line">    <span class="keyword">final</span> RemotingCommand response = pair.getObject1().processRequest(ctx, cmd);</span><br><span class="line">    <span class="comment">// 5. 将opaque设置到响应对象中</span></span><br><span class="line">    response.setOpaque(opaque);</span><br><span class="line">    <span class="comment">// 6. 发送响应对象给客户端</span></span><br><span class="line">    ctx.writeAndFlush(response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理响应，比如客户端处理服务端发送的响应，NettyClientHandler会调用到这里</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">processResponseCommand</span><span class="params">(ChannelHandlerContext ctx, RemotingCommand cmd)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 7. 从响应对象中获取opaque，那么什么时候opaque设置到响应里？答案在步骤5中</span></span><br><span class="line">    <span class="comment">// 这里的cmd是步骤5的response，而response的opaque来自于request</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> opaque = cmd.getOpaque();</span><br><span class="line">    <span class="comment">// 8. 根据opaque从responseTable中获取出对应的ResponseFuture</span></span><br><span class="line">    <span class="keyword">final</span> ResponseFuture responseFuture = responseTable.get(opaque);</span><br><span class="line">    <span class="keyword">if</span> (responseFuture != <span class="keyword">null</span>) &#123;</span><br><span class="line">        responseFuture.setResponseCommand(cmd);</span><br><span class="line">        responseFuture.release();</span><br><span class="line">        <span class="comment">// 9. 将opaque与ResponseFuture的映射关系从responseTable中移除，与步骤2互相对应</span></span><br><span class="line">        responseTable.remove(opaque);</span><br><span class="line">        <span class="comment">// 执行客户端在发送RPC调用时定义的回调函数</span></span><br><span class="line">        <span class="keyword">if</span> (responseFuture.getInvokeCallback() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            executeInvokeCallback(responseFuture);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            responseFuture.putResponse(cmd);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端发起RPC调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">RemotingCommand <span class="title">invokeSyncImpl</span><span class="params">(<span class="keyword">final</span> Channel channel, <span class="keyword">final</span> RemotingCommand request)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 从请求中获取opaque</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> opaque = request.getOpaque();</span><br><span class="line">    <span class="keyword">final</span> ResponseFuture responseFuture = <span class="keyword">new</span> ResponseFuture(opaque, timeoutMillis, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// 2. 创建ResponseFuture，并记录到responseTable</span></span><br><span class="line">    <span class="keyword">this</span>.responseTable.put(opaque, responseFuture);</span><br><span class="line">    <span class="keyword">final</span> SocketAddress addr = channel.remoteAddress();</span><br><span class="line">    <span class="comment">// 3. 发起RPC调用</span></span><br><span class="line">    channel.writeAndFlush(request);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="生产者发送消息">生产者发送消息</h2><p>以example/quickstart下的Producer发送消息为例，入口方法走到DefaultMQProducerImpl的sendDefaultImpl()方法。</p>
<p>发送消息过程涉及下面几个步骤：</p>
<ul>
<li>tryToFindTopicPublishInfo()：根据消息的Topic获取TopicPublishInfo</li>
<li>selectOneMessageQueue()：选择一个MessageQueue</li>
<li>sendKernelImpl()：调用内核的发送方法</li>
<li>如果是同步调用，返回SendResult，否则返回空</li>
</ul>
<p>接下来进入DefaultMQProducerImpl的内核发送方法，主要的参数有：Message、MessageQueue、TopicPublishInfo</p>
<ul>
<li>如果有Hook，构造SendMessageContext，将Message、MessageQueue等都设置为上下文对象的成员变量</li>
<li>构造SendMessageRequestHeader</li>
<li>从MQClientFactory获取getMQClientAPIImpl()实现类MQClientAPIImpl，调用sendMessage()方法</li>
</ul>
<p>接下来进入MQClientAPIImpl的sendMessage()方法</p>
<ul>
<li>根据RequestCode.SEND_MESSAGE（请求编码）和SendMessageRequestHeader（请求头）创建RemotingCommand对象</li>
<li>设置请求的body为消息内容：request.setBody(msg.getBody())</li>
<li>调用remotingClient.invokeAsync()或者invokeSync()方法</li>
<li>对于同步调用，因为要等待结果返回，所以会立即调用processSendResponse()</li>
<li>processSendResponse()方法返回一个SendResult对象</li>
</ul>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SendResult sendMessageSync(</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">String</span> addr, <span class="comment">// Broker的地址</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">String</span> brokerName, <span class="comment">// Broker的名字</span></span><br><span class="line">    <span class="keyword">final</span> Message msg, <span class="comment">// 消息内容</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">long</span> timeoutMillis,</span><br><span class="line">    <span class="keyword">final</span> RemotingCommand request <span class="comment">// 请求对象</span></span><br><span class="line">) &#123;</span><br><span class="line">    <span class="comment">// RPC调用示例，这里的客户端是生产者，通过MQClientAPIImpl调用</span></span><br><span class="line">    RemotingCommand response = <span class="keyword">this</span>.remotingClient.invokeSync(addr, request, timeoutMillis);</span><br><span class="line">    <span class="keyword">assert</span> response != <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.processSendResponse(brokerName, msg, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>生产者通过MQClientAPIImpl发起RPC调用，request请求对象的编码是SEND_MESSAGE。这里的地址指的是Broker的地址，而不是NameServer。<br>虽然生产者连接的是NameServer，但这中间会有选择MessageQueue，再选择Broker的过程，由于这里先关注整体的流程，暂时不去分析具体的细节。</p>
<p>客户端通过<code>RemotingClient</code>调用了服务端Broker，接下来看服务端<code>BrokerController</code>的处理。</p>
<p>BrokerController启动时会为各种请求类型注册不同的请求处理器，比如SEND_MESSAGE注册了SendMessageProcessor处理器：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">registerProcessor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SendMessageProcessor sendProcessor = <span class="keyword">new</span> SendMessageProcessor(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// SendMessageProcessor有两个Hook：发送消息和消费消息的Hook。</span></span><br><span class="line">    sendProcessor.registerSendMessageHook(sendMessageHookList);</span><br><span class="line">    sendProcessor.registerConsumeMessageHook(consumeMessageHookList);</span><br><span class="line">    <span class="keyword">this</span>.remotingServer.registerProcessor(RequestCode.SEND_MESSAGE, sendProcessor, <span class="keyword">this</span>.sendMessageExecutor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>SendMessageProcessor的processRequest()方法会处理生产者客户端发送的SEND_MESSAGE请求。</p>
<p>客户端在发送请求之前构建了<code>SendMessageContext</code>和<code>SendMessageRequestHeader</code>，这里对应的会首先从RemotingCommand反解析出着两个对象</p>
<ul>
<li>解析请求的body，创建MessageExtBrokerInner对象</li>
<li>获取MessageStore，并调用putMessage方法，传入MessageExtBrokerInner对象</li>
<li>返回PutMessageResult，并调用handlePutMessageResult方法</li>
<li>最后返回的是一个RemotingCommand响应对象，会返回给客户端</li>
</ul>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function">RemotingCommand <span class="title">processRequest</span><span class="params">(ChannelHandlerContext ctx,</span><br><span class="line">    RemotingCommand request)</span> <span class="keyword">throws</span> RemotingCommandException </span>&#123;</span><br><span class="line">    SendMessageContext mqtraceContext;</span><br><span class="line">    <span class="keyword">switch</span> (request.getCode()) &#123;</span><br><span class="line">        <span class="keyword">case</span> RequestCode.CONSUMER_SEND_MSG_BACK:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.consumerSendMsgBack(ctx, request);</span><br><span class="line">        <span class="keyword">default</span>: // SEND_MESSAGE的处理逻辑...</span><br><span class="line">            SendMessageRequestHeader requestHeader = parseRequestHeader(request);</span><br><span class="line">            mqtraceContext = buildMsgContext(ctx, requestHeader);</span><br><span class="line">            <span class="keyword">this</span>.executeSendMessageHookBefore(ctx, request, mqtraceContext);</span><br><span class="line">            RemotingCommand response;</span><br><span class="line">            <span class="keyword">if</span> (requestHeader.isBatch()) &#123;</span><br><span class="line">                response = <span class="keyword">this</span>.sendBatchMessage(ctx, request, mqtraceContext, requestHeader);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                response = <span class="keyword">this</span>.sendMessage(ctx, request, mqtraceContext, requestHeader);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.executeSendMessageHookAfter(response, mqtraceContext);</span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接下来进入DefaultMessageStore的putMessage()方法，这个方法会调用CommitLog的putMessage()方法</p>
<ul>
<li>BrokerController和SendMessageProcessor都在broker模块</li>
<li>MessageStore和CommitLog则在store模块</li>
</ul>
<p>CommitLog首先获取最近的MappedFile，然后追加消息到映射文件中。</p>
<ul>
<li>追加消息的回调类DefaultAppendMessageCallback是执行数据写入文件的真正方法。</li>
<li>追加完成后，有多种的磁盘刷写方式，比如同步和异步</li>
</ul>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public <span class="type">PutMessageResult</span> putMessage(final <span class="type">MessageExtBrokerInner</span> msg) &#123;</span><br><span class="line">    <span class="type">MappedFile</span> mappedFile = this.mappedFileQueue.getLastMappedFile();</span><br><span class="line">    <span class="type">AppendMessageResult</span> <span class="literal">result</span> = mappedFile.appendMessage(msg, this.appendMessageCallback);</span><br><span class="line">    <span class="type">PutMessageResult</span> putMessageResult = new <span class="type">PutMessageResult</span>(<span class="type">PutMessageStatus</span>.<span class="type">PUT_OK</span>, <span class="literal">result</span>);</span><br><span class="line">    handleDiskFlush(<span class="literal">result</span>, putMessageResult, msg);</span><br><span class="line">    handleHA(<span class="literal">result</span>, putMessageResult, msg);</span><br><span class="line">    <span class="keyword">return</span> putMessageResult;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>同样，我们省略了具体写入到CommitLog中的细节，以及如何处理磁盘的刷写、HA等细枝末节。实际上，到这里为止，<br>生产者客户端发起RPC调用，到服务端处理请求，服务端返回响应，客户端接收响应结果，这个过程已经分析完毕了。</p>
<h2 id="Pull_Consumer">Pull Consumer</h2><p>PULL_MESSAGE对应的处理器是PullMessageProcessor。与生产消息调用MessageStore的putMessage()类似，<br>消费消息调用MessageStore的getMessage()方法，并返回GetMessageResult。</p>
<table>
<thead>
<tr>
<th>请求编码</th>
<th>消息处理器</th>
<th>消息存储</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>SEND_MESSAGE</td>
<td>SendMessageProcessor</td>
<td>putMessage()</td>
<td>PutMessageResult</td>
</tr>
<tr>
<td>PULL_MESSAGE</td>
<td>PullMessageProcessor</td>
<td>getMessage()</td>
<td>GetMessageResult</td>
</tr>
</tbody>
</table>
<p>消费者还需要提交偏移量，对应ConsumerOffsetManager的commitOffset()方法。</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function">RemotingCommand <span class="title">processRequest</span><span class="params">(<span class="keyword">final</span> Channel channel, RemotingCommand request, <span class="keyword">boolean</span> brokerAllowSuspend)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> GetMessageResult getMessageResult = <span class="keyword">this</span>.brokerController.getMessageStore().getMessage(</span><br><span class="line">            requestHeader.getConsumerGroup(),   <span class="comment">// 消费组</span></span><br><span class="line">            requestHeader.getTopic(),           <span class="comment">// 主题</span></span><br><span class="line">            requestHeader.getQueueId(),         <span class="comment">// 队列编号</span></span><br><span class="line">            requestHeader.getQueueOffset(),     <span class="comment">// 队列的偏移量</span></span><br><span class="line">            requestHeader.getMaxMsgNums(),      <span class="comment">// 最大的消息数量</span></span><br><span class="line">            messageFilter);                     <span class="comment">// 过滤器</span></span><br><span class="line">    <span class="comment">// .......................................................</span></span><br><span class="line">    <span class="keyword">if</span> (storeOffsetEnable) &#123;</span><br><span class="line">        <span class="keyword">this</span>.brokerController.getConsumerOffsetManager().commitOffset(</span><br><span class="line">            RemotingHelper.parseChannelRemoteAddr(channel),</span><br><span class="line">            requestHeader.getConsumerGroup(), </span><br><span class="line">            requestHeader.getTopic(), </span><br><span class="line">            requestHeader.getQueueId(), </span><br><span class="line">            requestHeader.getCommitOffset());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>存储层设计到文件操作时，生产消息会写到CommitLog，消费消息则会调用getMessage方法，给定偏移量和大小。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Apache RocketMQ&lt;br&gt;
    
    </summary>
    
      <category term="mq" scheme="http://github.com/zqhxuyuan/categories/mq/"/>
    
    
      <category term="rocketmq" scheme="http://github.com/zqhxuyuan/tags/rocketmq/"/>
    
  </entry>
  
  <entry>
    <title>深入解析中间件之-Canal</title>
    <link href="http://github.com/zqhxuyuan/2017/10/11/Midd-Canal/"/>
    <id>http://github.com/zqhxuyuan/2017/10/11/Midd-Canal/</id>
    <published>2017-10-10T16:00:00.000Z</published>
    <updated>2017-10-13T03:38:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/alibaba/canal">canal</a>: 阿里巴巴mysql数据库binlog的增量订阅&amp;消费组件<br><a id="more"></a></p>
<h2 id="MySQL_binlog">MySQL binlog</h2><h3 id="MySQL主从复制">MySQL主从复制</h3><p>mysql服务端修改配置并重启</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog-format=ROW</span><br><span class="line">server_id=1</span><br><span class="line"></span><br><span class="line">$ mysql -uroot</span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">USER</span> canal <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'canal'</span>;</span>  </span><br><span class="line"><span class="operator"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'canal'</span>@<span class="string">'%'</span> ;</span></span><br><span class="line"><span class="operator"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span></span><br><span class="line"></span><br><span class="line">$ sudo service mysqld <span class="operator"><span class="keyword">start</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>问题：创建canal用户的目的是什么？直接使用现有的用户名可以吗，比如root。<br>答案：有些用户没有REPLICATION SLAVE, REPLICATION CLIENT的权限，用这些用户连接canal时，无法获取到binlog。<br>这里的canal用户授权了全部权限，所以客户端可以从canal中获取binlog。</p>
</blockquote>
<p>明确两个概念：canal server连接mysql，客户端连接canal server。</p>
<ul>
<li>canal指的是canal server，它会读取mysql的binlog，解析后存储起来</li>
<li>客户端指的是消费canal server的binlog</li>
</ul>
<p>本机连接服务端，验证binlog的格式是ROW</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -h192.168.6.52 -ucanal -pcanal</span><br><span class="line"><span class="header">mysql&gt; show variables like '%binlog_format%';</span><br><span class="line">+---------------+-------+</span></span><br><span class="line"><span class="header">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span></span><br><span class="line"><span class="header">| binlog_format | ROW   |</span><br><span class="line">+---------------+-------+</span></span><br></pre></td></tr></table></figure>
<p>mysql主从复制的原理：</p>
<ul>
<li>master将改变记录到二进制日志(binary log)中；</li>
<li>slave将master的binary log events拷贝到它的中继日志(relay log)；</li>
<li>slave重做中继日志中的事件，将改变反映它自己的数据。</li>
</ul>
<p><img src="http://img.blog.csdn.net/20160914112042547" alt="mysql replication"></p>
<h3 id="binlog">binlog</h3><p>在启动canal之前，先来了解下什么是mysql的binlog:</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show binlog events;</span><br><span class="line">| Log_name         | Pos   | Event_type  | Server_id | End_log_pos | Info|</span><br><span class="line">+<span class="commentspan></span><br><span class="line">| mysql-bin.<span class="number">000001</span> |     <span class="number">4</span> | Format_desc |         <span class="number">1</span> |         <span class="number">106</span> | Server ver: <span class="number">5.1</span>.<span class="number">73</span>-log, Binlog ver: <span class="number">4</span|</span><br><span class="line">| mysql-bin.<span class="number">000001</span> |   <span class="number">106</span> | Query       |         <span class="number">1</span> |        <span class="number">1864</span> | <span class="keyword">use</span> `mysql`; CREATE TABLE <span class="keyword">IF</span> <span class="keyword">NOT</span> EXISTS db (   Host char(<span class="number">60</span>) binary <span class="keyword">DEFAULT</span> '' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Db char(<span class="number">64</span>) binary <span class="keyword">DEFAULT</span> '' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, User char(<span class="number">16</span>) binary <span class="keyword">DEFAULT</span> '' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Select_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Insert_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Update_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Delete_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Create_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Drop_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Grant_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, References_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Index_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Alter_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Create_tmp_table_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Lock_tables_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Create_view_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Show_view_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Create_routine_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Alter_routine_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Execute_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Event_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Trigger_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, PRIMARY KEY Host (Host,Db,User), KEY User (User) ) engine=MyISAM <span class="typename">CHARACTER</span> SET utf8 COLLATE utf8_bin comment=<span class="attribute">'Database</span> privileges' |</span><br><span class="line">| mysql-bin.<span class="number">000001</span> |  <span class="number">1864</span> | Query       |         <span class="number">1</span> |        <span class="number">3518</span> | <span class="keyword">use</span> `mysql`; CREATE TABLE <span class="keyword">IF</span> <span class="keyword">NOT</span> EXISTS host (  Host char(<span class="number">60</span>) binary <span class="keyword">DEFAULT</span> '' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Db char(<span class="number">64</span>) binary <span class="keyword">DEFAULT</span> '' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Select_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Insert_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Update_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Delete_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Create_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Drop_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Grant_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, References_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Index_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Alter_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Create_tmp_table_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Lock_tables_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Create_view_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Show_view_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Create_routine_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Alter_routine_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Execute_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, Trigger_priv enum(<span class="attribute">'N</span>',<span class="attribute">'Y</span>') COLLATE utf8_general_ci <span class="keyword">DEFAULT</span> <span class="attribute">'N</span>' <span class="keyword">NOT</span> <span class="keyword">NULL</span>, PRIMARY KEY Host (Host,Db) ) engine=MyISAM <span class="typename">CHARACTER</span> SET utf8 COLLATE utf8_bin comment=<span class="attribute">'Host</span> privileges;  Merged <span class="keyword">with</span> database privileges' |</span><br></pre></td></tr></table></figure>
<p>mysql数据文件下会生成mysql-bin.xxx的binlog文件，以及索引文件</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0652 canal]$ ll /var/lib/mysql/</span><br><span class="line">总用量 <span class="number">26228</span></span><br><span class="line">drwx------ <span class="number">2</span> mysql mysql     <span class="number">4096</span> <span class="number">10</span>月 <span class="number">11</span> <span class="number">14</span>:<span class="number">05</span> canal_test</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql <span class="number">10485760</span> <span class="number">9</span>月  <span class="number">30</span> <span class="number">22</span>:<span class="number">12</span> ibdata1</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">5242880</span> <span class="number">10</span>月 <span class="number">11</span> <span class="number">09</span>:<span class="number">57</span> ib_logfile0</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">5242880</span> <span class="number">10</span>月 <span class="number">11</span> <span class="number">09</span>:<span class="number">57</span> ib_logfile1</span><br><span class="line">drwx------ <span class="number">2</span> mysql mysql     <span class="number">4096</span> <span class="number">8</span>月   <span class="number">2</span> <span class="number">11</span>:<span class="number">01</span> mysql</span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql    <span class="number">18451</span> <span class="number">8</span>月   <span class="number">2</span> <span class="number">11</span>:<span class="number">01</span> mysql-bin<span class="number">.000001</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql   <span class="number">929226</span> <span class="number">8</span>月   <span class="number">2</span> <span class="number">11</span>:<span class="number">01</span> mysql-bin<span class="number">.000002</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql  <span class="number">4890698</span> <span class="number">9</span>月  <span class="number">30</span> <span class="number">22</span>:<span class="number">12</span> mysql-bin<span class="number">.000003</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql      <span class="number">897</span> <span class="number">10</span>月 <span class="number">11</span> <span class="number">14</span>:<span class="number">06</span> mysql-bin<span class="number">.000004</span></span><br><span class="line">-rw-rw---- <span class="number">1</span> mysql mysql       <span class="number">76</span> <span class="number">10</span>月 <span class="number">11</span> <span class="number">09</span>:<span class="number">57</span> mysql-bin.index</span><br><span class="line">srwxrwxrwx <span class="number">1</span> mysql mysql        <span class="number">0</span> <span class="number">10</span>月 <span class="number">11</span> <span class="number">09</span>:<span class="number">57</span> mysql.sock</span><br></pre></td></tr></table></figure>
<p>针对mysql的操作都会有二进制的事件记录到binlog文件中。下面的一些操作包括创建用户，授权，创建数据库，创建表，插入一条记录。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0652 canal]$ sudo strings /var/lib/mysql/mysql-bin.000004</span><br><span class="line">5.1.73-log</span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">USER</span> canal <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'canal'</span></span><br><span class="line">root    localhost</span><br><span class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'canal'</span>@<span class="string">'%'</span></span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span></span><br><span class="line">canal_test</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> canal_test    ===》创建数据库</span><br><span class="line">canal_test</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span> (   uid <span class="built_in">int</span> (<span class="number">4</span>) primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment,   <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>)  ==》创建表</span><br><span class="line">canal_test</span><br><span class="line"><span class="keyword">BEGIN</span>     ==》插入记录，这里有事务。但是没有把具体的语句打印出来</span><br><span class="line">canal_test</span><br><span class="line"><span class="keyword">test</span></span><br><span class="line">canal_test</span><br><span class="line"><span class="keyword">COMMIT</span></span></span><br></pre></td></tr></table></figure>
<h2 id="Canal_QuickStart">Canal QuickStart</h2><h3 id="canal_&amp;_config">canal &amp; config</h3><p>部署canal server到6.52，并启动。查看canal的日志：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0652 canal]$ cat logs/canal/canal.<span class="built_in">log</span></span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">52.076</span> [main] INFO  com.alibaba.otter.canal.deployer.CanalLauncher - <span class="preprocessor">## start the canal server.</span></span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">52.151</span> [main] INFO  com.alibaba.otter.canal.deployer.CanalController - <span class="preprocessor">## start the canal server[<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11111</span>]</span></span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">52.644</span> [main] INFO  com.alibaba.otter.canal.deployer.CanalLauncher - <span class="preprocessor">## the canal server is running now ......</span></span><br></pre></td></tr></table></figure>
<p>查看instance的日志：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0652 canal]$ cat logs/example/example<span class="class">.log</span></span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">52.435</span> [main] INFO  c<span class="class">.a</span><span class="class">.o</span><span class="class">.c</span><span class="class">.i</span><span class="class">.spring</span><span class="class">.support</span><span class="class">.PropertyPlaceholderConfigurer</span> - Loading properties file from class path resource [canal.properties]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">52.444</span> [main] INFO  c<span class="class">.a</span><span class="class">.o</span><span class="class">.c</span><span class="class">.i</span><span class="class">.spring</span><span class="class">.support</span><span class="class">.PropertyPlaceholderConfigurer</span> - Loading properties file from class path resource [example/instance.properties]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">52.587</span> [main] INFO  c<span class="class">.a</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.instance</span><span class="class">.spring</span><span class="class">.CanalInstanceWithSpring</span> - start CannalInstance <span class="keyword">for</span> <span class="number">1</span>-example</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">52.599</span> [main] INFO  c<span class="class">.a</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.instance</span><span class="class">.core</span><span class="class">.AbstractCanalInstance</span> - start successful....</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">52.679</span> [destination = example , <span class="tag">address</span> = /<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">3306</span> , EventParser] WARN  c<span class="class">.a</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.parse</span><span class="class">.inbound</span><span class="class">.mysql</span><span class="class">.MysqlEventParser</span> - prepare to find start <span class="attribute">position</span> just show master status</span><br></pre></td></tr></table></figure>
<p>canal server的conf下有几个配置文件</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  canal<span class="class">.deployer-1</span>.<span class="number">0.24</span> tree conf</span><br><span class="line">conf</span><br><span class="line">├── canal<span class="class">.properties</span></span><br><span class="line">├── example</span><br><span class="line">│   └── instance<span class="class">.properties</span></span><br><span class="line">├── logback<span class="class">.xml</span></span><br><span class="line">└── spring</span><br><span class="line">    ├── default-instance<span class="class">.xml</span></span><br><span class="line">    ├── file-instance<span class="class">.xml</span></span><br><span class="line">    ├── group-instance<span class="class">.xml</span></span><br><span class="line">    ├── local-instance<span class="class">.xml</span></span><br><span class="line">    └── memory-instance.xml</span><br></pre></td></tr></table></figure>
<p>先来看canal.properties的common属性前四个配置项：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">canal.id= <span class="number">1</span></span><br><span class="line">canal.ip=</span><br><span class="line">canal.port= <span class="number">11111</span></span><br><span class="line">canal.zkServers=</span><br></pre></td></tr></table></figure>
<p>canal.id是canal的编号，在集群环境下，不同canal的id不同，注意它和mysql的server_id不同。<br>ip这里不指定，默认为本机，比如上面是192.168.6.52，端口号是11111。zk用于canal cluster。</p>
<p>再看下canal.properties下destinations相关的配置：</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"><span class="comment">######</span><span class="comment">###       destinations        ###</span><span class="comment">######</span><span class="comment">#### </span><br><span class="line">###</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">####</span><br><span class="line">canal.destinations = example</span><br><span class="line">canal.conf.dir = ../conf</span><br><span class="line">canal.auto.scan = true</span><br><span class="line">canal.auto.scan.interval = 5</span><br><span class="line"></span><br><span class="line">canal.instance.global.mode = spring </span><br><span class="line">canal.instance.global.lazy = false</span><br><span class="line">canal.instance.global.spring.xml = classpath:spring/file-instance.xml</span></span><br></pre></td></tr></table></figure>
<p>这里的canal.destinations = example可以设置多个，比如example1,example2，<br>则需要创建对应的两个文件夹，并且每个文件夹下都有一个instance.properties文件。</p>
<p>全局的canal实例管理用spring，这里的file-instance.xml最终会实例化所有的destinations instances:</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean class=<span class="string">"com.alibaba.otter.canal.instance.spring.support.PropertyPlaceholderConfigurer"</span> lazy-init=<span class="string">"false"</span>&gt;</span><br><span class="line">    &lt;property name=<span class="string">"ignoreResourceNotFound"</span> value=<span class="string">"true"</span> /&gt;</span><br><span class="line">    &lt;property name=<span class="string">"systemPropertiesModeName"</span> value=<span class="string">"SYSTEM_PROPERTIES_MODE_OVERRIDE"</span>/&gt;&lt;!-- 允许system覆盖 --&gt;</span><br><span class="line">    &lt;property name=<span class="string">"locationNames"</span>&gt;</span><br><span class="line">        &lt;list&gt;</span><br><span class="line">            &lt;value&gt;classpath:canal.properties&lt;/value&gt;</span><br><span class="line">            &lt;value&gt;classpath:$&#123;canal.instance.destination:&#125;/instance.properties&lt;/value&gt;</span><br><span class="line">        &lt;/list&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line">&lt;bean id=<span class="string">"instance"</span> class=<span class="string">"com.alibaba.otter.canal.instance.spring.CanalInstanceWithSpring"</span>&gt;</span><br><span class="line">    &lt;property name=<span class="string">"destination"</span> value=<span class="string">"$&#123;canal.instance.destination&#125;"</span> /&gt;</span><br><span class="line">    &lt;property name=<span class="string">"eventParser"</span>&gt;&lt;<span class="keyword">ref</span> local=<span class="string">"eventParser"</span> /&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=<span class="string">"eventSink"</span>&gt;&lt;<span class="keyword">ref</span> local=<span class="string">"eventSink"</span> /&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=<span class="string">"eventStore"</span>&gt;&lt;<span class="keyword">ref</span> local=<span class="string">"eventStore"</span> /&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=<span class="string">"metaManager"</span>&gt;&lt;<span class="keyword">ref</span> local=<span class="string">"metaManager"</span> /&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=<span class="string">"alarmHandler"</span>&gt;&lt;<span class="keyword">ref</span> local=<span class="string">"alarmHandler"</span> /&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure>
<p>比如canal.instance.destination等于example，就会加载example/instance.properties配置文件</p>
<p>example下instance.properties配置文件不需要修改。一个canal server可以运行多个canal instance。</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br><span class="line"><span class="comment">## mysql serverId，这里的slaveId不能和myql集群中已有的server_id一样</span></span><br><span class="line">canal.instance.mysql.slaveId = <span class="number">1234</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># position info 这里连接的是mysql master的地址。</span></span><br><span class="line">canal.instance.master.address = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3306</span></span><br><span class="line">canal.instance.master.journal.name = </span><br><span class="line">canal.instance.master.position = </span><br><span class="line">canal.instance.master.timestamp = </span><br><span class="line"></span><br><span class="line"><span class="comment">#canal.instance.standby.address = </span></span><br><span class="line"><span class="comment">#canal.instance.standby.journal.name =</span></span><br><span class="line"><span class="comment">#canal.instance.standby.position = </span></span><br><span class="line"><span class="comment">#canal.instance.standby.timestamp = </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># username/password</span></span><br><span class="line">canal.instance.dbUsername = canal</span><br><span class="line">canal.instance.dbPassword = canal</span><br><span class="line">canal.instance.defaultDatabaseName =</span><br><span class="line">canal.instance.connectionCharset = UTF-<span class="number">8</span></span><br><span class="line"></span><br><span class="line">canal.instance.filter.regex = .*\\..*</span><br><span class="line">canal.instance.filter.black.regex =  </span><br><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h3 id="simple_client">simple client</h3><p>在mysql上创建数据库，创建表，插入一条记录，再修改记录。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">database</span> canal_test;</span></span><br><span class="line"><span class="operator"><span class="keyword">use</span> canal_test;</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span> (   uid <span class="built_in">int</span> (<span class="number">4</span>) primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment,   <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>);</span></span><br><span class="line"><span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span> (<span class="keyword">name</span>) <span class="keyword">values</span>(<span class="string">'10'</span>);</span></span><br></pre></td></tr></table></figure>
<p>修改客户端测试例子的连接信息。其中example对应了canal实例的名称。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String destination = <span class="string">"example"</span>;</span><br><span class="line">CanalConnector connector = CanalConnectors.newSingleConnector(</span><br><span class="line">    <span class="keyword">new</span> InetSocketAddress(<span class="string">"192.168.6.52"</span>, <span class="number">11111</span>), destination, <span class="string">"canal"</span>, <span class="string">"canal"</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：如果连接有错误，客户端测试例子会立即结束，打印## stop the canal client。正常的话，终端不会退出，会一直运行。</p>
</blockquote>
<p>SimpleCanalClientTest控制台的结果如下：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> Batch Id: [1] ,count : [2] , memsize : [263] , Time : 2017-10-11 14:06:06</span><br><span class="line"><span class="keyword">*</span> Start : [mysql-bin.000004:396:1507701897000(2017-10-11 14:04:57)] </span><br><span class="line"><span class="keyword">*</span> End : [mysql-bin.000004:491:1507701904000(2017-10-11 14:05:04)] </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">----------------&gt; binlog[mysql-bin.000004:396] , name[canal_test,] , eventType : QUERY , executeTime : 1507701897000 , delay : 69710ms</span><br><span class="line"> sql ----&gt; create database canal_test</span><br><span class="line"></span><br><span class="line">----------------&gt; binlog[mysql-bin.000004:491] , name[canal_test,test] , eventType : CREATE , executeTime : 1507701904000 , delay : 62723ms</span><br><span class="line"> sql ----&gt; create table test (   uid int (4) primary key not null auto_increment,   name varchar(10) not null)</span><br></pre></td></tr></table></figure>
<p>插入一条记录：（其中uid和name的update都等于true）</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> Batch Id: [2] ,count : [3] , memsize : [186] , Time : 2017-10-11 14:06:32</span><br><span class="line"><span class="keyword">*</span> Start : [mysql-bin.000004:659:1507701989000(2017-10-11 14:06:29)] </span><br><span class="line"><span class="keyword">*</span> End : [mysql-bin.000004:822:1507701989000(2017-10-11 14:06:29)] </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">================&gt; binlog[mysql-bin.000004:659] , executeTime : 1507701989000 , delay : 3142ms</span><br><span class="line"> BEGIN ----&gt; Thread id: 11</span><br><span class="line">----------------&gt; binlog[mysql-bin.000004:785] , name[canal_test,test] , eventType : INSERT , executeTime : 1507701989000 , delay : 3154ms</span><br><span class="line">uid : 1    type=int(4)    update=true</span><br><span class="line">name : 10    type=varchar(10)    update=true</span><br><span class="line">----------------</span><br><span class="line"> END ----&gt; transaction id: 0</span><br><span class="line">================&gt; binlog[mysql-bin.000004:822] , executeTime : 1507701989000 , delay : 3179ms</span><br></pre></td></tr></table></figure>
<p>修改记录：（其中name的update等于true）</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> Batch Id: [3] ,count : [3] , memsize : [202] , Time : 2017-10-11 14:49:11</span><br><span class="line"><span class="keyword">*</span> Start : [mysql-bin.000004:897:1507704547000(2017-10-11 14:49:07)] </span><br><span class="line"><span class="keyword">*</span> End : [mysql-bin.000004:1076:1507704547000(2017-10-11 14:49:07)] </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">================&gt; binlog[mysql-bin.000004:897] , executeTime : 1507704547000 , delay : 4048ms</span><br><span class="line"> BEGIN ----&gt; Thread id: 13</span><br><span class="line">----------------&gt; binlog[mysql-bin.000004:1023] , name[canal_test,test] , eventType : UPDATE , executeTime : 1507704547000 , delay : 4059ms</span><br><span class="line">uid : 1    type=int(4)</span><br><span class="line">name : zqhxuyuan    type=varchar(10)    update=true</span><br><span class="line">----------------</span><br><span class="line"> END ----&gt; transaction id: 0</span><br><span class="line">================&gt; binlog[mysql-bin.000004:1076] , executeTime : 1507704547000 , delay : 4096ms</span><br></pre></td></tr></table></figure>
<p>canal安装包下的example instance下除了example.log外，还有一个meta.log</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0652 canal]$ cat logs/example/meta.<span class="built_in">log</span></span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">14</span>:<span class="number">06</span>:<span class="number">03.728</span> - clientId:<span class="number">1001</span> cursor:[mysql-bin<span class="number">.000004</span>,<span class="number">396</span>,<span class="number">1507701897000</span>] address[/<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3306</span>]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">14</span>:<span class="number">06</span>:<span class="number">04.589</span> - clientId:<span class="number">1001</span> cursor:[mysql-bin<span class="number">.000004</span>,<span class="number">491</span>,<span class="number">1507701904000</span>] address[localhost/<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3306</span>]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">14</span>:<span class="number">06</span>:<span class="number">29.589</span> - clientId:<span class="number">1001</span> cursor:[mysql-bin<span class="number">.000004</span>,<span class="number">822</span>,<span class="number">1507701989000</span>] address[localhost/<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3306</span>]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">11</span> <span class="number">14</span>:<span class="number">49</span>:<span class="number">08.589</span> - clientId:<span class="number">1001</span> cursor:[mysql-bin<span class="number">.000004</span>,<span class="number">1076</span>,<span class="number">1507704547000</span>] address[localhost/<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3306</span>]</span><br></pre></td></tr></table></figure>
<h2 id="Cannal_Internal_Overview">Cannal Internal Overview</h2><h3 id="canal_client_&amp;_server">canal client &amp; server</h3><p>canal client与canal server之间是C/S模式的通信，客户端采用NIO，服务端采用Netty。<br>canal server启动后，如果没有canal client，那么canal server不会去mysql拉取binlog。</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    connector.connect();</span><br><span class="line">    connector.subscribe();</span><br><span class="line">    <span class="keyword">while</span> (running) &#123;</span><br><span class="line">        Message message = connector.getWithoutAck(batchSize); <span class="comment">// 获取指定数量的数据</span></span><br><span class="line">        <span class="keyword">long</span> batchId = message.getId();</span><br><span class="line">        <span class="keyword">int</span> <span class="keyword">size</span> = message.getEntries().<span class="keyword">size</span>();</span><br><span class="line">        printSummary(message, batchId, <span class="keyword">size</span>);</span><br><span class="line">        printEntry(message.getEntries());</span><br><span class="line">        connector.ack(batchId); <span class="comment">// 提交确认</span></span><br><span class="line">        connector.rollback(batchId); <span class="comment">// 处理失败, 回滚数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    connector.disconnect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>canal client与canal server之间属于增量订阅/消费，流程图如下：（其中C端是canal client，S端是canal server）</p>
<p><img src="https://camo.githubusercontent.com/db1debcfa50f4ebea1f56a1fa0e18a4e960cafcc/687474703a2f2f646c2e69746579652e636f6d2f75706c6f61642f6174746163686d656e742f303038302f333239372f39643765643133652d366138362d333836642d393266342d3835323233386334373562662e6a7067" alt="canal protocol"></p>
<p>canal client调用connect()方法时，类型为PacketType.HANDSHAKE，接着写入CLIENTAUTHENTICATION。然后调用subscribe()方法，类型为SUBSCRIPTION。</p>
<p>对应服务端采用netty处理RPC请求（CanalServerWithNetty）:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">bootstrap.setPipelineFactory(<span class="keyword">new</span> ChannelPipelineFactory() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ChannelPipeline <span class="title">getPipeline</span><span class="params">()</span> throws Exception </span>&#123;</span><br><span class="line">        ChannelPipeline pipelines = Channels.pipeline();</span><br><span class="line">        pipelines.addLast(FixedHeaderFrameDecoder.<span class="keyword">class</span>.getName(), <span class="keyword">new</span> FixedHeaderFrameDecoder());</span><br><span class="line">        <span class="comment">// 处理客户端的HANDSHAKE请求</span></span><br><span class="line">        pipelines.addLast(HandshakeInitializationHandler.<span class="keyword">class</span>.getName(),</span><br><span class="line">            <span class="keyword">new</span> HandshakeInitializationHandler(childGroups));</span><br><span class="line">        <span class="comment">// 处理客户端的CLIENTAUTHENTICATION请求</span></span><br><span class="line">        pipelines.addLast(ClientAuthenticationHandler.<span class="keyword">class</span>.getName(),</span><br><span class="line">            <span class="keyword">new</span> ClientAuthenticationHandler(embeddedServer));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理客户端的会话请求，包括SUBSCRIPTION，GET等</span></span><br><span class="line">        SessionHandler sessionHandler = <span class="keyword">new</span> SessionHandler(embeddedServer);</span><br><span class="line">        pipelines.addLast(SessionHandler.<span class="keyword">class</span>.getName(), sessionHandler);</span><br><span class="line">        <span class="keyword">return</span> pipelines;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>ClientAuthenticationHandler处理鉴权后，会移除HandshakeInitializationHandler和ClientAuthenticationHandler</p>
<p>以client发送GET，server从mysql得到binlog后，返回MESSAGES给client为例，说明client和server的rpc交互过程：</p>
<p>SimpleCanalConnector发送GET请求，并读取响应结果的流程：</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">public <span class="type">Message</span> getWithoutAck(<span class="type">int</span> batchSize, <span class="type">Long</span> timeout, <span class="type">TimeUnit</span> unit) throws <span class="type">CanalClientException</span> &#123;</span><br><span class="line">    waitClientRunning();</span><br><span class="line">    <span class="type">int</span> size = (batchSize &lt;= <span class="number">0</span>) ? <span class="number">1000</span> : batchSize;</span><br><span class="line">    long time = (timeout == null || timeout &lt; <span class="number">0</span>) ? -<span class="number">1</span> : timeout; // -<span class="number">1</span>代表不做timeout控制</span><br><span class="line">    <span class="keyword">if</span> (unit == null) unit = <span class="type">TimeUnit</span>.<span class="type">MILLISECONDS</span>;</span><br><span class="line"></span><br><span class="line">    // client发送<span class="type">GET</span>请求</span><br><span class="line">    writeWithHeader(<span class="type">Packet</span>.newBuilder()</span><br><span class="line">        .setType(<span class="type">PacketType</span>.<span class="type">GET</span>)</span><br><span class="line">        .setBody(<span class="type">Get</span>.newBuilder()</span><br><span class="line">            .setAutoAck(<span class="literal">false</span>)</span><br><span class="line">            .setDestination(clientIdentity.getDestination())</span><br><span class="line">            .setClientId(<span class="type">String</span>.valueOf(clientIdentity.getClientId()))</span><br><span class="line">            .setFetchSize(size)</span><br><span class="line">            .setTimeout(time)</span><br><span class="line">            .setUnit(unit.ordinal())</span><br><span class="line">            .build()</span><br><span class="line">            .toByteString())</span><br><span class="line">        .build()</span><br><span class="line">        .toByteArray());</span><br><span class="line">    // client获取<span class="type">GET</span>结果    </span><br><span class="line">    <span class="keyword">return</span> receiveMessages();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private <span class="type">Message</span> receiveMessages() throws <span class="type">IOException</span> &#123;</span><br><span class="line">    // 读取server发送的数据包</span><br><span class="line">    <span class="type">Packet</span> p = <span class="type">Packet</span>.parseFrom(readNextPacket());</span><br><span class="line">    switch (p.getType()) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">MESSAGES</span>: &#123;</span><br><span class="line">            <span class="type">Messages</span> messages = <span class="type">Messages</span>.parseFrom(p.getBody());</span><br><span class="line">            <span class="type">Message</span> <span class="literal">result</span> = new <span class="type">Message</span>(messages.getBatchId());</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">ByteString</span> byteString : messages.getMessagesList()) &#123;</span><br><span class="line">                <span class="literal">result</span>.addEntry(<span class="type">Entry</span>.parseFrom(byteString));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>服务端SessionHandler处理客户端发送的GET请求流程：</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> GET:</span><br><span class="line">    <span class="comment">// 读取客户端发送的数据包，封装为Get对象</span></span><br><span class="line">    Get <span class="keyword">get</span> = CanalPacket.Get.parseFrom(packet.getBody());</span><br><span class="line">    <span class="comment">// destination表示canal instance</span></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotEmpty(<span class="keyword">get</span>.getDestination()) &amp;&amp; StringUtils.isNotEmpty(<span class="keyword">get</span>.getClientId())) &#123;</span><br><span class="line">        clientIdentity = <span class="keyword">new</span> ClientIdentity(<span class="keyword">get</span>.getDestination(), Short.valueOf(<span class="keyword">get</span>.getClientId()));</span><br><span class="line">        Message message = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">get</span>.getTimeout() == -<span class="number">1</span>) &#123;<span class="comment">// 是否是初始值</span></span><br><span class="line">            message = embeddedServer.getWithoutAck(clientIdentity, <span class="keyword">get</span>.getFetchSize());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            TimeUnit unit = convertTimeUnit(<span class="keyword">get</span>.getUnit());</span><br><span class="line">            message = embeddedServer.getWithoutAck(clientIdentity, <span class="keyword">get</span>.getFetchSize(), <span class="keyword">get</span>.getTimeout(), unit);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置返回给客户端的数据包类型为MESSAGES   </span></span><br><span class="line">        Packet.Builder packetBuilder = CanalPacket.Packet.newBuilder();</span><br><span class="line">        packetBuilder.setType(PacketType.MESSAGES);</span><br><span class="line">        <span class="comment">// 构造Message</span></span><br><span class="line">        Messages.Builder messageBuilder = CanalPacket.Messages.newBuilder();</span><br><span class="line">        messageBuilder.setBatchId(message.getId());</span><br><span class="line">        <span class="keyword">if</span> (message.getId() != -<span class="number">1</span> &amp;&amp; !CollectionUtils.isEmpty(message.getEntries())) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Entry entry : message.getEntries()) &#123;</span><br><span class="line">                messageBuilder.addMessages(entry.toByteString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        packetBuilder.setBody(messageBuilder.build().toByteString());</span><br><span class="line">        <span class="comment">// 输出数据，返回给客户端</span></span><br><span class="line">        NettyUtils.write(ctx.getChannel(), packetBuilder.build().toByteArray(), <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>get/ack/rollback协议介绍：</p>
<ul>
<li>Message getWithoutAck(int batchSize)，允许指定batchSize，一次可以获取多条，每次返回的对象为Message，包含的内容为：<br>– batch id 唯一标识<br>– entries 具体的数据对象，对应的数据对象格式：<a href="https://github.com/alibaba/canal/blob/master/protocol/src/main/java/com/alibaba/otter/canal/protocol/EntryProtocol.proto">EntryProtocol.proto</a></li>
<li>void rollback(long batchId)，顾命思议，回滚上次的get请求，重新获取数据。基于get获取的batchId进行提交，避免误操作</li>
<li>void ack(long batchId)，顾命思议，确认已经消费成功，通知server删除数据。基于get获取的batchId进行提交，避免误操作</li>
</ul>
<p>EntryProtocol.protod对应的canal消息结构如下：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Entry  </span><br><span class="line">    Header  </span><br><span class="line">        logfileName [binlog文件名]  </span><br><span class="line">        logfileOffset [binlog position]  </span><br><span class="line">        executeTime [binlog里记录变更发生的时间戳,精确到秒]  </span><br><span class="line">        schemaName   </span><br><span class="line">        tableName  </span><br><span class="line">        eventType [<span class="operator"><span class="keyword">insert</span>/<span class="keyword">update</span>/<span class="keyword">delete</span>类型]  </span><br><span class="line">    entryType   [事务头<span class="keyword">BEGIN</span>/事务尾<span class="keyword">END</span>/数据ROWDATA]  </span><br><span class="line">    storeValue  [<span class="keyword">byte</span>数据,可展开，对应的类型为RowChange]  </span><br><span class="line">      </span><br><span class="line">RowChange  </span><br><span class="line">    isDdl       [是否是<span class="keyword">ddl</span>变更操作，比如<span class="keyword">create</span> <span class="keyword">table</span>/<span class="keyword">drop</span> <span class="keyword">table</span>]  </span><br><span class="line">    <span class="keyword">sql</span>         [具体的<span class="keyword">ddl</span> <span class="keyword">sql</span>]  </span><br><span class="line">    rowDatas    [具体<span class="keyword">insert</span>/<span class="keyword">update</span>/<span class="keyword">delete</span>的变更数据，可为多条，<span class="number">1</span>个<span class="keyword">binlog</span> <span class="keyword">event</span>事件可对应多条变更，比如批处理]  </span><br><span class="line">        beforeColumns [<span class="keyword">Column</span>类型的数组，变更前的数据字段]  </span><br><span class="line">        afterColumns [<span class="keyword">Column</span>类型的数组，变更后的数据字段]  </span><br><span class="line">          </span><br><span class="line"><span class="keyword">Column</span>   </span><br><span class="line">    <span class="keyword">index</span>         </span><br><span class="line">    sqlType     [jdbc <span class="keyword">type</span>]  </span><br><span class="line">    <span class="keyword">name</span>        [<span class="keyword">column</span> <span class="keyword">name</span>]  </span><br><span class="line">    isKey       [是否为主键]  </span><br><span class="line">    <span class="keyword">updated</span>     [是否发生过变更]  </span><br><span class="line">    <span class="keyword">isNull</span>      [值是否为<span class="literal">null</span>]  </span><br><span class="line">    <span class="keyword">value</span>       [具体的内容，注意为<span class="keyword">string</span>文本]</span></span><br></pre></td></tr></table></figure>
<p>SessionHandler中服务端处理客户端的其他类型请求，都会调用CanalServerWithEmbedded的相关方法：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> SUBSCRIPTION:</span><br><span class="line">        Sub sub = Sub.parseFrom(packet.getBody());</span><br><span class="line">        embeddedServer.subscribe(clientIdentity);</span><br><span class="line"><span class="keyword">case</span> GET:</span><br><span class="line">        Get get = CanalPacket.Get.parseFrom(packet.getBody());</span><br><span class="line">        message = embeddedServer.getWithoutAck(clientIdentity, get.getFetchSize());</span><br><span class="line"><span class="keyword">case</span> CLIENTACK:</span><br><span class="line">        ClientAck ack = CanalPacket.ClientAck.parseFrom(packet.getBody());</span><br><span class="line">        embeddedServer.ack(clientIdentity, ack.getBatchId());</span><br><span class="line"><span class="keyword">case</span> CLIENTROLLBACK:</span><br><span class="line">        ClientRollback rollback = CanalPacket.ClientRollback.parseFrom(packet.getBody());</span><br><span class="line">        embeddedServer.rollback(clientIdentity);<span class="comment">// 回滚所有批次</span></span><br></pre></td></tr></table></figure>
<h3 id="CanalServerWithEmbedded">CanalServerWithEmbedded</h3><p>CanalServer包含多个Instance，它的成员变量canalInstances记录了instance名称与实例的映射关系。<br>因为是一个Map，所以同一个Server不允许出现相同instance名称，比如不能同时有两个example在一个server上。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CanalServerWithEmbedded</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">AbstractCanalLifeCycle</span> <span class="title">implements</span> <span class="title">CanalServer</span>, <span class="title">CanalService</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Map</span>&lt;<span class="type">String</span>, <span class="type">CanalInstance</span>&gt; canalInstances;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">CanalInstanceGenerator</span>     canalInstanceGenerator;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下图表示一个server有两个instance，每个Client连接一个Instance。<br>每个Canal实例模拟为一个MySQL的slave，所以每个Instance的slaveId必须不一样。比如图中两个Instance的id分别是1234和1235。</p>
<p><img src="http://img.blog.csdn.net/20171011202259253" alt="instances"></p>
<p>注意这里每个Canal Client都对应一个Instance，每个Client在启动时，都会指定一个Destination，这个Destination就表示Instance的名称。<br>所以CanalServerWithEmbedded处理各种请求时的参数都有ClientIdentity，从ClientIdentity中获取destination，就可以获取出对应的CanalInstance</p>
<p>下面以CanalServerWithEmbedded的订阅方法为例：</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">subscribe</span><span class="params">(ClientIdentity clientIdentity)</span> <span class="keyword">throws</span> CanalServerException </span>&#123;</span><br><span class="line">    <span class="comment">// ClientIdentity表示Canal Client客户端，从中可以获取出客户端指定连接的Destination</span></span><br><span class="line">    <span class="comment">// 由于CanalServerWithEmbedded记录了每个Destination对应的Instance，可以获取客户端对应的Instance</span></span><br><span class="line">    CanalInstance canalInstance = canalInstances.get(clientIdentity.getDestination());</span><br><span class="line">    <span class="keyword">if</span> (!canalInstance.getMetaManager().isStart()) &#123;</span><br><span class="line">        canalInstance.getMetaManager().start(); <span class="comment">// 启动Instance的元数据管理器</span></span><br><span class="line">    &#125;</span><br><span class="line">    canalInstance.getMetaManager().subscribe(clientIdentity); <span class="comment">// 执行一下meta订阅</span></span><br><span class="line">    Position position = canalInstance.getMetaManager().getCursor(clientIdentity);</span><br><span class="line">    <span class="keyword">if</span> (position == <span class="keyword">null</span>) &#123;</span><br><span class="line">        position = canalInstance.getEventStore().getFirstPosition();<span class="comment">// 获取一下store中的第一条</span></span><br><span class="line">        <span class="keyword">if</span> (position != <span class="keyword">null</span>) &#123;</span><br><span class="line">            canalInstance.getMetaManager().updateCursor(clientIdentity, position); <span class="comment">// 更新一下cursor</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通知下订阅关系变化</span></span><br><span class="line">    canalInstance.subscribeChange(clientIdentity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>每个CanalInstance中包括了四个组件：EventParser、EventSink、EventStore、MetaManager。</p>
<p>服务端主要的处理方法包括get/ack/rollback，这三个方法都会用到Instance上面的几个内部组件，主要还是EventStore和MetaManager：</p>
<p>在这之前，要先理解EventStore的含义，EventStore是一个RingBuffer，有三个指针：Put、Get、Ack。</p>
<ul>
<li>Put: Canal Server从MySQL拉取到数据后，放到内存中，Put增加</li>
<li>Get: 消费者（Canal Client）从内存中消费数据，Get增加</li>
<li>Ack: 消费者消费完成，Ack增加。并且会删除Put中已经被Ack的数据</li>
</ul>
<p>这三个操作与Instance组件的关系如下：</p>
<p><img src="http://img.blog.csdn.net/20171011211529169" alt="ops"></p>
<p>客户端通过canal server获取mysql binlog有几种方式（get方法和getWithoutAck）：</p>
<ul>
<li>如果timeout为null，则采用tryGet方式，即时获取  </li>
<li>如果timeout不为null  <ol>
<li>timeout为0，则采用get阻塞方式，获取数据，不设置超时，直到有足够的batchSize数据才返回  </li>
<li>timeout不为0，则采用get+timeout方式，获取数据，超时还没有batchSize足够的数据，有多少返回多少  </li>
</ol>
</li>
</ul>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Events&lt;Event&gt; getEvents(CanalEventStore eventStore, Position <span class="built_in">start</span>, int batchSize, Long timeout,</span><br><span class="line">                                TimeUnit unit) &#123;</span><br><span class="line">    <span class="keyword">if</span> (timeout == <span class="constant">null</span>) &#123;</span><br><span class="line">        <span class="constant">return</span> eventStore.tryGet(<span class="built_in">start</span>, batchSize);<span class="comment"> // 即时获取</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (timeout &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="constant">return</span> eventStore.<span class="built_in">get</span>(<span class="built_in">start</span>, batchSize);<span class="comment"> // 阻塞获取</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="constant">return</span> eventStore.<span class="built_in">get</span>(<span class="built_in">start</span>, batchSize, timeout, unit);<span class="comment"> // 异步获取</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：EventStore的实现采用了类似Disruptor的RingBuffer环形缓冲区。RingBuffer的实现类是MemoryEventStoreWithBuffer</p>
</blockquote>
<p>get方法和getWithoutAck方法的区别是：</p>
<ul>
<li>get方法会立即调用ack</li>
<li>getWithoutAck方法不会调用ack</li>
</ul>
<h3 id="EventStore">EventStore</h3><p>以10条数据为例，初始时current=-1，第一个元素起始next=0，end=9，循环<code>[0,9]</code>所有元素。<br>List元素为(A,B,C,D,E,F,G,H,I,J)</p>
<table>
<thead>
<tr>
<th>next</th>
<th>entries[next]</th>
<th>next-current-1</th>
<th>list element</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>entries[0]</td>
<td>0-(-1)-1=0</td>
<td>A</td>
</tr>
<tr>
<td>1</td>
<td>entries[1]</td>
<td>1-(-1)-1=1</td>
<td>B</td>
</tr>
<tr>
<td>2</td>
<td>entries[2]</td>
<td>2-(-1)-1=2</td>
<td>C</td>
</tr>
<tr>
<td>3</td>
<td>entries[3]</td>
<td>3-(-1)-1=3</td>
<td>D</td>
</tr>
<tr>
<td>.</td>
<td>……….</td>
<td>……….</td>
<td>.</td>
</tr>
<tr>
<td>9</td>
<td>entries[9]</td>
<td>9-(-1)-1=9</td>
<td>J</td>
</tr>
</tbody>
</table>
<p>第一批10个元素put完成后，putSequence设置为end=9。假设第二批又Put了5个元素:(K,L,M,N,O)</p>
<p>current=9，起始next=9+1=10，end=9+5=14，在Put完成后，putSequence设置为end=14。</p>
<table>
<thead>
<tr>
<th>next</th>
<th>entries[next]</th>
<th>next-current-1</th>
<th>list element</th>
</tr>
</thead>
<tbody>
<tr>
<td>10</td>
<td>entries[10]</td>
<td>10-(9)-1=0</td>
<td>K</td>
</tr>
<tr>
<td>11</td>
<td>entries[11]</td>
<td>11-(9)-1=1</td>
<td>L</td>
</tr>
<tr>
<td>12</td>
<td>entries[12]</td>
<td>12-(9)-1=2</td>
<td>M</td>
</tr>
<tr>
<td>13</td>
<td>entries[13]</td>
<td>13-(9)-1=3</td>
<td>N</td>
</tr>
<tr>
<td>14</td>
<td>entries[14]</td>
<td>14-(9)-1=3</td>
<td>O</td>
</tr>
</tbody>
</table>
<p>这里假设环形缓冲区的最大大小为15个（源码中是16MB），那么上面两批一共产生了15个元素，刚好填满了环形缓冲区。<br>如果又有Put事件进来，由于环形缓冲区已经满了，没有可用的slot，则Put操作会被阻塞，直到被消费掉。</p>
<p>下面是Put填充环形缓冲区的代码，检查可用slot（checkFreeSlotAt方法）在几个put方法中。</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> MemoryEventStoreWithBuffer <span class="keyword">extends</span> AbstractCanalStoreScavenge <span class="keyword">implements</span> CanalEventStore&lt;Event&gt;, CanalStoreScavenge &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> INIT_SQEUENCE = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>               bufferSize    = <span class="number">16</span> * <span class="number">1024</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>               bufferMemUnit = <span class="number">1024</span>;                         <span class="comment">// memsize的单位，默认为1kb大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>               indexMask;</span><br><span class="line">    <span class="keyword">private</span> Event[]           entries;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录下put/get/ack操作的三个下标</span></span><br><span class="line">    <span class="keyword">private</span> AtomicLong        putSequence   = <span class="keyword">new</span> AtomicLong(INIT_SQEUENCE); <span class="comment">// 代表当前put操作最后一次写操作发生的位置</span></span><br><span class="line">    <span class="keyword">private</span> AtomicLong        getSequence   = <span class="keyword">new</span> AtomicLong(INIT_SQEUENCE); <span class="comment">// 代表当前get操作读取的最后一条的位置</span></span><br><span class="line">    <span class="keyword">private</span> AtomicLong        ackSequence   = <span class="keyword">new</span> AtomicLong(INIT_SQEUENCE); <span class="comment">// 代表当前ack操作的最后一条的位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动EventStore时，创建指定大小的缓冲区，Event数组的大小是16*1024</span></span><br><span class="line">    <span class="comment">// 也就是说算个数的话，数组可以容纳16000个事件。算内存的话，大小为16MB</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> start() <span class="keyword">throws</span> CanalStoreException &#123;</span><br><span class="line">        <span class="keyword">super</span>.start();</span><br><span class="line">        indexMask = bufferSize - <span class="number">1</span>;</span><br><span class="line">        entries = <span class="keyword">new</span> Event[bufferSize];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// EventParser解析后，会放入内存中（Event数组，缓冲区）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> doPut(List&lt;Event&gt; data) &#123;</span><br><span class="line">        <span class="keyword">long</span> current = putSequence.get(); <span class="comment">// 取得当前的位置，初始时为-1，第一个元素为-1+1=0</span></span><br><span class="line">        <span class="keyword">long</span> end = current + data.<span class="keyword">size</span>(); <span class="comment">// 最末尾的位置，假设Put了10条数据，end=-1+10=9</span></span><br><span class="line">        <span class="comment">// 先写数据，再更新对应的cursor,并发度高的情况，putSequence会被get请求可见，拿出了ringbuffer中的老的Entry值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">next</span> = current + <span class="number">1</span>; <span class="keyword">next</span> &lt;= end; <span class="keyword">next</span>++) &#123;</span><br><span class="line">            entries[getIndex(<span class="keyword">next</span>)] = data.get((<span class="keyword">int</span>) (<span class="keyword">next</span> - current - <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        putSequence.set(end);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Put是生产数据，Get是消费数据，Get一定不会超过Put。比如Put了10条数据，Get最多只能获取到10条数据。但有时候为了保证Get处理的速度，Put和Get并不会相等。<br>可以把Put看做是生产者，Get看做是消费者。生产者速度可以很快，消费者则可以慢慢地消费。比如Put了1000条，而Get我们只需要每次处理10条数据。</p>
<p>仍然以前面的示例来说明Get的流程，初始时current=-1，假设Put了两批数据一共15条，maxAbleSequence=14，而Get的BatchSize假设为10。<br>初始时next=current=-1，end=-1。通过startPosition，会设置next=0。最后end又被赋值为9，即循环缓冲区[0,9]一共10个元素。</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Events&lt;Event&gt; doGet(Position start, <span class="keyword">int</span> batchSize) <span class="keyword">throws</span> CanalStoreException &#123;</span><br><span class="line">    LogPosition startPosition = (LogPosition) start;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> current = getSequence.get();</span><br><span class="line">    <span class="keyword">long</span> maxAbleSequence = putSequence.get();</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">next</span> = current;</span><br><span class="line">    <span class="keyword">long</span> end = current;</span><br><span class="line">    <span class="comment">// 如果startPosition为null，说明是第一次，默认+1处理</span></span><br><span class="line">    <span class="keyword">if</span> (startPosition == <span class="keyword">null</span> || !startPosition.getPostion().isIncluded()) &#123; <span class="comment">// 第一次订阅之后，需要包含一下start位置，防止丢失第一条记录</span></span><br><span class="line">        <span class="keyword">next</span> = <span class="keyword">next</span> + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    end = (<span class="keyword">next</span> + batchSize - <span class="number">1</span>) &lt; maxAbleSequence ? (<span class="keyword">next</span> + batchSize - <span class="number">1</span>) : maxAbleSequence;</span><br><span class="line">    <span class="comment">// 提取数据并返回</span></span><br><span class="line">    <span class="keyword">for</span> (; <span class="keyword">next</span> &lt;= end; <span class="keyword">next</span>++) &#123;</span><br><span class="line">        Event event = entries[getIndex(<span class="keyword">next</span>)];</span><br><span class="line">        <span class="keyword">if</span> (ddlIsolation &amp;&amp; isDdl(event.getEntry().getHeader().getEventType())) &#123;</span><br><span class="line">            <span class="comment">// 如果是ddl隔离，直接返回</span></span><br><span class="line">            <span class="keyword">if</span> (entrys.<span class="keyword">size</span>() == <span class="number">0</span>) &#123;</span><br><span class="line">                entrys.add(event);<span class="comment">// 如果没有DML事件，加入当前的DDL事件</span></span><br><span class="line">                end = <span class="keyword">next</span>; <span class="comment">// 更新end为当前</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 如果之前已经有DML事件，直接返回了，因为不包含当前next这记录，需要回退一个位置</span></span><br><span class="line">                end = <span class="keyword">next</span> - <span class="number">1</span>; <span class="comment">// next-1一定大于current，不需要判断</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            entrys.add(event);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 处理PositionRange，然后设置getSequence为end</span></span><br><span class="line">    getSequence.compareAndSet(current, end)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ack操作的上限是Get，假设Put了15条数据，Get了10条数据，最多也只能Ack10条数据。Ack的目的是清空缓冲区中已经被Get过的数据</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> ack(Position position) <span class="keyword">throws</span> CanalStoreException &#123;</span><br><span class="line">    cleanUntil(position);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> cleanUntil(Position position) <span class="keyword">throws</span> CanalStoreException &#123;</span><br><span class="line">    <span class="keyword">long</span> sequence = ackSequence.get();</span><br><span class="line">    <span class="keyword">long</span> maxSequence = getSequence.get();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> hasMatch = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">long</span> memsize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">next</span> = sequence + <span class="number">1</span>; <span class="keyword">next</span> &lt;= maxSequence; <span class="keyword">next</span>++) &#123;</span><br><span class="line">        Event event = entries[getIndex(<span class="keyword">next</span>)];</span><br><span class="line">        memsize += calculateSize(event);</span><br><span class="line">        <span class="keyword">boolean</span> match = CanalEventUtils.checkPosition(event, (LogPosition) position);</span><br><span class="line">        <span class="keyword">if</span> (match) &#123;<span class="comment">// 找到对应的position，更新ack seq</span></span><br><span class="line">            hasMatch = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (batchMode.isMemSize()) &#123;</span><br><span class="line">                ackMemSize.addAndGet(memsize);</span><br><span class="line">                <span class="comment">// 尝试清空buffer中的内存，将ack之前的内存全部释放掉</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">long</span> index = sequence + <span class="number">1</span>; index &lt; <span class="keyword">next</span>; index++) &#123;</span><br><span class="line">                    entries[getIndex(index)] = <span class="keyword">null</span>;<span class="comment">// 设置为null</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ackSequence.compareAndSet(sequence, <span class="keyword">next</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>rollback回滚方法的实现则比较简单，将getSequence回退到ack位置。</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rollback</span>(<span class="params"></span>) throws CanalStoreException </span>&#123;</span><br><span class="line">    getSequence.<span class="keyword">set</span>(ackSequence.<span class="keyword">get</span>());</span><br><span class="line">    getMemSize.<span class="keyword">set</span>(ackMemSize.<span class="keyword">get</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下图展示了RingBuffer的几个操作示例：</p>
<p><img src="http://img.blog.csdn.net/20171011225116791" alt="ringbuffer"></p>
<h3 id="EventParser_WorkFlow">EventParser WorkFlow</h3><p>EventStore负责存储解析后的Binlog事件，而解析动作负责拉取Binlog，它的流程比较复杂。需要和MetaManager进行交互。<br>比如要记录每次拉取的Position，这样下一次就可以从上一次的最后一个位置继续拉取。所以MetaManager应该是有状态的。</p>
<p>EventParser的流程如下：</p>
<ol>
<li>Connection获取上一次解析成功的位置 (如果第一次启动，则获取初始指定的位置或者是当前数据库的binlog位点)</li>
<li>Connection建立链接，发送BINLOG_DUMP指令</li>
<li>Mysql开始推送Binaly Log</li>
<li>接收到的Binaly Log的通过Binlog parser进行协议解析，补充一些特定信息</li>
<li>传递给EventSink模块进行数据存储，是一个阻塞操作，直到存储成功</li>
<li>存储成功后，定时记录Binaly Log位置</li>
</ol>
<p><img src="https://camo.githubusercontent.com/031db3aa27461d13faa2dea479ef639f93386a00/687474703a2f2f646c2e69746579652e636f6d2f75706c6f61642f6174746163686d656e742f303038302f333134332f37393531633136392d663764662d336362332d616562622d6439323466353733313163622e6a7067" alt="parser"></p>
<p>上面提到的Connection指的是实现了<code>ErosaConnection</code>接口的<code>MysqlConnection</code>。<br><code>EventParser</code>的实现类是实现了<code>AbstractEventParser</code>的<code>MysqlEventParser</code>。</p>
<p><code>EventParser</code>解析binlog后通过<code>EventSink</code>写入到<code>EventStore</code>，这条链路可以通过EventStore的put方法串联起来：</p>
<p><img src="http://img.blog.csdn.net/20171011234800632" alt="put"></p>
<p>其实这里还有一个EventTransactionBuffer缓冲区，即Parser解析后先放到缓冲区中，<br>当事务发生时或者数据超过阈值，就会执行刷新操作：即消费缓冲区的数据，放到EventStore中。<br>这个缓冲区有两个偏移量指针：putSequence和flushSequence。</p>
<h2 id="Canal_HA">Canal HA</h2><p>单机模拟两个Canal Server，将单机模式复制出两个文件夹，并修改相关配置</p>
<p>canal_m/conf/canal.properties</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">canal.id= <span class="number">2</span></span><br><span class="line">canal.ip=</span><br><span class="line">canal.port= <span class="number">11112</span></span><br><span class="line">canal.zkServers=localhost:<span class="number">2181</span></span><br><span class="line">canal.<span class="keyword">instance</span>.<span class="keyword">global</span>.<span class="keyword">spring</span>.xml = classpath:<span class="keyword">spring</span>/<span class="keyword">default</span>-<span class="keyword">instance</span>.xml</span><br></pre></td></tr></table></figure>
<p>canal_m/conf/example/instance.properties</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">canal<span class="class">.instance</span><span class="class">.mysql</span><span class="class">.slaveId</span> = <span class="number">1235</span></span><br></pre></td></tr></table></figure>
<p>canal_s</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">canal.id= <span class="number">3</span></span><br><span class="line">canal.ip=</span><br><span class="line">canal.port= <span class="number">11113</span></span><br><span class="line">canal.zkServers=localhost:<span class="number">2181</span></span><br><span class="line">canal.<span class="keyword">instance</span>.<span class="keyword">global</span>.<span class="keyword">spring</span>.xml = classpath:<span class="keyword">spring</span>/<span class="keyword">default</span>-<span class="keyword">instance</span>.xml</span><br></pre></td></tr></table></figure>
<p>canal_s/conf/example/instance.properties</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">canal<span class="class">.instance</span><span class="class">.mysql</span><span class="class">.slaveId</span> = <span class="number">1236</span></span><br></pre></td></tr></table></figure>
<p>启动canal_m</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2017<span class="tag">-10-12</span> 14<span class="pseudo">:51</span><span class="pseudo">:45</span><span class="class">.202</span> <span class="attr_selector">[main]</span> <span class="tag">INFO</span>  <span class="tag">com</span><span class="class">.alibaba</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.deployer</span><span class="class">.CanalLauncher</span> <span class="tag">-</span> ## <span class="tag">start</span> <span class="tag">the</span> <span class="tag">canal</span> <span class="tag">server</span>.</span><br><span class="line">2017<span class="tag">-10-12</span> 14<span class="pseudo">:51</span><span class="pseudo">:45</span><span class="class">.776</span> <span class="attr_selector">[main]</span> <span class="tag">INFO</span>  <span class="tag">com</span><span class="class">.alibaba</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.deployer</span><span class="class">.CanalController</span> <span class="tag">-</span> ## <span class="tag">start</span> <span class="tag">the</span> <span class="tag">canal</span> <span class="tag">server</span><span class="attr_selector">[192.168.6.52:11112]</span></span><br><span class="line">2017<span class="tag">-10-12</span> 14<span class="pseudo">:51</span><span class="pseudo">:46</span><span class="class">.687</span> <span class="attr_selector">[main]</span> <span class="tag">INFO</span>  <span class="tag">com</span><span class="class">.alibaba</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.deployer</span><span class="class">.CanalLauncher</span> <span class="tag">-</span> ## <span class="tag">the</span> <span class="tag">canal</span> <span class="tag">server</span> <span class="tag">is</span> <span class="tag">running</span> <span class="tag">now</span> ......</span><br></pre></td></tr></table></figure>
<p>启动canal_s</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2017<span class="tag">-10-12</span> 14<span class="pseudo">:52</span><span class="pseudo">:18</span><span class="class">.999</span> <span class="attr_selector">[main]</span> <span class="tag">INFO</span>  <span class="tag">com</span><span class="class">.alibaba</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.deployer</span><span class="class">.CanalLauncher</span> <span class="tag">-</span> ## <span class="tag">start</span> <span class="tag">the</span> <span class="tag">canal</span> <span class="tag">server</span>.</span><br><span class="line">2017<span class="tag">-10-12</span> 14<span class="pseudo">:52</span><span class="pseudo">:19</span><span class="class">.208</span> <span class="attr_selector">[main]</span> <span class="tag">INFO</span>  <span class="tag">com</span><span class="class">.alibaba</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.deployer</span><span class="class">.CanalController</span> <span class="tag">-</span> ## <span class="tag">start</span> <span class="tag">the</span> <span class="tag">canal</span> <span class="tag">server</span><span class="attr_selector">[192.168.6.52:11113]</span></span><br><span class="line">2017<span class="tag">-10-12</span> 14<span class="pseudo">:52</span><span class="pseudo">:19</span><span class="class">.364</span> <span class="attr_selector">[main]</span> <span class="tag">INFO</span>  <span class="tag">com</span><span class="class">.alibaba</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.deployer</span><span class="class">.CanalLauncher</span> <span class="tag">-</span> ## <span class="tag">the</span> <span class="tag">canal</span> <span class="tag">server</span> <span class="tag">is</span> <span class="tag">running</span> <span class="tag">now</span> ......</span><br></pre></td></tr></table></figure>
<p>master提供服务，canal_m/logs/example/example.log下有日志，而canal_s/logs没有example文件夹</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0652 ~]$ tail -f canal_m/logs/example/example<span class="class">.log</span></span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">14</span>:<span class="number">51</span>:<span class="number">46.453</span> [main] INFO  c<span class="class">.a</span><span class="class">.o</span><span class="class">.c</span><span class="class">.i</span><span class="class">.spring</span><span class="class">.support</span><span class="class">.PropertyPlaceholderConfigurer</span> - Loading properties file from class path resource [canal.properties]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">14</span>:<span class="number">51</span>:<span class="number">46.463</span> [main] INFO  c<span class="class">.a</span><span class="class">.o</span><span class="class">.c</span><span class="class">.i</span><span class="class">.spring</span><span class="class">.support</span><span class="class">.PropertyPlaceholderConfigurer</span> - Loading properties file from class path resource [example/instance.properties]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">14</span>:<span class="number">51</span>:<span class="number">46.624</span> [main] INFO  c<span class="class">.a</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.instance</span><span class="class">.spring</span><span class="class">.CanalInstanceWithSpring</span> - start CannalInstance <span class="keyword">for</span> <span class="number">1</span>-example</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">14</span>:<span class="number">51</span>:<span class="number">46.644</span> [main] INFO  c<span class="class">.a</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.instance</span><span class="class">.core</span><span class="class">.AbstractCanalInstance</span> - start successful....</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">14</span>:<span class="number">51</span>:<span class="number">46.658</span> [destination = example , <span class="tag">address</span> = /<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">3306</span> , EventParser] WARN  c<span class="class">.a</span><span class="class">.otter</span><span class="class">.canal</span><span class="class">.parse</span><span class="class">.inbound</span><span class="class">.mysql</span><span class="class">.MysqlEventParser</span> - prepare to find start <span class="attribute">position</span> just show master status</span><br></pre></td></tr></table></figure>
<p>查看Canal HA记录在ZK的信息</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">7</span>] ls /otter/canal/destinations/example/cluster</span><br><span class="line">[<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11112</span>, <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11113</span>]</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">10</span>] get /otter/canal/destinations/example/running</span><br><span class="line">&#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"192.168.6.52:11112"</span>,<span class="string">"cid"</span>:<span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure>
<p>启动example的ClusterCanalClientTest</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">CanalConnector</span> connector = CanalConnectors.newClusterConnector(<span class="string">"192.168.6.52:2181"</span>, destination, <span class="string">"canal"</span>, <span class="string">"canal"</span>);</span><br></pre></td></tr></table></figure>
<p>执行SQL：<code>update test set name = &#39;zqh&#39; where uid=1;</code>，控制台打印日志如下：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> Batch Id: [1] ,count : [3] , memsize : [203] , Time : 2017-10-12 15:05:20</span><br><span class="line"><span class="keyword">*</span> Start : [mysql-bin.000004:1151:1507791918000(2017-10-12 15:05:18)] </span><br><span class="line"><span class="keyword">*</span> End : [mysql-bin.000004:1331:1507791918000(2017-10-12 15:05:18)] </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">================&gt; binlog[mysql-bin.000004:1151] , executeTime : 1507791918000 , delay : 2080ms</span><br><span class="line"> BEGIN ----&gt; Thread id: 763</span><br><span class="line">----------------&gt; binlog[mysql-bin.000004:1277] , name[canal_test,test] , eventType : UPDATE , executeTime : 1507791918000 , delay : 2092ms</span><br><span class="line">uid : 1    type=int(4)</span><br><span class="line">name : zqh    type=varchar(10)    update=true</span><br><span class="line">----------------</span><br><span class="line"> END ----&gt; transaction id: 0</span><br><span class="line">================&gt; binlog[mysql-bin.000004:1331] , executeTime : 1507791918000 , delay : 2130ms</span><br></pre></td></tr></table></figure>
<p>再次查看ZK中记录的客户端信息：</p>
<ul>
<li>一个Instance对应一个Client，这里的Instance名称为example，对应的客户端编号是1001</li>
<li>为了验证Instance确实是由指定的Client连接，在Server上查看11112端口</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">18</span>] get /otter/canal/destinations/example/<span class="number">1001</span>/running</span><br><span class="line">&#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"10.57.241.44:53942"</span>,<span class="string">"clientId"</span>:<span class="number">1001</span>&#125;</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">19</span>] get /otter/canal/destinations/example/<span class="number">1001</span>/cursor</span><br><span class="line">&#123;<span class="string">"@type"</span>:<span class="string">"com.alibaba.otter.canal.protocol.position.LogPosition"</span>,</span><br><span class="line"><span class="string">"identity"</span>:&#123;<span class="string">"slaveId"</span>:-<span class="number">1</span>,<span class="string">"sourceAddress"</span>:&#123;<span class="string">"address"</span>:<span class="string">"localhost"</span>,<span class="string">"port"</span>:<span class="number">3306</span>&#125;&#125;,</span><br><span class="line"><span class="string">"postion"</span>:&#123;<span class="string">"included"</span>:<span class="literal">false</span>,<span class="string">"journalName"</span>:<span class="string">"mysql-bin.000004"</span>,<span class="string">"position"</span>:<span class="number">1331</span>,<span class="string">"serverId"</span>:<span class="number">1</span>,<span class="string">"timestamp"</span>:<span class="number">1507791918000</span>&#125;&#125; ==》serverId表示MySQL的server_id</span><br><span class="line"></span><br><span class="line">[qihuang.zheng@dp0652 ~]$ netstat -anpt|grep <span class="number">11112</span></span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">11112</span>               <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:*                   LISTEN      <span class="number">27816</span>/java   ==》Canal服务端</span><br><span class="line">tcp        <span class="number">0</span>     <span class="number">19</span> <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11112</span>          <span class="number">10.57</span><span class="number">.241</span><span class="number">.44</span>:<span class="number">53942</span>          ESTABLISHED <span class="number">27816</span>/java   ==》Canal客户端</span><br></pre></td></tr></table></figure>
<p>停止canal_m</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng<span class="annotation">@dp</span>0652 canal_m]$ bin/stop.sh</span><br><span class="line"><span class="string">dp0652:</span> stopping canal <span class="number">27816</span> ...</span><br><span class="line">Oook! <span class="string">cost:</span><span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>Instance会在slave节点即canal_s上启动</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0652 ~]$ tail -f canal_s/logs/example/example.<span class="built_in">log</span></span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">15</span>:<span class="number">17</span>:<span class="number">21.452</span> [New I/O server worker <span class="preprocessor">#<span class="number">1</span>-<span class="number">1</span>] ERROR com.alibaba.otter.canal.server.netty.NettyUtils - ErrotCode:<span class="number">400</span> , Caused by :</span></span><br><span class="line">something goes wrong with channel:[id: <span class="number">0x0c182149</span>, /<span class="number">10.57</span><span class="number">.241</span><span class="number">.44</span>:<span class="number">54008</span> =&gt; /<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11113</span>], exception=com.alibaba.otter.canal.server.exception.CanalServerException: destination:example should start first</span><br><span class="line"></span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">15</span>:<span class="number">17</span>:<span class="number">21.661</span> [pool-<span class="number">1</span>-thread-<span class="number">1</span>] INFO  c.a.o.c.i.spring.support.PropertyPlaceholderConfigurer - Loading properties file from <span class="keyword">class</span> path resource [canal.properties]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">15</span>:<span class="number">17</span>:<span class="number">21.663</span> [pool-<span class="number">1</span>-thread-<span class="number">1</span>] INFO  c.a.o.c.i.spring.support.PropertyPlaceholderConfigurer - Loading properties file from <span class="keyword">class</span> path resource [example/instance.properties]</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">15</span>:<span class="number">17</span>:<span class="number">21.767</span> [pool-<span class="number">1</span>-thread-<span class="number">1</span>] WARN  org.springframework.beans.TypeConverterDelegate - PropertyEditor [com.sun.beans.editors.EnumEditor] found through deprecated global PropertyEditorManager fallback - consider <span class="keyword">using</span> a more isolated form of registration, e.g. on the BeanWrapper/BeanFactory!</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">15</span>:<span class="number">17</span>:<span class="number">21.968</span> [pool-<span class="number">1</span>-thread-<span class="number">1</span>] INFO  c.a.otter.canal.instance.spring.CanalInstanceWithSpring - start CannalInstance <span class="keyword">for</span> <span class="number">1</span>-example</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">15</span>:<span class="number">17</span>:<span class="number">21.998</span> [pool-<span class="number">1</span>-thread-<span class="number">1</span>] INFO  c.a.otter.canal.instance.core.AbstractCanalInstance - start successful....</span><br><span class="line"><span class="number">2017</span>-<span class="number">10</span>-<span class="number">12</span> <span class="number">15</span>:<span class="number">17</span>:<span class="number">22.071</span> [destination = example , address = /<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3306</span> , EventParser] WARN  c.a.otter.canal.parse.inbound.mysql.MysqlEventParser - prepare to find start position just last position</span><br><span class="line"> &#123;<span class="string">"identity"</span>:&#123;<span class="string">"slaveId"</span>:-<span class="number">1</span>,<span class="string">"sourceAddress"</span>:&#123;<span class="string">"address"</span>:<span class="string">"localhost"</span>,<span class="string">"port"</span>:<span class="number">3306</span>&#125;&#125;,<span class="string">"postion"</span>:&#123;<span class="string">"included"</span>:<span class="literal">false</span>,<span class="string">"journalName"</span>:<span class="string">"mysql-bin.000004"</span>,<span class="string">"position"</span>:<span class="number">1331</span>,<span class="string">"serverId"</span>:<span class="number">1</span>,<span class="string">"timestamp"</span>:<span class="number">1507791918000</span>&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>停止canal_m后，只剩下canal_s，所以Canal集群只有一个节点了：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">14</span>] ls /otter/canal/cluster</span><br><span class="line">[<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11113</span>]</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">5</span>] get /otter/canal/destinations/example/running</span><br><span class="line">&#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"192.168.6.52:11113"</span>,<span class="string">"cid"</span>:<span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure>
<p>切换过程中，Client的日志</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">2017-10-12 15:17:22.524 [Thread-2] WARN  c.alibaba.otter.canal.client.impl.ClusterCanalConnector - failed to connect to:/192.168.6.52:11113 after retry 0 times</span><br><span class="line">2017-10-12 15:17:22.529 [Thread-2] WARN  c.a.otter.canal.client.impl.running.ClientRunningMonitor - canal is not run any in node</span><br><span class="line">2017-10-12 15:17:27.695 [Thread-2] INFO  c.alibaba.otter.canal.client.impl.ClusterCanalConnector - restart the connector for next round retry.</span><br><span class="line"></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> Batch Id: [1] ,count : [1] , memsize : [75] , Time : 2017-10-12 15:17:27</span><br><span class="line"><span class="keyword">*</span> Start : [mysql-bin.000004:1331:1507791918000(2017-10-12 15:05:18)] </span><br><span class="line"><span class="keyword">*</span> End : [mysql-bin.000004:1331:1507791918000(2017-10-12 15:05:18)] </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">----------------</span><br><span class="line"> END ----&gt; transaction id: 0</span><br><span class="line">================&gt; binlog[mysql-bin.000004:1331] , executeTime : 1507791918000 , delay : 729763ms</span><br></pre></td></tr></table></figure>
<p>再次执行SQL语句</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> Batch Id: [2] ,count : [3] , memsize : [198] , Time : 2017-10-12 15:20:56</span><br><span class="line"><span class="keyword">*</span> Start : [mysql-bin.000004:1406:1507792855000(2017-10-12 15:20:55)] </span><br><span class="line"><span class="keyword">*</span> End : [mysql-bin.000004:1581:1507792855000(2017-10-12 15:20:55)] </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">================&gt; binlog[mysql-bin.000004:1406] , executeTime : 1507792855000 , delay : 1539ms</span><br><span class="line"> BEGIN ----&gt; Thread id: 763</span><br><span class="line">----------------&gt; binlog[mysql-bin.000004:1532] , name[canal_test,test] , eventType : UPDATE , executeTime : 1507792855000 , delay : 1539ms</span><br><span class="line">uid : 1    type=int(4)</span><br><span class="line">name : zqhx    type=varchar(10)    update=true</span><br><span class="line">----------------</span><br><span class="line"> END ----&gt; transaction id: 0</span><br><span class="line">================&gt; binlog[mysql-bin.000004:1581] , executeTime : 1507792855000 , delay : 1540ms</span><br></pre></td></tr></table></figure>
<p>停止客户端后，查询ZK中的客户端信息。注意，仍然有cursor信息，但是没有running，因为instance没有对应的client了。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">1</span>] ls /otter/canal/destinations/example</span><br><span class="line">[running, cluster, <span class="number">1001</span>]</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">0</span>] ls /otter/canal/destinations/example/<span class="number">1001</span></span><br><span class="line">[cursor]</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">6</span>] get /otter/canal/destinations/example/<span class="number">1001</span>/cursor</span><br><span class="line">&#123;<span class="string">"@type"</span>:<span class="string">"com.alibaba.otter.canal.protocol.position.LogPosition"</span>,</span><br><span class="line"><span class="string">"identity"</span>:&#123;<span class="string">"slaveId"</span>:-<span class="number">1</span>,<span class="string">"sourceAddress"</span>:&#123;<span class="string">"address"</span>:<span class="string">"localhost"</span>,<span class="string">"port"</span>:<span class="number">3306</span>&#125;&#125;,</span><br><span class="line"><span class="string">"postion"</span>:&#123;<span class="string">"included"</span>:<span class="literal">false</span>,<span class="string">"journalName"</span>:<span class="string">"mysql-bin.000004"</span>,<span class="string">"position"</span>:<span class="number">1581</span>,<span class="string">"serverId"</span>:<span class="number">1</span>,<span class="string">"timestamp"</span>:<span class="number">1507792855000</span>&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>cursor信息是instance消费binlog的位置，即使客户端停掉了，也仍然保留在zk中。</p>
<blockquote>
<p>注意：1001是ClientIdentity的固定编号，相关源码在SimpleCanalConnector的构造方法里。</p>
</blockquote>
<p>下面总结下zk中的相关记录：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/otter/canal/</span><br><span class="line">  |- cluster          ==&gt; [<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11112</span>, <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11113</span>]</span><br><span class="line">  |- destinations     ==&gt; instances</span><br><span class="line">     |- example1/     ==&gt; instance name</span><br><span class="line">     |  |- cluster    ==&gt; [<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11112</span>, <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11113</span>]</span><br><span class="line">     |  |- running    ==&gt; &#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"192.168.6.52:11112"</span>,<span class="string">"cid"</span>:<span class="number">2</span>&#125;</span><br><span class="line">     |  |- <span class="number">1001</span></span><br><span class="line">     |     |-running  ==&gt; &#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"10.57.241.44:53942"</span>,<span class="string">"clientId"</span>:<span class="number">1001</span>&#125;</span><br><span class="line">     |     |- cursor  ==&gt; &#123;localhost:<span class="number">3306</span>,<span class="string">"journalName"</span>:<span class="string">"mysql-bin.000004"</span>,<span class="string">"position"</span>:<span class="number">1331</span>,<span class="string">"serverId"</span>:<span class="number">1</span>&#125;</span><br><span class="line">     |- example2/</span><br><span class="line">     |  |- cluster    ==&gt; [<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11112</span>, <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">11113</span>]</span><br><span class="line">     |  |- running    ==&gt; &#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"192.168.6.52:11112"</span>,<span class="string">"cid"</span>:<span class="number">2</span>&#125;</span><br><span class="line">     |  |- <span class="number">1001</span></span><br><span class="line">     |     |-running  ==&gt; &#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"10.57.241.44:53942"</span>,<span class="string">"clientId"</span>:<span class="number">1001</span>&#125;</span><br><span class="line">     |     |- cursor  ==&gt; &#123;localhost:<span class="number">3306</span>,<span class="string">"journalName"</span>:<span class="string">"mysql-bin.000004"</span>,<span class="string">"position"</span>:<span class="number">1331</span>,<span class="string">"serverId"</span>:<span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure>
<p>下图是Canal Server HA的流程图：</p>
<ol>
<li>canal server要启动某个canal instance时都先向zookeeper进行一次尝试启动判断 (实现：创建EPHEMERAL节点，谁创建成功就允许谁启动)</li>
<li>创建zookeeper节点成功后，对应的canal server就启动对应的canal instance，没有创建成功的canal instance就会处于standby状态</li>
<li>一旦zookeeper发现canal server A创建的节点消失后，立即通知其他的canal server再次进行步骤1的操作，重新选出一个canal server启动instance.</li>
<li>canal client每次进行connect时，会首先向zookeeper询问当前是谁启动了canal instance，然后和其建立链接，一旦链接不可用，会重新尝试connect.</li>
</ol>
<p><img src="https://camo.githubusercontent.com/c8f1d98268a307821273e94e7eefcd29a26f9b78/687474703a2f2f646c2e69746579652e636f6d2f75706c6f61642f6174746163686d656e742f303038302f333330332f64333230326332362d653935342d333563302d613331392d3537363034313032633537642e6a7067" alt="server ha"></p>
<h2 id="Canal_Client_HA">Canal Client HA</h2><p>Canal Client的方式和canal server方式类似，也是利用zookeeper的抢占EPHEMERAL节点的方式进行控制。</p>
<p>关于Canal Client HA的验证，可以参考：<a href="http://blog.csdn.net/xiaolinzi007/article/details/52933909" target="_blank" rel="external">http://blog.csdn.net/xiaolinzi007/article/details/52933909</a></p>
<ul>
<li>在IDEA中同时启动多个客户端，执行一条SQL语句，其中一个客户端会打印日志，另一个不会打印。</li>
<li>停止该客户端。</li>
<li>再次执行SQL语句，另外一个客户端会打印日志</li>
</ul>
<p>Client1的日志：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> Batch Id: [3] ,count : [3] , memsize : [198] , Time : 2017-10-12 17:59:59</span><br><span class="line"><span class="keyword">*</span> Start : [mysql-bin.000004:1656:1507802398000(2017-10-12 17:59:58)] </span><br><span class="line"><span class="keyword">*</span> End : [mysql-bin.000004:1831:1507802398000(2017-10-12 17:59:58)] </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">================&gt; binlog[mysql-bin.000004:1656] , executeTime : 1507802398000 , delay : 1188ms</span><br><span class="line"> BEGIN ----&gt; Thread id: 768</span><br><span class="line">----------------&gt; binlog[mysql-bin.000004:1782] , name[canal_test,test] , eventType : UPDATE , executeTime : 1507802398000 , delay : 1199ms</span><br><span class="line">uid : 1    type=int(4)</span><br><span class="line">name : zqh    type=varchar(10)    update=true</span><br><span class="line">----------------</span><br><span class="line"> END ----&gt; transaction id: 0</span><br><span class="line">================&gt; binlog[mysql-bin.000004:1831] , executeTime : 1507802398000 , delay : 1236ms</span><br><span class="line"><span class="comment">## stop the canal client## canal client is down.</span></span><br></pre></td></tr></table></figure>
<p>停止Client1后，Client2的日志：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> Batch Id: [4] ,count : [3] , memsize : [198] , Time : 2017-10-12 18:02:15</span><br><span class="line"><span class="keyword">*</span> Start : [mysql-bin.000004:1906:1507802534000(2017-10-12 18:02:14)] </span><br><span class="line"><span class="keyword">*</span> End : [mysql-bin.000004:2081:1507802534000(2017-10-12 18:02:14)] </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"></span><br><span class="line">================&gt; binlog[mysql-bin.000004:1906] , executeTime : 1507802534000 , delay : 1807ms</span><br><span class="line"> BEGIN ----&gt; Thread id: 768</span><br><span class="line">----------------&gt; binlog[mysql-bin.000004:2032] , name[canal_test,test] , eventType : UPDATE , executeTime : 1507802534000 , delay : 1819ms</span><br><span class="line">uid : 1    type=int(4)</span><br><span class="line">name : zqhx    type=varchar(10)    update=true</span><br><span class="line">----------------</span><br><span class="line"> END ----&gt; transaction id: 0</span><br><span class="line">================&gt; binlog[mysql-bin.000004:2081] , executeTime : 1507802534000 , delay : 1855ms</span><br></pre></td></tr></table></figure>
<p>观察ZK节点中instance对应的client节点，在Client切换时，会进行变更。<br>比如下面的客户端从56806端口切换到了56842端口。<br>把所有客户端都关闭后，1001下没有running。表示instance没有客户端消费binlog了。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">29</span>] get /otter/canal/destinations/example/<span class="number">1001</span>/running</span><br><span class="line">&#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"10.57.241.44:56806"</span>,<span class="string">"clientId"</span>:<span class="number">1001</span>&#125;</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">30</span>] get /otter/canal/destinations/example/<span class="number">1001</span>/running</span><br><span class="line">Node does not exist: /otter/canal/destinations/example/<span class="number">1001</span>/running</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">31</span>] get /otter/canal/destinations/example/<span class="number">1001</span>/running</span><br><span class="line">&#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"10.57.241.44:56842"</span>,<span class="string">"clientId"</span>:<span class="number">1001</span>&#125;</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">2181</span>(CONNECTED) <span class="number">32</span>] ls /otter/canal/destinations/example/<span class="number">1001</span></span><br><span class="line">[cursor]</span><br></pre></td></tr></table></figure>
<p>具体实现相关类有：ClientRunningMonitor/ClientRunningListener/ClientRunningData。</p>
<p>client running相关控制，主要为解决client自身的failover机制。<br>canal client允许同时启动多个canal client，通过running机制，可保证只有一个client在工作，其他client做为冷备.<br>当运行中的client挂了，running会控制让冷备中的client转为工作模式，<br>这样就可以确保canal client也不会是单点. 保证整个系统的高可用性.</p>
<p>下图左边是客户端的HA实现，右边是服务端的HA实现</p>
<p><img src="http://img.blog.csdn.net/20171012184033228" alt="ha"></p>
<h2 id="Develop_Canal_Client">Develop Canal Client</h2><p>先理解：<a href="https://github.com/alibaba/canal/wiki/ClientAPI">https://github.com/alibaba/canal/wiki/ClientAPI</a></p>
<p><img src="https://camo.githubusercontent.com/8cc684cf92e22d738d57b002c356afba96bcc4f5/687474703a2f2f646c322e69746579652e636f6d2f75706c6f61642f6174746163686d656e742f303039302f363435332f39326233343335302d323566632d333162332d626361362d3865326131653763356532322e6a7067" alt="client"></p>
<h3 id="subscribe_change">subscribe change</h3><p>重新看下CanalServerWithEmbedded的订阅方法。我们知道客户端在连接服务端的某个destination之后，会紧接着调用subscribe()方法。</p>
<p>客户端连接服务端时，必须指定destination名称，因为一个服务端可能有多个destination。比如服务端启动了两个Instance，它们的destination名称分别是example1和example2。<br>假设有两个客户端A和B，A连接example1，B连接example2。 服务端的canalInstances字典为：{example1=&gt;Instance1，example2-&gt;Instance2}。<br>那么ClientA的destination等于example1，对应的服务端实例为Instance1。ClientB的destination等于example2，对应的服务端实例为Instance3。</p>
<p><img src="http://img.blog.csdn.net/20171012230738279" alt="clients"></p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 客户端订阅，重复订阅时会更新对应的filter信息</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">subscribe</span>(<span class="params">ClientIdentity clientIdentity</span>) throws CanalServerException </span>&#123;</span><br><span class="line">    CanalInstance canalInstance = canalInstances.<span class="keyword">get</span>(clientIdentity.getDestination());</span><br><span class="line">    <span class="keyword">if</span> (!canalInstance.getMetaManager().isStart()) &#123;</span><br><span class="line">        canalInstance.getMetaManager().start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    canalInstance.getMetaManager().subscribe(clientIdentity); <span class="comment">// 执行一下meta订阅</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据Client从MetaManager中获取最近一次的Cursor</span></span><br><span class="line">    Position position = canalInstance.getMetaManager().getCursor(clientIdentity);</span><br><span class="line">    <span class="keyword">if</span> (position == <span class="keyword">null</span>) &#123; <span class="comment">// 如果没有</span></span><br><span class="line">        position = canalInstance.getEventStore().getFirstPosition();<span class="comment">// 获取一下store中的第一条</span></span><br><span class="line">        <span class="keyword">if</span> (position != <span class="keyword">null</span>) &#123;</span><br><span class="line">            canalInstance.getMetaManager().updateCursor(clientIdentity, position); <span class="comment">// 更新一下cursor</span></span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(<span class="string">"subscribe successfully, &#123;&#125; with first position:&#123;&#125; "</span>, clientIdentity, position);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// 有就直接使用</span></span><br><span class="line">        logger.info(<span class="string">"subscribe successfully, use last cursor position:&#123;&#125; "</span>, clientIdentity, position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通知下订阅关系变化</span></span><br><span class="line">    canalInstance.subscribeChange(clientIdentity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里面关于订阅方法有两个地方，CanalInstance本身调用了subscribeChange，它关联的MetaManager也调用了subscribe方法。</p>
<p>一个CanalServer可以有多个CanalInstance，每个Instance都会有一个MetaManager。而一个Instance对应一个Client。<br>那么，这么说来，一个MetaManager也就只会有一个Client了。但是从下面的数据结构来看的话，一个MetaManager貌似可以有多个Destination。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MemoryMetaManager</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">AbstractCanalLifeCycle</span> <span class="title">implements</span> <span class="title">CanalMetaManager</span> &#123;</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">Map</span>&lt;<span class="type">String</span>, <span class="type">List</span>&lt;<span class="type">ClientIdentity</span>&gt;&gt;              destinations;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">Map</span>&lt;<span class="type">ClientIdentity</span>, <span class="type">MemoryClientIdentityBatch</span>&gt; batches;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">Map</span>&lt;<span class="type">ClientIdentity</span>, <span class="type">Position</span>&gt;                  cursors;</span><br><span class="line"></span><br><span class="line">    public synchronized void subscribe(<span class="type">ClientIdentity</span> clientIdentity) <span class="keyword">throws</span> <span class="type">CanalMetaManagerException</span> &#123;</span><br><span class="line">        <span class="type">List</span>&lt;<span class="type">ClientIdentity</span>&gt; clientIdentitys = destinations.get(clientIdentity.getDestination());</span><br><span class="line">        <span class="keyword">if</span> (clientIdentitys.contains(clientIdentity)) &#123;</span><br><span class="line">            clientIdentitys.remove(clientIdentity);</span><br><span class="line">        &#125;</span><br><span class="line">        clientIdentitys.add(clientIdentity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>猜测：多个Client可以连接到同一个Instance（虽然只会有一个Instance起作用），所以一个MetaManager可以管理多个Client。<br>NO！Client的HA与MetaManager记录的Client是不一样的。HA表示同一时间只有一个Client起作用，那么MetaManager不可能同时记录两个Client。</p>
</blockquote>
<p>官方ClientAPI文档上：ClientIdentity是canal client和server交互之间的身份标识，目前clientId写死为1001.<br>(目前canal server上的一个instance只能有一个client消费，clientId的设计是为1个instance多client消费模式而预留的，暂时不需要理会)</p>
<p>也就是说：一个Instance还是有可能有多个Client连接上来的。</p>
<p><img src="http://img.blog.csdn.net/20171012234337736" alt="subscribes"></p>
<p>这里的数据结构为什么这么设计，还需要参考AbstractMetaManagerTest的doSubscribeTest方法来理解。</p>
<p>对于相同的destination，可以订阅不同的client。下面的示例分别订阅了[client1,client2]和[client1,client3]。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSubscribeTest</span><span class="params">(CanalMetaManager metaManager)</span> </span>&#123;</span><br><span class="line">    ClientIdentity client1 = <span class="keyword">new</span> ClientIdentity(destination, (<span class="keyword">short</span>) <span class="number">1</span>);</span><br><span class="line">    metaManager.subscribe(client1);</span><br><span class="line">    metaManager.subscribe(client1); <span class="comment">// 重复调用：删除旧的client1，并继续增加新的client1</span></span><br><span class="line">    ClientIdentity client2 = <span class="keyword">new</span> ClientIdentity(destination, (<span class="keyword">short</span>) <span class="number">2</span>);</span><br><span class="line">    metaManager.subscribe(client2);</span><br><span class="line"></span><br><span class="line">    List&lt;ClientIdentity&gt; clients = metaManager.listAllSubscribeInfo(destination);</span><br><span class="line">    Assert.assertEquals(Arrays.asList(client1, client2), clients);</span><br><span class="line"></span><br><span class="line">    metaManager.unsubscribe(client2);</span><br><span class="line">    ClientIdentity client3 = <span class="keyword">new</span> ClientIdentity(destination, (<span class="keyword">short</span>) <span class="number">3</span>);</span><br><span class="line">    metaManager.subscribe(client3);</span><br><span class="line"></span><br><span class="line">    clients = metaManager.listAllSubscribeInfo(destination);</span><br><span class="line">    Assert.assertEquals(Arrays.asList(client1, client3), clients);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>CanalServerWithEmbedded的订阅方法最后还会调用AbstractCanalInstance的subscribeChange方法。<br>这里会设置表名的filter，以及黑名单。配置项在instance.properties中。</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># table regex</span></span><br><span class="line">canal.instance.<span class="built_in">filter</span>.regex = .*\\..*</span><br><span class="line"><span class="comment"># table black regex</span></span><br><span class="line">canal.instance.<span class="built_in">filter</span>.<span class="keyword">black</span>.regex =</span><br></pre></td></tr></table></figure>
<p>filter表示客户端要通过Canal Server获取MySQL哪些表的binlog，上面配置项表示获取所有表。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">AbstractCanalInstance</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">AbstractCanalLifeCycle</span> <span class="title">implements</span> <span class="title">CanalInstance</span> &#123;</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">Long</span>                                   canalId;                                                      <span class="comment">// 和manager交互唯一标示</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">String</span>                                 destination;                                                  <span class="comment">// 队列名字</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalEventStore</span>&lt;<span class="type">Event</span>&gt;                 eventStore;                                                   <span class="comment">// 有序队列</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalEventParser</span>                       eventParser;                                                  <span class="comment">// 解析对应的数据信息</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalEventSink</span>&lt;<span class="type">List</span>&lt;<span class="type">CanalEntry</span>.<span class="type">Entry</span>&gt;&gt; eventSink;                                                    <span class="comment">// 链接parse和store的桥接器</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalMetaManager</span>                       metaManager;                                                  <span class="comment">// 消费信息管理器</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalAlarmHandler</span>                      alarmHandler;                                                 <span class="comment">// alarm报警机制</span></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public boolean subscribeChange(<span class="type">ClientIdentity</span> identity) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="type">StringUtils</span>.isNotEmpty(identity.getFilter())) &#123;</span><br><span class="line">            logger.info(<span class="string">"subscribe filter change to "</span> + identity.getFilter());</span><br><span class="line">            <span class="type">AviaterRegexFilter</span> aviaterFilter = <span class="keyword">new</span> <span class="type">AviaterRegexFilter</span>(identity.getFilter());</span><br><span class="line"></span><br><span class="line">            boolean isGroup = (eventParser instanceof <span class="type">GroupEventParser</span>);</span><br><span class="line">            <span class="keyword">if</span> (isGroup) &#123;</span><br><span class="line">                <span class="comment">// 处理group的模式</span></span><br><span class="line">                <span class="type">List</span>&lt;<span class="type">CanalEventParser</span>&gt; eventParsers = ((<span class="type">GroupEventParser</span>) eventParser).getEventParsers();</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">CanalEventParser</span> singleEventParser : eventParsers) &#123;<span class="comment">// 需要遍历启动</span></span><br><span class="line">                    ((<span class="type">AbstractEventParser</span>) singleEventParser).setEventFilter(aviaterFilter);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ((<span class="type">AbstractEventParser</span>) eventParser).setEventFilter(aviaterFilter);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// filter的处理规则</span></span><br><span class="line">        <span class="comment">// a. parser处理数据过滤处理</span></span><br><span class="line">        <span class="comment">// b. sink处理数据的路由&amp;分发,一份parse数据经过sink后可以分发为多份，每份的数据可以根据自己的过滤规则不同而有不同的数据</span></span><br><span class="line">        <span class="comment">// 后续内存版的一对多分发，可以考虑</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对应在EventParser中，存在两个Filter的引用。比如上面eventParser.setEventFilter()方法会设置AbstractEventParser的eventFilter。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractEventParser&lt;EVENT&gt;</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">AbstractCanalLifeCycle</span> <span class="title">implements</span> <span class="title">CanalEventParser&lt;EVENT&gt;</span> &#123;</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalLogPositionManager</span>                logPositionManager         = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalEventSink</span>&lt;<span class="type">List</span>&lt;<span class="type">CanalEntry</span>.<span class="type">Entry</span>&gt;&gt; eventSink                  = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalEventFilter</span>                       eventFilter                = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">CanalEventFilter</span>                       eventBlackFilter           = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="EventParser_Implement">EventParser Implement</h3><p>AbstractEventParser的start()方法是解析binlog的主要方法。在启动transactionBuffer和BinLogParser后，会启动一个后台的工作线程parseThread一直运行：</p>
<p>注意：下面的几个步骤是嵌套在一个while死循环里，最后会进行sleep。</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开始执行replication</span></span><br><span class="line"><span class="comment">// 1. 构造Erosa连接</span></span><br><span class="line">erosaConnection = buildErosaConnection();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 启动一个心跳线程</span></span><br><span class="line">startHeartBeat(erosaConnection);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 执行dump前的准备工作</span></span><br><span class="line">preDump(erosaConnection);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 连接MySQL数据库</span></span><br><span class="line">erosaConnection.connect(); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. 获取最后的位置信息</span></span><br><span class="line">EntryPosition startPosition = findStartPosition(erosaConnection);</span><br><span class="line">logger.info(<span class="string">"find start position : &#123;&#125;"</span>, startPosition.toString());</span><br><span class="line"><span class="comment">// 重新链接，因为在找position过程中可能有状态，需要断开后重建</span></span><br><span class="line">erosaConnection.reconnect();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义回调函数，当解析成功后，sink()方法会暂存到缓冲区transactionBuffer中。缓冲区的数据会通过心跳线程放入EventSink</span></span><br><span class="line">final SinkFunction sinkHandler = <span class="keyword">new</span> SinkFunction&lt;EVENT&gt;() &#123;</span><br><span class="line">    <span class="keyword">private</span> LogPosition lastPosition;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sink</span>(<span class="params">EVENT <span class="keyword">event</span></span>) </span>&#123;</span><br><span class="line">        CanalEntry.Entry entry = parseAndProfilingIfNecessary(<span class="keyword">event</span>);</span><br><span class="line">        <span class="keyword">if</span> (entry != <span class="keyword">null</span>) &#123;</span><br><span class="line">            transactionBuffer.add(entry);</span><br><span class="line">            <span class="keyword">this</span>.lastPosition = buildLastPosition(entry);  <span class="comment">// 记录一下对应的positions</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 6. 开始dump数据</span></span><br><span class="line"><span class="keyword">if</span> (StringUtils.isEmpty(startPosition.getJournalName()) &amp;&amp; startPosition.getTimestamp() != <span class="keyword">null</span>) &#123;</span><br><span class="line">    erosaConnection.dump(startPosition.getTimestamp(), sinkHandler);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    erosaConnection.dump(startPosition.getJournalName(), startPosition.getPosition(), sinkHandler);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的erosaConnection指的是Canal Server到MySQL的连接。<br>而前面我们说的客户端（CanalClient）连接CanalConnector指的是CanalClient到CanalServer的连接。</p>
<p>CanalServer到MySQL的连接是要获取binlog的dump数据包。而CanalClient到CanalServer有多种请求（GET/ACK等）。</p>
<p>我们不会具体分析dump的流程，不过看下erosaConnection的MySQL实现MysqlConnection是如何在获取到事件后调用回调函数。</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dump</span>(<span class="params">String binlogfilename, Long binlogPosition, SinkFunction func</span>) throws IOException </span>&#123;</span><br><span class="line">    updateSettings();</span><br><span class="line">    sendBinlogDump(binlogfilename, binlogPosition);</span><br><span class="line">    <span class="comment">// connector指的是CanalServer到MySQL Master服务器的连接，创建一个拉取线程拉取MySQL的binlog</span></span><br><span class="line">    DirectLogFetcher fetcher = <span class="keyword">new</span> DirectLogFetcher(connector.getReceiveBufferSize());</span><br><span class="line">    fetcher.start(connector.getChannel());</span><br><span class="line">    LogDecoder decoder = <span class="keyword">new</span> LogDecoder(LogEvent.UNKNOWN_EVENT, LogEvent.ENUM_END_EVENT);</span><br><span class="line">    LogContext context = <span class="keyword">new</span> LogContext();</span><br><span class="line">    <span class="keyword">while</span> (fetcher.fetch()) &#123; <span class="comment">// 由于设置了缓冲区的大小，每次dump都只会拉取一批数据</span></span><br><span class="line">        LogEvent <span class="keyword">event</span> = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">event</span> = decoder.decode(fetcher, context);</span><br><span class="line">        <span class="keyword">if</span> (!func.sink(<span class="keyword">event</span>)) <span class="keyword">break</span>; <span class="comment">// 调用回调方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>服务端有一个心跳线程，它的目的是消费transactionBuffer，并写入到EventSink中。</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">protected boolean consumeTheEventAndProfilingIfNecessary(<span class="type">List</span>&lt;<span class="type">CanalEntry</span>.<span class="type">Entry</span>&gt; entrys) &#123;</span><br><span class="line">    boolean <span class="literal">result</span> = eventSink.sink(entrys, </span><br><span class="line">        (runningInfo == null) ? null : runningInfo.getAddress(), destination);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>EventSink最终会将数据写入到EventStore中，即Put到RingBuffer中。</p>
<h2 id="eunomia">eunomia</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">2181</span>(CONNECTED) <span class="number">3</span>] ls /otter/canal/destinations</span><br><span class="line">[octopus_demeter, example_bak, namelist_test, xiaopang2, namelist2, xiaopang3, namelist1, example, xiaopang]</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">2181</span>(CONNECTED) <span class="number">4</span>] ls /otter/canal/destinations/xiaopang</span><br><span class="line">[eunomia, cluster, <span class="number">1001</span>, running]</span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">2181</span>(CONNECTED) <span class="number">5</span>] ls /otter/canal/destinations/xiaopang/eunomia</span><br><span class="line">[_c_2a900d4e-<span class="number">75f</span>b-<span class="number">4445</span>-b30c-<span class="number">04e1</span>bdb2e5d9-lock-<span class="number">0001381746</span>, runnning, _c_ea33db37-<span class="number">9193</span>-<span class="number">4</span>c75-<span class="number">9e61</span>-<span class="number">85e59</span>e123109-lock-<span class="number">0001381738</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Eunomia Server？还是Canal Client？</span></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">2181</span>(CONNECTED) <span class="number">7</span>] get /otter/canal/destinations/xiaopang/eunomia/runnning</span><br><span class="line"><span class="number">10.57</span><span class="number">.17</span><span class="number">.100</span></span><br><span class="line"></span><br><span class="line">[zk: <span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">2181</span>(CONNECTED) <span class="number">18</span>] get /otter/canal/destinations/xiaopang/<span class="number">1001</span>/running</span><br><span class="line">&#123;<span class="string">"active"</span>:<span class="literal">true</span>,<span class="string">"address"</span>:<span class="string">"10.57.17.100:60661"</span>,<span class="string">"clientId"</span>:<span class="number">1001</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/canal&quot;&gt;canal&lt;/a&gt;: 阿里巴巴mysql数据库binlog的增量订阅&amp;amp;消费组件&lt;br&gt;
    
    </summary>
    
      <category term="midd" scheme="http://github.com/zqhxuyuan/categories/midd/"/>
    
    
      <category term="midd" scheme="http://github.com/zqhxuyuan/tags/midd/"/>
    
  </entry>
  
  <entry>
    <title>Spark DataSources Implementation</title>
    <link href="http://github.com/zqhxuyuan/2017/09/15/2017-09-15-Spark-DataSources/"/>
    <id>http://github.com/zqhxuyuan/2017/09/15/2017-09-15-Spark-DataSources/</id>
    <published>2017-09-14T16:00:00.000Z</published>
    <updated>2017-10-19T04:34:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spark数据源扩展与实践(40行代码实现一个自定义的DataSource)<br><a id="more"></a></p>
<h2 id="简单示例">简单示例</h2><p>Spark的DataSource API可以方便地扩展。如果没有使用META-INFO这种ServiceLocator机制，则自定义的数据源名称必须是DefaultSource.<br>并且必须实现RelationProvider接口。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DefaultSource</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">RelationProvider</span> &#123;</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createRelation</span>(</span>sqlContext: <span class="type">SQLContext</span>,</span><br><span class="line">                              parameters: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>]): <span class="type">BaseRelation</span> = &#123;</span><br><span class="line">    ???</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通常自定义数据源都有不同的配置文件，所以我们也要实现自己的BaseRelation</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DefaultSource</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">RelationProvider</span>&#123;</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createRelation</span>(</span>sqlContext: <span class="type">SQLContext</span>, parameters: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>]): <span class="type">BaseRelation</span> = &#123;</span><br><span class="line">    <span class="type">EmptyRelation</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">EmptyRelation</span>(</span>) <span class="keyword">extends</span> <span class="type">BaseRelation</span> &#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">sqlContext</span>:</span> <span class="type">SQLContext</span> = ???</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">schema</span>:</span> <span class="type">StructType</span> = ???</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>主要的起始还是BaseRelation的实现类，但是这里怎么获取schema和SQLContext呢。由于DefaultSource的createRelation方法中已经有SQLContext。所以我们可以改成</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DefaultSource</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">RelationProvider</span>&#123;</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createRelation</span>(</span>sqlContext: <span class="type">SQLContext</span>, parameters: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>]): <span class="type">BaseRelation</span> = &#123;</span><br><span class="line">    <span class="type">EmptyRelation</span>()(sqlContext)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">EmptyRelation</span>(</span>)(<span class="annotation">@transient</span> <span class="keyword">val</span> sc: <span class="type">SQLContext</span>) <span class="keyword">extends</span> <span class="type">BaseRelation</span> &#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">sqlContext</span>:</span> <span class="type">SQLContext</span> = sc</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">schema</span>:</span> <span class="type">StructType</span> = ???</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么Schema怎么确定呢？通常它需要从DefaultSource的createRelation方法的parameters确定。<br>所以通常我们会给自定义的BaseRelation加上一个参数：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DefaultSource</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">RelationProvider</span>&#123;</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">createRelation</span>(</span>sqlContext: <span class="type">SQLContext</span>, parameters: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>]): <span class="type">BaseRelation</span> = &#123;</span><br><span class="line">    <span class="type">EmptyRelation</span>(parameters)(sqlContext)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">EmptyRelation</span>(</span>parameters: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>])(<span class="annotation">@transient</span> <span class="keyword">val</span> sc: <span class="type">SQLContext</span>) <span class="keyword">extends</span> <span class="type">BaseRelation</span> &#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">sqlContext</span>:</span> <span class="type">SQLContext</span> = sc</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">schema</span>:</span> <span class="type">StructType</span> = ???</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个schema的具体实现必须依赖于如何读取数据源。所以EmptyRelation还需要实现另外一个接口：TableScan</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">EmptyRelation</span>(</span>parameters: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>])</span><br><span class="line">                        (<span class="annotation">@transient</span> <span class="keyword">val</span> sc: <span class="type">SQLContext</span>) </span><br><span class="line">  <span class="keyword">extends</span> <span class="type">BaseRelation</span> <span class="keyword">with</span> <span class="type">TableScan</span>&#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">sqlContext</span>:</span> <span class="type">SQLContext</span> = sc</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">schema</span>:</span> <span class="type">StructType</span> = ???</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">buildScan</span>(</span>): <span class="type">RDD</span>[<span class="type">Row</span>] = ???</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在有两个方法需要我们自己实现。buildScan表示如何读取数据源，并生成<code>RDD[ROW]</code>。<br>下面以一个简单的示例入门：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">EmptyRelation</span>(</span>parameters: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>])</span><br><span class="line">                        (<span class="annotation">@transient</span> <span class="keyword">val</span> sc: <span class="type">SQLContext</span>) </span><br><span class="line">  <span class="keyword">extends</span> <span class="type">BaseRelation</span> <span class="keyword">with</span> <span class="type">TableScan</span>&#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">sqlContext</span>:</span> <span class="type">SQLContext</span> = sc</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">schema</span>:</span> <span class="type">StructType</span> = &#123;</span><br><span class="line">    <span class="type">StructType</span>(<span class="type">List</span>(</span><br><span class="line">      <span class="type">StructField</span>(<span class="string">"id"</span>, <span class="type">IntegerType</span>), </span><br><span class="line">      <span class="type">StructField</span>(<span class="string">"name"</span>, <span class="type">StringType</span>),</span><br><span class="line">      <span class="type">StructField</span>(<span class="string">"age"</span>, <span class="type">IntegerType</span>)</span><br><span class="line">    ))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">buildScan</span>(</span>): <span class="type">RDD</span>[<span class="type">Row</span>] = &#123;</span><br><span class="line">    <span class="keyword">val</span> rdd = sqlContext.sparkContext.parallelize(</span><br><span class="line">      <span class="type">List</span>(</span><br><span class="line">        (<span class="number">1</span>, <span class="string">"A"</span>, <span class="number">20</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">"B"</span>, <span class="number">25</span>)</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">    rdd.map(row =&gt; <span class="type">Row</span>.fromSeq(<span class="type">Seq</span>(row._1, row._2, row._3)))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接下来就可以运行测试例子了：</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">object</span> TestExample &#123;</span><br><span class="line"></span><br><span class="line">  def <span class="function">main</span>(args<span class="value">: Array[String]) &#123;</span><br><span class="line">    val spark = SparkSession.<span class="function">builder</span>().<span class="function">master</span>(<span class="string">"local"</span>).<span class="function">getOrCreate</span>()</span><br><span class="line">    val df = spark.read.<span class="function">format</span>(<span class="string">"com.zqh.spark.connectors.test.empty"</span>).<span class="function">load</span>()</span><br><span class="line">    df.<span class="function">printSchema</span>()</span><br><span class="line">    df.<span class="function">show</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>什么，只有40行代码，就实现了自定义的DataSource!!!</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root</span><br><span class="line"><span class="code"> |-- id: integer (nullable = true)</span></span><br><span class="line"><span class="code"> |-- name: string (nullable = true)</span></span><br><span class="line"><span class="code"> |-- age: integer (nullable = true)</span></span><br><span class="line"></span><br><span class="line"><span class="code">+---+</span>----<span class="code">+---+</span></span><br><span class="line"><span class="header">| id|name|age|</span><br><span class="line">+---+----+---+</span></span><br><span class="line"><span class="header">|  1|   A| 20|</span><br><span class="line">+---+----+---+</span></span><br></pre></td></tr></table></figure>
<p>上面示例EmptyRelation中，schema方法和buildScan方法有如下特点：</p>
<ul>
<li>schema定义了三个字段，则buildScan中每一行Row都必须有三个元素</li>
<li>RDD的每一行Row是数据，而schema对应了数据的元数据，schema可以任意指定</li>
</ul>
<p>总结下自定义数据源相关的类：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">RelationProvider                  BaseRelation    TableScan</span><br><span class="line">       /|<span class="string">\                            /</span>|<span class="string">\            /</span>|<span class="string">\                   spark</span><br><span class="line">        </span>|<span class="string">                              </span>|<span class="string">              </span>|<span class="string">        ------------------</span><br><span class="line">        </span>|<span class="string">                              </span>|<span class="string">              </span>|<span class="string">                    user</span><br><span class="line">        </span>|<span class="string">                           schema()     buildScan()    </span><br><span class="line">DefaultSource                          </span>|<span class="string">              </span>|</span><br><span class="line">        |<span class="string">                              </span>|<span class="string">              </span>|</span><br><span class="line">        |<span class="string">                              </span>|<span class="string">              </span>|</span><br><span class="line">        ·                              |<span class="string">              </span>|</span><br><span class="line">createRelation()  --------------------&gt; EmptyRelation</span><br></pre></td></tr></table></figure>
<h2 id="JDBC_DataSource">JDBC DataSource</h2><p>开启mysql的查询日志，对应的日志文件是<code>/usr/local/var/mysql/zqhmac.log</code>：</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set GLOBAL general<span class="emphasis">_log = on;</span><br><span class="line">Query OK, 0 rows affected (0.08 sec)</span><br><span class="line"></span><br><span class="line"></span><span class="header">mysql&gt; show VARIABLES like '%general_log%';</span><br><span class="line">+------------------+---------------------------------+</span></span><br><span class="line"><span class="header">| Variable_name    | Value                           |</span><br><span class="line">+------------------+---------------------------------+</span></span><br><span class="line">| general<span class="emphasis">_log      | ON                              |</span><br><span class="line">| general_</span>log<span class="emphasis">_file | /usr/local/var/mysql/zqhmac.log |</span><br><span class="line">+------------------+---------------------------------+</span></span><br></pre></td></tr></table></figure>
<p>spark读取jdbc有多种方式：</p>
<ol>
<li>全量读取，只有一个分区</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> url</span> = <span class="string">"jdbc:mysql://localhost/test"</span></span><br><span class="line"><span class="variable"><span class="keyword">val</span> table</span> = <span class="string">"test"</span></span><br><span class="line"><span class="variable"><span class="keyword">val</span> properties</span> = new java.util.Properties</span><br><span class="line">properties.put(<span class="string">"user"</span>, <span class="string">"root"</span>)</span><br><span class="line">properties.put(<span class="string">"password"</span>, <span class="string">"root"</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable"><span class="keyword">val</span> df</span> = spark.read.jdbc(url, table, properties)</span><br><span class="line"></span><br><span class="line">df.rdd.partitions.size # <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>后台日志：</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2008</span> Query SELECT <span class="escape">`i</span>d<span class="escape">`,</span><span class="escape">`n</span>ame<span class="escape">`,</span><span class="escape">`t</span>otal<span class="escape">` </span>FROM test</span><br></pre></td></tr></table></figure>
<ol>
<li>指定上下界，自动分片</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> columnName</span> = <span class="string">"id"</span></span><br><span class="line"><span class="variable"><span class="keyword">val</span> lowerBound</span> = <span class="number">1</span></span><br><span class="line"><span class="variable"><span class="keyword">val</span> upperBound</span> = <span class="number">1000</span></span><br><span class="line"><span class="variable"><span class="keyword">val</span> numPartitions</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="variable"><span class="keyword">val</span> df</span> = spark.read.jdbc(url,table,columnName,lowerBound,upperBound,numPartitions,properties)</span><br><span class="line"></span><br><span class="line">df.rdd.partitions.size # 指定的分区数量</span><br></pre></td></tr></table></figure>
<p>指定上下界有个限制条件是分区字段必须是整数类型：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jdbc</span></span>(</span><br><span class="line">    <span class="symbol">url:</span> <span class="constant">String,</span></span><br><span class="line">    <span class="symbol">table:</span> <span class="constant">String,</span></span><br><span class="line">    <span class="symbol">columnName:</span> <span class="constant">String,</span></span><br><span class="line">    <span class="symbol">lowerBound:</span> <span class="constant">Long,</span></span><br><span class="line">    <span class="symbol">upperBound:</span> <span class="constant">Long,</span></span><br><span class="line">    <span class="symbol">numPartitions:</span> <span class="constant">Int,</span></span><br><span class="line">    <span class="symbol">connectionProperties:</span> <span class="constant">Properties)</span><span class="symbol">:</span> <span class="constant">DataFrame </span>= &#123;</span><br><span class="line">  <span class="regexp">//</span> columnName, lowerBound, upperBound <span class="keyword">and</span> numPartitions override settings <span class="keyword">in</span> extraOptions.</span><br><span class="line">  this.extraOptions ++= <span class="constant">Map(</span></span><br><span class="line">    <span class="constant">JDBCOptions.JDBC_PARTITION_COLUMN </span>-&gt; columnName,</span><br><span class="line">    <span class="constant">JDBCOptions.JDBC_LOWER_BOUND </span>-&gt; lowerBound.toString,</span><br><span class="line">    <span class="constant">JDBCOptions.JDBC_UPPER_BOUND </span>-&gt; upperBound.toString,</span><br><span class="line">    <span class="constant">JDBCOptions.JDBC_NUM_PARTITIONS </span>-&gt; numPartitions.toString)</span><br><span class="line">  jdbc(url, table, connectionProperties)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>spark的做法是根据上下界，分区个数，自动切分。这种场景主要针对数据库的主键是自增字段（当然是整数了）。</p>
<p>因为自增的数字分布很均匀，所以给定上下界和分区的数量，每个分区拉取的数据也是很均匀的。</p>
<p>后台日志：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2010 Query <span class="operator"><span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &lt; <span class="number">201</span> <span class="keyword">or</span> <span class="keyword">id</span> <span class="keyword">is</span> <span class="literal">null</span></span><br><span class="line"><span class="number">2011</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &gt;= <span class="number">201</span> <span class="keyword">AND</span> <span class="keyword">id</span> &lt; <span class="number">401</span></span><br><span class="line"><span class="number">2012</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &gt;= <span class="number">401</span> <span class="keyword">AND</span> <span class="keyword">id</span> &lt; <span class="number">601</span></span><br><span class="line"><span class="number">2013</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &gt;= <span class="number">601</span> <span class="keyword">AND</span> <span class="keyword">id</span> &lt; <span class="number">801</span></span><br><span class="line"><span class="number">2014</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &gt;= <span class="number">801</span></span></span><br></pre></td></tr></table></figure>
<ol>
<li>手动构造predicates</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> predicates</span> = Array(</span><br><span class="line">  <span class="string">"id&gt;=0 and id&lt;10"</span>,</span><br><span class="line">  <span class="string">"id&gt;=10 and id&lt;100"</span>,</span><br><span class="line">  <span class="string">"id&gt;=100 and id&lt;1000"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="variable"><span class="keyword">val</span> df</span> = spark.read.jdbc(url, table, predicates, properties)</span><br><span class="line"></span><br><span class="line">df.rdd.partitions.size # <span class="number">3</span>，predicates数组有几个，对应几个分区</span><br></pre></td></tr></table></figure>
<p>后台日志：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2016 Query <span class="operator"><span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>&gt;=<span class="number">0</span> <span class="keyword">and</span> <span class="keyword">id</span>&lt;<span class="number">10</span></span><br><span class="line"><span class="number">2017</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>&gt;=<span class="number">10</span> <span class="keyword">and</span> <span class="keyword">id</span>&lt;<span class="number">100</span></span><br><span class="line"><span class="number">2018</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>&gt;=<span class="number">100</span> <span class="keyword">and</span> <span class="keyword">id</span>&lt;<span class="number">1000</span></span></span><br></pre></td></tr></table></figure>
<p>如果数据分布不均匀，可以采用这种方式，而且这种方式不限于主键、整数类型，可以是任意类型，任意字段。</p>
<p>比如我们的测试mysql表数据如下：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="keyword">*</span> from test;</span><br><span class="line">+-----+------+-------+</span><br><span class="line">|<span class="string"> id  </span>|<span class="string"> name </span>|<span class="string"> total </span>|</span><br><span class="line">+-----+------+-------+</span><br><span class="line">|<span class="string">   1 </span>|<span class="string"> A    </span>|<span class="string">     1 </span>|</span><br><span class="line">|<span class="string">   2 </span>|<span class="string"> B    </span>|<span class="string">     2 </span>|</span><br><span class="line">|<span class="string">   3 </span>|<span class="string"> C    </span>|<span class="string">     3 </span>|</span><br><span class="line">|<span class="string">  11 </span>|<span class="string"> A    </span>|<span class="string">    12 </span>|</span><br><span class="line">|<span class="string">  12 </span>|<span class="string"> B    </span>|<span class="string">    12 </span>|</span><br><span class="line">|<span class="string">  13 </span>|<span class="string"> C    </span>|<span class="string">    12 </span>|</span><br><span class="line">|<span class="string"> 100 </span>|<span class="string"> 1    </span>|<span class="string">     0 </span>|</span><br><span class="line">|<span class="string"> 101 </span>|<span class="string"> 2    </span>|<span class="string">     1 </span>|</span><br><span class="line">|<span class="string"> 102 </span>|<span class="string"> 2    </span>|<span class="string">     1 </span>|</span><br><span class="line">+-----+------+-------+</span><br></pre></td></tr></table></figure>
<p>现在要根据name列进行手动指定查询方式:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">val predicates = Array(</span><br><span class="line">  <span class="string">"name = 'A'"</span>,</span><br><span class="line">  <span class="string">"name = 'B'"</span>,</span><br><span class="line">  <span class="string">"name = 'C'"</span>,</span><br><span class="line">  <span class="string">"name in('1','2')"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">val df = spark<span class="class">.read</span><span class="class">.jdbc</span>(url, <span class="tag">table</span>, predicates, properties)</span><br><span class="line"></span><br><span class="line">df.show</span><br></pre></td></tr></table></figure>
<p>后台日志：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2020 Query <span class="operator"><span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">'A'</span></span><br><span class="line"><span class="number">2022</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">'C'</span></span><br><span class="line"><span class="number">2023</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">'B'</span></span><br><span class="line"><span class="number">2021</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`total`</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">in</span>(<span class="string">'1'</span>,<span class="string">'2'</span>)</span></span><br></pre></td></tr></table></figure>
<p>由于是自定义查询条件，所以我们可以使用任何方式，比如limit方法：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">val predicates = Array(</span><br><span class="line">  <span class="string">"1=1 order by name limit 3 offset 0"</span>,</span><br><span class="line">  <span class="string">"1=1 order by name limit 3 offset 3"</span>,</span><br><span class="line">  <span class="string">"1=1 order by name limit 3 offset 6"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">val df = spark<span class="class">.read</span><span class="class">.jdbc</span>(url, <span class="tag">table</span>, predicates, properties)</span><br><span class="line">df.count</span><br></pre></td></tr></table></figure>
<p>后台日志：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2025 Query <span class="operator"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">3</span></span><br><span class="line"><span class="number">2026</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">6</span></span><br><span class="line"><span class="number">2027</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">0</span></span></span><br></pre></td></tr></table></figure>
<p>动态指定排序字段和个数：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">val orderByColumn = <span class="string">"name"</span></span><br><span class="line">val <span class="built_in">limit</span>Count = <span class="number">3</span></span><br><span class="line">val predicates = Array(</span><br><span class="line">  s<span class="string">"1=1 order by <span class="variable">$orderByColumn</span> limit <span class="variable">$limitCount</span> offset 0"</span>,</span><br><span class="line">  s<span class="string">"1=1 order by <span class="variable">$orderByColumn</span> limit <span class="variable">$limitCount</span> offset <span class="variable">$&#123;limitCount&#125;</span>"</span>,</span><br><span class="line">  s<span class="string">"1=1 order by <span class="variable">$orderByColumn</span> limit <span class="variable">$limitCount</span> offset <span class="variable">$&#123;limitCount*2&#125;</span>"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">val df = spark.read.jdbc(url, table, predicates, properties)</span><br><span class="line">df.count</span><br></pre></td></tr></table></figure>
<p>后台日志：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2030 Query <span class="operator"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">3</span></span><br><span class="line"><span class="number">2029</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">0</span></span><br><span class="line"><span class="number">2031</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">6</span></span></span><br></pre></td></tr></table></figure>
<p>当然上面的predicates还是不够智能，正确的做法是先查询总数，然后根据limitCount构造predicates数组。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">val orderByColumn = "name"</span><br><span class="line">val limitCount = 3</span><br><span class="line">//val totalCount = spark.read.jdbc(url, table, properties).count  // 日志：<span class="operator"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span></span><br><span class="line">val countDF = spark.<span class="keyword">read</span>.jdbc(<span class="keyword">url</span>, s<span class="string">"(select count(*) from $table) tmp"</span>, properties) // <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">test</span>) tmp <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">0</span></span><br><span class="line">val totalCount = countDF.take(<span class="number">1</span>)(<span class="number">0</span>).getAs[<span class="keyword">Long</span>](<span class="number">0</span>) // <span class="keyword">SELECT</span> <span class="string">`count(*)`</span> <span class="keyword">FROM</span> (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">test</span>) tmp</span><br><span class="line"></span><br><span class="line">val <span class="keyword">split</span> = totalCount / limitCount</span><br><span class="line">val predicates = <span class="keyword">for</span>(<span class="keyword">i</span> &lt;- <span class="number">0</span><span class="keyword">l</span> <span class="keyword">to</span> <span class="keyword">split</span>) yield s<span class="string">"1=1 order by $orderByColumn limit $limitCount offset $&#123;limitCount * i&#125;"</span></span><br><span class="line">val df = spark.<span class="keyword">read</span>.jdbc(<span class="keyword">url</span>, <span class="keyword">table</span>, predicates.toArray, properties)</span><br><span class="line">df.<span class="keyword">count</span></span></span><br></pre></td></tr></table></figure>
<p>后台日志：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2050 Query <span class="operator"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">0</span></span><br><span class="line"><span class="number">2051</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">6</span></span><br><span class="line"><span class="number">2052</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">3</span></span><br><span class="line"><span class="number">2053</span> <span class="keyword">Query</span> <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">limit</span> <span class="number">3</span> <span class="keyword">offset</span> <span class="number">9</span></span></span><br></pre></td></tr></table></figure>
<h2 id="JDBC实现">JDBC实现</h2><p>spark.read.jdbc进入DataFrameReader，真正执行在load()方法中：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load</span><span class="params">(paths: String*)</span>:</span> DataFrame = &#123;</span><br><span class="line">  sparkSession.baseRelationToDataFrame(</span><br><span class="line">    DataSource.apply(</span><br><span class="line">      sparkSession,</span><br><span class="line">      paths = paths,</span><br><span class="line">      userSpecifiedSchema = userSpecifiedSchema,</span><br><span class="line">      className = source,</span><br><span class="line">      options = extraOptions.toMap).resolveRelation())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>JDBC格式对应的Provider就定义在DataSource中：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">DataSource</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Logging</span> &#123;</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> backwardCompatibilityMap: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>] = &#123;</span><br><span class="line">    <span class="keyword">val</span> jdbc = classOf[<span class="type">JdbcRelationProvider</span>].getCanonicalName</span><br><span class="line">    <span class="keyword">val</span> json = classOf[<span class="type">JsonFileFormat</span>].getCanonicalName</span><br><span class="line">    <span class="keyword">val</span> csv = classOf[<span class="type">CSVFileFormat</span>].getCanonicalName</span><br><span class="line">    <span class="type">Map</span>(</span><br><span class="line">      <span class="string">"org.apache.spark.sql.jdbc"</span> -&gt; jdbc,</span><br><span class="line">      <span class="string">"org.apache.spark.sql.json"</span> -&gt; json,</span><br><span class="line">      <span class="string">"com.databricks.spark.csv"</span> -&gt; csv</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>jdbc数据源的定义类是：JdbcRelationProvider</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spark数据源扩展与实践(40行代码实现一个自定义的DataSource)&lt;br&gt;
    
    </summary>
    
      <category term="spark" scheme="http://github.com/zqhxuyuan/categories/spark/"/>
    
    
      <category term="hadoop" scheme="http://github.com/zqhxuyuan/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>StreamingPro</title>
    <link href="http://github.com/zqhxuyuan/2017/09/04/2017-09-04-StreamingPro/"/>
    <id>http://github.com/zqhxuyuan/2017/09/04/2017-09-04-StreamingPro/</id>
    <published>2017-09-03T16:00:00.000Z</published>
    <updated>2017-09-05T13:14:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/allwefantasy/streamingpro/">https://github.com/allwefantasy/streamingpro/</a><br><a id="more"></a></p>
<p>单个Job的配置示例：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">you-first-streaming-job</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">desc</span>": <span class="value"><span class="string">"just a example"</span></span>,</span><br><span class="line">    "<span class="attribute">strategy</span>": <span class="value"><span class="string">"spark"</span></span>,</span><br><span class="line">    "<span class="attribute">algorithm</span>": <span class="value">[]</span>,</span><br><span class="line">    "<span class="attribute">ref</span>": <span class="value">[</span><br><span class="line">    ]</span>,</span><br><span class="line">    "<span class="attribute">compositor</span>": <span class="value">[</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"stream.sources"</span></span>,</span><br><span class="line">        "<span class="attribute">params</span>": <span class="value">[</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">format</span>": <span class="value"><span class="string">"socket"</span></span>,</span><br><span class="line">            "<span class="attribute">outputTable</span>": <span class="value"><span class="string">"test"</span></span>,</span><br><span class="line">            "<span class="attribute">port</span>": <span class="value"><span class="string">"9999"</span></span>,</span><br><span class="line">            "<span class="attribute">host</span>": <span class="value"><span class="string">"localhost"</span></span>,</span><br><span class="line">            "<span class="attribute">path</span>": <span class="value"><span class="string">"-"</span></span><br><span class="line">          </span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      </span>&#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"stream.sql"</span></span>,</span><br><span class="line">        "<span class="attribute">params</span>": <span class="value">[</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">sql</span>": <span class="value"><span class="string">"select avg(value) avgAge from test"</span></span>,</span><br><span class="line">            "<span class="attribute">outputTableName</span>": <span class="value"><span class="string">"test3"</span></span><br><span class="line">          </span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      </span>&#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"stream.sql"</span></span>,</span><br><span class="line">        "<span class="attribute">params</span>": <span class="value">[</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">sql</span>": <span class="value"><span class="string">"select count(value) as nameCount from test"</span></span>,</span><br><span class="line">            "<span class="attribute">outputTableName</span>": <span class="value"><span class="string">"test1"</span></span><br><span class="line">          </span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      </span>&#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"stream.sql"</span></span>,</span><br><span class="line">        "<span class="attribute">params</span>": <span class="value">[</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">sql</span>": <span class="value"><span class="string">"select sum(value) ageSum from test"</span></span>,</span><br><span class="line">            "<span class="attribute">outputTableName</span>": <span class="value"><span class="string">"test2"</span></span><br><span class="line">          </span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      </span>&#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"stream.sql"</span></span>,</span><br><span class="line">        "<span class="attribute">params</span>": <span class="value">[</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">sql</span>": <span class="value"><span class="string">"select * from test1 union select * from test2 union select * from test3"</span></span>,</span><br><span class="line">            "<span class="attribute">outputTableName</span>": <span class="value"><span class="string">"test4"</span></span><br><span class="line">          </span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      </span>&#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"stream.outputs"</span></span>,</span><br><span class="line">        "<span class="attribute">params</span>": <span class="value">[</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">name</span>": <span class="value"><span class="string">"jack"</span></span>,</span><br><span class="line">            "<span class="attribute">format</span>": <span class="value"><span class="string">"console"</span></span>,</span><br><span class="line">            "<span class="attribute">path</span>": <span class="value"><span class="string">"-"</span></span>,</span><br><span class="line">            "<span class="attribute">inputTableName</span>": <span class="value"><span class="string">"test4"</span></span>,</span><br><span class="line">            "<span class="attribute">mode</span>": <span class="value"><span class="string">"Overwrite"</span></span><br><span class="line">          </span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      </span>&#125;</span><br><span class="line">    ]</span>,</span><br><span class="line">    "<span class="attribute">configParams</span>": <span class="value">&#123;</span><br><span class="line">    &#125;</span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>多个Job的配置示例：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   "<span class="attribute">you-first-streaming-job</span>": <span class="value">&#123;</span><br><span class="line">     "<span class="attribute">desc</span>": <span class="value"><span class="string">"just a example"</span></span>,</span><br><span class="line">     "<span class="attribute">strategy</span>": <span class="value"><span class="string">"spark"</span></span>,</span><br><span class="line">     "<span class="attribute">algorithm</span>": <span class="value">[]</span>,</span><br><span class="line">     "<span class="attribute">ref</span>": <span class="value">[</span><br><span class="line">     ]</span>,</span><br><span class="line">     "<span class="attribute">compositor</span>": <span class="value">[</span><br><span class="line">     ]</span>,</span><br><span class="line">     "<span class="attribute">configParams</span>": <span class="value">&#123;</span><br><span class="line">     &#125;</span><br><span class="line">   </span>&#125;</span>,</span><br><span class="line">   "<span class="attribute">you-second-streaming-job</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">desc</span>": <span class="value"><span class="string">"just a example"</span></span>,</span><br><span class="line">        "<span class="attribute">strategy</span>": <span class="value"><span class="string">"spark"</span></span>,</span><br><span class="line">        "<span class="attribute">algorithm</span>": <span class="value">[]</span>,</span><br><span class="line">        "<span class="attribute">ref</span>": <span class="value">[</span><br><span class="line">        ]</span>,</span><br><span class="line">        "<span class="attribute">compositor</span>": <span class="value">[</span><br><span class="line">        ]</span>,</span><br><span class="line">        "<span class="attribute">configParams</span>": <span class="value">&#123;</span><br><span class="line">        &#125;</span><br><span class="line">      </span>&#125;</span><br><span class="line"> </span>&#125;</span><br></pre></td></tr></table></figure>
<p>StreamingPro支持Spark、SparkStreaming、SparkStruncture、Flink。入口类都是统一的<code>StreamingApp</code>。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">StreamingApp</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span>(</span>args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> params = <span class="keyword">new</span> <span class="type">ParamsUtil</span>(args)</span><br><span class="line">    require(params.hasParam(<span class="string">"streaming.name"</span>), <span class="string">"Application name should be set"</span>)</span><br><span class="line">    <span class="type">PlatformManager</span>.getOrCreate.run(params)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过streaming.platform可以指定不同的运行平台。当然，不同的运行引擎的jar包也不同。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SHome=/Users/allwefantasy/streamingpro</span><br><span class="line"></span><br><span class="line">./bin/spark-submit   --class streaming.core.StreamingApp \</span><br><span class="line">--master <span class="built_in">local</span>[<span class="number">2</span>] \</span><br><span class="line">--name <span class="built_in">test</span> \</span><br><span class="line"><span class="variable">$SHome</span>/streamingpro-spark-<span class="number">2.0</span>-<span class="number">0.4</span>.<span class="number">15</span>-SNAPSHOT.jar    \</span><br><span class="line">-streaming.name <span class="built_in">test</span>    \</span><br><span class="line">-streaming.platform spark_streaming \</span><br><span class="line">-streaming.job.file.path file://<span class="variable">$SHome</span>/spark-streaming.json</span><br><span class="line"></span><br><span class="line">bin/flink run -c streaming.core.StreamingApp \ </span><br><span class="line">/Users/allwefantasy/streamingpro/streamingpro.flink-<span class="number">0.4</span>.<span class="number">14</span>-SNAPSHOT-online-<span class="number">1.2</span>.<span class="number">0</span>.jar \</span><br><span class="line">-streaming.name god \</span><br><span class="line">-streaming.platform flink_streaming \</span><br><span class="line">-streaming.job.file.path file:///Users/allwefantasy/streamingpro/flink.json</span><br></pre></td></tr></table></figure>
<p>jar包会被用来加载不同的Runtime。Runtime运行的映射关系定义在<code>PlatformManager</code>的<code>platformNameMapping</code>变量中。<br>Runtime是一个接口，最主要的是startRuntime方法和params方法。后面我们把Runtime叫做<strong>执行引擎</strong>。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">StreamingRuntime</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">startRuntime</span>:</span> <span class="type">StreamingRuntime</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">destroyRuntime</span>(</span>stopGraceful: <span class="type">Boolean</span>, stopContext: <span class="type">Boolean</span> = <span class="literal">false</span>): <span class="type">Boolean</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">streamingRuntimeInfo</span>:</span> <span class="type">StreamingRuntimeInfo</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">resetRuntimeOperator</span>(</span>runtimeOperator: <span class="type">RuntimeOperator</span>)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">configureStreamingRuntimeInfo</span>(</span>streamingRuntimeInfo: <span class="type">StreamingRuntimeInfo</span>)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">awaitTermination</span></span><br><span class="line"></span>  <span class="function"><span class="keyword">def</span> <span class="title">startThriftServer</span></span><br><span class="line"></span>  <span class="function"><span class="keyword">def</span> <span class="title">startHttpServer</span></span><br><span class="line"></span>  <span class="function"><span class="keyword">def</span> <span class="title">params</span>:</span> <span class="type">JMap</span>[<span class="type">Any</span>, <span class="type">Any</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>StreamingPro本质上还是通过spark-submit运行。框架的整体运行流程在<code>PlatformManager</code>的<code>run</code>方法中。主要的步骤有：</p>
<ol>
<li>设置配置信息</li>
<li>根据反射机制，创建并获取运行时环境</li>
<li>获取dispatcher以及所有的strategies</li>
<li>启动REST服务、Thrift服务、注册ZK（可选）</li>
<li>启动执行引擎，并等待作业完成</li>
</ol>
<blockquote>
<p>关于Dispatcher、Strategy的概念，参考作者的ServiceframeworkDispatcher项目。<br>反射创建执行引擎，调用的是对应Object类的getOrCreate方法，并传入params参数，最后实例化为StreamingRuntime。</p>
</blockquote>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">platformNameMapping</span> =</span> <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>](</span><br><span class="line">  <span class="type">SPAKR_S_S</span> -&gt; <span class="string">"streaming.core.strategy.platform.SparkStructuredStreamingRuntime"</span>,</span><br><span class="line">  <span class="type">SPAKR_STRUCTURED_STREAMING</span> -&gt; <span class="string">"streaming.core.strategy.platform.SparkStructuredStreamingRuntime"</span>,</span><br><span class="line">  <span class="type">FLINK_STREAMING</span> -&gt; <span class="string">"streaming.core.strategy.platform.FlinkStreamingRuntime"</span>,</span><br><span class="line">  <span class="type">SPAKR_STREAMING</span> -&gt; <span class="string">"streaming.core.strategy.platform.SparkStreamingRuntime"</span>,</span><br><span class="line">  <span class="type">SPARK</span> -&gt; <span class="string">"streaming.core.strategy.platform.SparkRuntime"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>注意：StreamingPro的Runtime只是Spark作业的执行引擎，具体根据配置文件加载策略是ServiceframeworkDispatcher的工作。<br>假设我们定义了下面的一个配置文件，由于采用了shortName，需要定义一个ShortNameMapping</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"convert-multi-csv-to-json"</span>: &#123;</span><br><span class="line">    <span class="string">"desc"</span>: <span class="string">"测试"</span>,</span><br><span class="line">    <span class="string">"strategy"</span>: <span class="string">"spark"</span>,</span><br><span class="line">    <span class="string">"algorithm"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"testProcessor"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"ref"</span>: [],</span><br><span class="line">    <span class="string">"compositor"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"testCompositor"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"configParams"</span>: &#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>DefaultShortNameMapping的定义如下。这样配置文件中的spark就和ServiceframeworkDispatcher的加载过程对应起来了。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DefaultShortNameMapping</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">ShortNameMapping</span> &#123;</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> compositorNameMap: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>] = <span class="type">Map</span>[<span class="type">String</span>, <span class="type">String</span>](</span><br><span class="line">    <span class="string">"spark"</span> -&gt; <span class="string">"serviceframework.dispatcher.test.DefaultStrategy"</span>,</span><br><span class="line">    <span class="string">"testProcessor"</span> -&gt; <span class="string">"serviceframework.dispatcher.test.TestProcessor"</span>,</span><br><span class="line">    <span class="string">"testCompositor"</span> -&gt; <span class="string">"serviceframework.dispatcher.test.TestCompositor"</span></span><br><span class="line">  )</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">forName</span>(</span>shortName: <span class="type">String</span>): <span class="type">String</span> = &#123;</span><br><span class="line">    <span class="keyword">if</span> (compositorNameMap.contains(shortName)) compositorNameMap(shortName)</span><br><span class="line">    <span class="keyword">else</span> shortName</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ServiceframeworkDispatcher的核心是StrategyDispatcher，这个类在创建的时候，会读取配置文件。<br>然后解析配置文件中的strategy、algorithm(processor)、ref、compositor、configParams等配置项，并构造对应的对象。<br>ServiceframeworkDispatcher是一个模块组合框架，它主要定义了Compositor、Processor、Strategy三个接口。</p>
<p>Strategy接口包含了processor、ref、compositor，以及初始化和result方法。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Strategy</span>[</span><span class="type">T</span>] <span class="keyword">extends</span> <span class="type">ServiceInj</span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">processor</span>:</span><span class="type">JList</span>[<span class="type">Processor</span>[<span class="type">T</span>]]</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">ref</span>:</span><span class="type">JList</span>[<span class="type">Strategy</span>[<span class="type">T</span>]]</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">compositor</span>:</span><span class="type">JList</span>[<span class="type">Compositor</span>[<span class="type">T</span>]]</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">name</span>:</span><span class="type">String</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span>(</span>name:<span class="type">String</span>,alg:<span class="type">JList</span>[<span class="type">Processor</span>[<span class="type">T</span>]],ref:<span class="type">JList</span>[<span class="type">Strategy</span>[<span class="type">T</span>]],com:<span class="type">JList</span>[<span class="type">Compositor</span>[<span class="type">T</span>]],params:<span class="type">JMap</span>[<span class="type">Any</span>,<span class="type">Any</span>])</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">result</span>(</span>params:<span class="type">JMap</span>[<span class="type">Any</span>,<span class="type">Any</span>]):<span class="type">JList</span>[<span class="type">T</span>]</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">configParams</span>:</span>util.<span class="type">Map</span>[<span class="type">Any</span>, <span class="type">Any</span>]</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">stop</span> =</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Strategy策略的初始化需要算法、引用、组合器，以及配置信息，对应的方法是StrategyDispatcher的createStrategy方法。</p>
<p>注意下面的initialize方法，createAlgorithms和createCompositors初始化时<br>会读取params配置，这是一个嵌套了Map的列表：<code>JList[JMap[String, Any]]</code>。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createStrategy</span>(</span>name: <span class="type">String</span>, desc: <span class="type">JMap</span>[_, _]): <span class="type">Option</span>[<span class="type">Strategy</span>[<span class="type">T</span>]] = &#123;</span><br><span class="line">  <span class="keyword">if</span> (_strategies.contains(name)) <span class="keyword">return</span> <span class="type">None</span>;</span><br><span class="line">  <span class="comment">// 实例化策略，如果有shortName，则先获取fullName，并通过Class.forName实例化具体的策略类</span></span><br><span class="line">  <span class="keyword">val</span> strategy = <span class="type">Class</span>.forName(shortNameMapping.forName(desc.get(<span class="string">"strategy"</span>).asInstanceOf[<span class="type">String</span>])).newInstance().asInstanceOf[<span class="type">Strategy</span>[<span class="type">T</span>]]</span><br><span class="line">  <span class="comment">// 读取配置信息，并实例化为Map[Any,Any]</span></span><br><span class="line">  <span class="keyword">val</span> configParams: <span class="type">JMap</span>[<span class="type">Any</span>, <span class="type">Any</span>] = <span class="keyword">if</span> (desc.containsKey(<span class="string">"configParams"</span>)) desc.get(<span class="string">"configParams"</span>).asInstanceOf[<span class="type">JMap</span>[<span class="type">Any</span>, <span class="type">Any</span>]] <span class="keyword">else</span> <span class="keyword">new</span> java.util.<span class="type">HashMap</span>()</span><br><span class="line">  <span class="comment">// 初始化策略，需要创建算法、引用、组合器</span></span><br><span class="line">  strategy.initialize(name, createAlgorithms(desc), createRefs(desc), createCompositors(desc), configParams)</span><br><span class="line">  _strategies.put(name, strategy)</span><br><span class="line">  <span class="type">Option</span>(strategy)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建算法。一个策略由0个或者多个算法提供结果</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">createAlgorithms</span>(</span>jobJMap: <span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]): <span class="type">JList</span>[<span class="type">Processor</span>[<span class="type">T</span>]] = &#123;</span><br><span class="line">  <span class="keyword">if</span> (!jobJMap.contains(<span class="string">"algorithm"</span>) &amp;&amp; !jobJMap.contains(<span class="string">"processor"</span>)) <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">AList</span>[<span class="type">Processor</span>[<span class="type">T</span>]]()</span><br><span class="line">  <span class="keyword">val</span> processors = <span class="keyword">if</span> (jobJMap.contains(<span class="string">"algorithm"</span>)) jobJMap(<span class="string">"algorithm"</span>) <span class="keyword">else</span> jobJMap(<span class="string">"processor"</span>)</span><br><span class="line">  processors.asInstanceOf[<span class="type">JList</span>[<span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]]].map &#123;</span><br><span class="line">    alg =&gt;</span><br><span class="line">      <span class="keyword">val</span> name = shortName2FullName(alg)</span><br><span class="line">      <span class="keyword">val</span> processor = <span class="type">Class</span>.forName(name).newInstance().asInstanceOf[<span class="type">Processor</span>[<span class="type">T</span>]]</span><br><span class="line">      <span class="keyword">val</span> params: <span class="type">JList</span>[<span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]] = <span class="keyword">if</span> (alg.contains(<span class="string">"params"</span>)) alg(<span class="string">"params"</span>).asInstanceOf[<span class="type">JList</span>[<span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]]] <span class="keyword">else</span> <span class="keyword">new</span> <span class="type">AList</span>[<span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]]()</span><br><span class="line">      processor.initialize(name, params)</span><br><span class="line">      processor</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建组合器，可以多个，按顺序调用。有点类似过滤器链。第一个过滤器会接受算法或者策略的结果。后续的组合器就只能处理上一阶段的组合器吐出的结果</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">createCompositors</span>(</span>jobJMap: <span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]): <span class="type">JList</span>[<span class="type">Compositor</span>[<span class="type">T</span>]] = &#123;</span><br><span class="line">  <span class="keyword">if</span> (!jobJMap.contains(<span class="string">"compositor"</span>)) <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">AList</span>()</span><br><span class="line">  <span class="keyword">val</span> compositors = jobJMap.get(<span class="string">"compositor"</span>)</span><br><span class="line">  compositors.asInstanceOf[<span class="type">JList</span>[<span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]]].map &#123;</span><br><span class="line">    f =&gt;</span><br><span class="line">      <span class="keyword">val</span> compositor = <span class="type">Class</span>.forName(shortName2FullName(f)).newInstance().asInstanceOf[<span class="type">Compositor</span>[<span class="type">T</span>]]</span><br><span class="line">      <span class="keyword">val</span> params: <span class="type">JList</span>[<span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]] = <span class="keyword">if</span> (f.contains(<span class="string">"params"</span>)) f.get(<span class="string">"params"</span>).asInstanceOf[<span class="type">JList</span>[<span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]]] <span class="keyword">else</span> <span class="keyword">new</span> <span class="type">AList</span>[<span class="type">JMap</span>[<span class="type">String</span>, <span class="type">Any</span>]]()</span><br><span class="line">      compositor.initialize(f.get(<span class="string">"typeFilter"</span>).asInstanceOf[<span class="type">JList</span>[<span class="type">String</span>]], params)</span><br><span class="line">      compositor</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ServiceframeworkDispatcher的核心是StrategyDispatcher，而StrategyDispatcher的核心是其dispatch方法。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dispatch</span>(</span>params: <span class="type">JMap</span>[<span class="type">Any</span>, <span class="type">Any</span>]): <span class="type">JList</span>[<span class="type">T</span>] = &#123;</span><br><span class="line">  findStrategies(clientType) <span class="keyword">match</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Some</span>(strategies) =&gt;</span><br><span class="line">      strategies.flatMap &#123; f =&gt; f.result(params) &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不同执行引擎的启动方法实现不同：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SparkRuntime</span>(</span>_params: <span class="type">JMap</span>[<span class="type">Any</span>, <span class="type">Any</span>]) <span class="keyword">extends</span> <span class="type">StreamingRuntime</span> <span class="keyword">with</span> <span class="type">PlatformManagerListener</span> &#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">startRuntime</span>:</span> <span class="type">StreamingRuntime</span> = <span class="keyword">this</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> sparkSession: <span class="type">SparkSession</span> = createRuntime</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">createRuntime</span> =</span> &#123;</span><br><span class="line">    <span class="comment">//...创建SparkSession，这里会根据参数判断是否支持Hive、Carbondata</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  params.put(<span class="string">"_session_"</span>, sparkSession) <span class="comment">//将SparkSession放入params中</span></span><br><span class="line">  registerUDF  </span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">params</span>:</span> <span class="type">JMap</span>[<span class="type">Any</span>, <span class="type">Any</span>] = _params</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SparkStreamingRuntime</span>(</span>_params: <span class="type">JMap</span>[<span class="type">Any</span>, <span class="type">Any</span>]) <span class="keyword">extends</span> <span class="type">StreamingRuntime</span> <span class="keyword">with</span> <span class="type">PlatformManagerListener</span> &#123; self =&gt;</span><br><span class="line">  <span class="keyword">var</span> streamingContext: <span class="type">StreamingContext</span> = createRuntime</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">createRuntime</span> =</span> &#123;</span><br><span class="line">    <span class="comment">//创建StreamingContext，并将SparkSession放入params中</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">startRuntime</span> =</span> &#123;</span><br><span class="line">    streamingContext.start()</span><br><span class="line">    <span class="keyword">this</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">awaitTermination</span> =</span> streamingContext.awaitTermination()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但真正执行StreamingPro主流程在streamingpro-commons下的SparkStreamingStrategy类。<br>注意：如果是spark-1.6，则streamingpro-spark下也有一个SparkStreamingStrategy类。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SparkStreamingStrategy</span>[</span><span class="type">T</span>] <span class="keyword">extends</span> <span class="type">Strategy</span>[<span class="type">T</span>] <span class="keyword">with</span> <span class="type">DebugTrait</span> <span class="keyword">with</span> <span class="type">JobStrategy</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> _ref: util.<span class="type">List</span>[<span class="type">Strategy</span>[<span class="type">T</span>]] = _</span><br><span class="line">  <span class="keyword">var</span> _compositor: util.<span class="type">List</span>[<span class="type">Compositor</span>[<span class="type">T</span>]] = _</span><br><span class="line">  <span class="keyword">var</span> _processor: util.<span class="type">List</span>[<span class="type">Processor</span>[<span class="type">T</span>]] = _</span><br><span class="line">  <span class="keyword">var</span> _configParams: util.<span class="type">Map</span>[<span class="type">Any</span>, <span class="type">Any</span>] = _</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">result</span>(</span>params: util.<span class="type">Map</span>[<span class="type">Any</span>, <span class="type">Any</span>]): util.<span class="type">List</span>[<span class="type">T</span>] = &#123;</span><br><span class="line">    ref.foreach &#123; r =&gt; r.result(params) &#125; <span class="comment">// 先执行ref</span></span><br><span class="line">    <span class="keyword">if</span> (compositor != <span class="literal">null</span> &amp;&amp; compositor.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 第一个Compositor, 产生第一个中间结果</span></span><br><span class="line">      <span class="keyword">var</span> middleR = compositor.get(<span class="number">0</span>).result(processor, ref, <span class="literal">null</span>, params)</span><br><span class="line">      <span class="comment">// 将新的中间结果运用到下一个Compositor</span></span><br><span class="line">      <span class="comment">// 第一个Compositor的结果运用到第二个的输入, 第二个Compositor的结果运用到第三个Compositor的输入...</span></span><br><span class="line">      <span class="comment">// 所以不同Compositor是链式执行的</span></span><br><span class="line">      <span class="keyword">for</span> (i &lt;- <span class="number">1</span> until compositor.size()) &#123;</span><br><span class="line">        middleR = compositor.get(i).result(processor, ref, middleR, params)</span><br><span class="line">      &#125;</span><br><span class="line">      middleR</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">new</span> util.<span class="type">ArrayList</span>[<span class="type">T</span>]()</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：配置文件中每个Job都有一个<code>strategy</code>级别的<code>configParams</code>，<code>ref</code>也会使用这个全局的<code>configParams</code>。<br>它是一个<code>Map[String, Any]</code>的结构。每个Compositor和Processor内部也有一个<code>params</code>配置，这是一个数组。</p>
<blockquote>
<p>实际上，全局的<code>configParams</code>参数会被用在Strategy、Ref/Processor和Compositor的result()方法的最后一个参数。</p>
</blockquote>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"compositor"</span>: [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"testCompositor"</span>,</span><br><span class="line">    <span class="string">"params"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"sql"</span>: <span class="string">"select avg(value) avgAge from test"</span>,</span><br><span class="line">        <span class="string">"outputTableName"</span>: <span class="string">"test3"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"sql"</span>: <span class="string">"select sum(value) sumAge from test"</span>,</span><br><span class="line">        <span class="string">"outputTableName"</span>: <span class="string">"test4"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure>
<p>接下来以读取多个数据源的Compositor实现类为例：</p>
<ul>
<li><code>_configParams</code>是在创建Compositor时初始化调用的，这是一个<code>List[Map[String, Any]]</code>的结构，对应了<code>params</code>列表配置</li>
<li>如果需要替换，则会先处理配置信息</li>
<li>接着，从params中获取SparkSession（还记得之前创建Runtime时放入Map中吗？），</li>
<li>然后，执行sparkSession.read.format(xx).options(Map).load(path)</li>
<li>最后，通过df.createOrReplaceTempView创建Spark SQL的临时表，名称为<code>outputTable</code></li>
</ul>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiSQLSourceCompositor</span>[<span class="title">T</span>] <span class="keyword">extends</span> <span class="title">Compositor</span>[<span class="title">T</span>] <span class="title">with</span> <span class="title">CompositorHelper</span> </span>&#123;</span><br><span class="line">  private <span class="keyword">var</span> _configParams: util.<span class="built_in">List</span>[util.<span class="built_in">Map</span>[Any, Any]] = _</span><br><span class="line"></span><br><span class="line">  override def initialize(typeFilters: util.<span class="built_in">List</span>[<span class="built_in">String</span>], configParams: util.<span class="built_in">List</span>[util.<span class="built_in">Map</span>[Any, Any]]): Unit = &#123;</span><br><span class="line">    <span class="keyword">this</span>._configParams = configParams</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override def result(alg: util.<span class="built_in">List</span>[Processor[T]], ref: util.<span class="built_in">List</span>[Strategy[T]], middleResult: util.<span class="built_in">List</span>[T], params: util.<span class="built_in">Map</span>[Any, Any]): util.<span class="built_in">List</span>[T] = &#123;</span><br><span class="line"></span><br><span class="line">    _configParams.foreach &#123; sourceConfig =&gt;</span><br><span class="line">      val name = sourceConfig.getOrElse(<span class="string">"name"</span>, <span class="string">""</span>).toString</span><br><span class="line"></span><br><span class="line">      val _cfg = sourceConfig.map(f =&gt; (f._1.toString, f._2.toString)).map &#123; f =&gt;</span><br><span class="line">        (f._1, params.getOrElse(s<span class="string">"streaming.sql.source.<span class="subst">$&#123;name&#125;</span>.<span class="subst">$&#123;f._1&#125;</span>"</span>, f._2).toString)</span><br><span class="line">      &#125;.toMap</span><br><span class="line"></span><br><span class="line">      val sourcePath = _cfg(<span class="string">"path"</span>)</span><br><span class="line">      val df = sparkSession(params).read.format(sourceConfig(<span class="string">"format"</span>).toString).options(</span><br><span class="line">        (_cfg - <span class="string">"format"</span> - <span class="string">"path"</span> - <span class="string">"outputTable"</span>).map(f =&gt; (f._1.toString, f._2.toString))).load(sourcePath)</span><br><span class="line">      df.createOrReplaceTempView(_cfg.getOrElse(<span class="string">"outputTable"</span>, _cfg.getOrElse(<span class="string">"outputTableName"</span>, <span class="string">""</span>)))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">List</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了支持配置的动态替换，<code>_cfg</code>参数会做一些处理，比如上面的<code>s&quot;streaming.sql.source.${name}.${f._1}&quot;</code>如果需要被替换，则会被替换为<code>f._2</code>。<br>下表列举了StreamingPro支持的几种替换方式。</p>
<table>
<thead>
<tr>
<th>配置参数</th>
<th>配置示例</th>
<th>动态传参数</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>streaming.sql.source.[name].[参数]</code></td>
<td>“path”: “file:///tmp/sample_article.txt”</td>
<td>-streaming.sql.source.firstSource.path  file:///tmp/wow.txt</td>
</tr>
<tr>
<td><code>streaming.sql.out.[name].[参数]</code></td>
<td>“path”: “file:///tmp/sample_article.txt”</td>
<td>-streaming.sql.source.firstSink.path  file:///tmp/wow_20170101.txt</td>
</tr>
<tr>
<td><code>streaming.sql.params.[param-name]</code></td>
<td>“sql”: “select * from test where hp_time=:today”</td>
<td>-streaming.sql.params.today “20170101”</td>
</tr>
</tbody>
</table>
<p>假设有两个数据输入源和一个输出目标的配置如下：</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"batch.sources"</span>,</span><br><span class="line">  <span class="string">"params"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"name"</span>:<span class="string">"firstSource"</span>,</span><br><span class="line">      <span class="string">"path"</span>: <span class="string">"file:///tmp/sample_article.txt"</span>,</span><br><span class="line">      <span class="string">"format"</span>: <span class="string">"com.databricks.spark.csv"</span>,</span><br><span class="line">      <span class="string">"outputTable"</span>: <span class="string">"article"</span>,</span><br><span class="line">      <span class="string">"header"</span>:true</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"name"</span>:<span class="string">"secondSource"</span>,</span><br><span class="line">        <span class="string">"path"</span>: <span class="string">"file:///tmp/sample_article2.txt"</span>,</span><br><span class="line">        <span class="string">"format"</span>: <span class="string">"com.databricks.spark.csv"</span>,</span><br><span class="line">        <span class="string">"outputTable"</span>: <span class="string">"article2"</span>,</span><br><span class="line">        <span class="string">"header"</span>:true</span><br><span class="line">      &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"batch.outputs"</span>,</span><br><span class="line">  <span class="string">"params"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"name"</span>:<span class="string">"firstSink"</span>,</span><br><span class="line">      <span class="string">"path"</span>: <span class="string">"file:///tmp/sample_article.txt"</span>,</span><br><span class="line">      <span class="string">"format"</span>: <span class="string">"com.databricks.spark.csv"</span>,</span><br><span class="line">      <span class="string">"outputTable"</span>: <span class="string">"article"</span>,</span><br><span class="line">      <span class="string">"header"</span>:true</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Source的功能是：读取输入源形成DataFrame，然后创建临时表。其他组件比如SQL也是类似的。至此StreamingPro的大致流程就分析完了。 </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/allwefantasy/streamingpro/&quot;&gt;https://github.com/allwefantasy/streamingpro/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="bigdata" scheme="http://github.com/zqhxuyuan/categories/bigdata/"/>
    
    
      <category term="spark" scheme="http://github.com/zqhxuyuan/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>Akka并发图解</title>
    <link href="http://github.com/zqhxuyuan/2017/08/16/Akka-Concurrenty/"/>
    <id>http://github.com/zqhxuyuan/2017/08/16/Akka-Concurrenty/</id>
    <published>2017-08-15T16:00:00.000Z</published>
    <updated>2017-08-16T08:04:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>Akka并发图解（Akka Concurrenty）：<br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Akka并发图解（Akka Concurrenty）：&lt;br&gt;
    
    </summary>
    
      <category term="akka" scheme="http://github.com/zqhxuyuan/categories/akka/"/>
    
    
      <category term="akka" scheme="http://github.com/zqhxuyuan/tags/akka/"/>
    
  </entry>
  
  <entry>
    <title>SnappyData</title>
    <link href="http://github.com/zqhxuyuan/2017/07/13/SnappyData-In-Action/"/>
    <id>http://github.com/zqhxuyuan/2017/07/13/SnappyData-In-Action/</id>
    <published>2017-07-12T16:00:00.000Z</published>
    <updated>2017-09-14T08:21:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>SnappyData®</p>
<a id="more"></a>
<h2 id="SnappyData">SnappyData</h2><h3 id="开发模式">开发模式</h3><p>由于下载的snappydata已经带了spark，所以不需要使用–packges</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd snappydata-<span class="number">0.9</span>-bin</span><br><span class="line">$ bin/spark-shell --driver-memory=<span class="number">4</span>g \</span><br><span class="line">  --conf spark<span class="class">.snappydata</span><span class="class">.store</span><span class="class">.sys-disk-dir</span>=quickstartdatadir \</span><br><span class="line">  --conf spark<span class="class">.snappydata</span><span class="class">.store</span><span class="class">.log-file</span>=quickstartdatadir/quickstart<span class="class">.log</span> \</span><br><span class="line">  --driver-java-options=<span class="string">"-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:MaxNewSize=1g"</span></span><br><span class="line">Spark context Web UI available at http:<span class="comment">//192.168.6.52:4042</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
<p>执行CRUD操作：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">val snappy = new org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.sql</span><span class="class">.SnappySession</span>(spark.sparkContext)</span><br><span class="line">import snappy<span class="class">.implicits</span>._</span><br><span class="line">import org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.sql</span><span class="class">.types</span>._</span><br><span class="line">import org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.sql</span><span class="class">.Row</span></span><br><span class="line"></span><br><span class="line">val ds = <span class="function"><span class="title">Seq</span><span class="params">((<span class="number">1</span>,<span class="string">"a"</span>)</span></span>, (<span class="number">2</span>, <span class="string">"b"</span>), (<span class="number">3</span>, <span class="string">"c"</span>)).<span class="function"><span class="title">toDS</span><span class="params">()</span></span></span><br><span class="line">val tableSchema = <span class="function"><span class="title">StructType</span><span class="params">(Array(StructField(<span class="string">"CustKey"</span>, IntegerType, false)</span></span>,<span class="function"><span class="title">StructField</span><span class="params">(<span class="string">"CustName"</span>, StringType, false)</span></span>))</span><br><span class="line"></span><br><span class="line">snappy.<span class="function"><span class="title">createTable</span><span class="params">(tableName = <span class="string">"colTable"</span>, provider = <span class="string">"column"</span>, schema = tableSchema, options = Map.empty[String, String], allowExisting = false)</span></span></span><br><span class="line">snappy.<span class="function"><span class="title">createTable</span><span class="params">(tableName = <span class="string">"rowTable"</span>, provider = <span class="string">"row"</span>, schema = tableSchema, options = Map.empty[String, String], allowExisting = false)</span></span></span><br><span class="line"></span><br><span class="line">ds<span class="class">.write</span><span class="class">.insertInto</span>(<span class="string">"colTable"</span>)</span><br><span class="line">ds<span class="class">.write</span><span class="class">.insertInto</span>(<span class="string">"rowTable"</span>)</span><br><span class="line"></span><br><span class="line">snappy.<span class="function"><span class="title">insert</span><span class="params">(<span class="string">"colTable"</span>, Row(<span class="number">10</span>, <span class="string">"f"</span>)</span></span>)</span><br><span class="line">snappy.<span class="function"><span class="title">insert</span><span class="params">(<span class="string">"rowTable"</span>, Row(<span class="number">4</span>, <span class="string">"d"</span>)</span></span>)</span><br><span class="line"></span><br><span class="line">snappy.<span class="function"><span class="title">table</span><span class="params">(<span class="string">"colTable"</span>)</span></span><span class="class">.count</span></span><br><span class="line">snappy.<span class="function"><span class="title">table</span><span class="params">(<span class="string">"colTable"</span>)</span></span>.<span class="function"><span class="title">orderBy</span><span class="params">(<span class="string">"CustKey"</span>)</span></span><span class="class">.show</span></span><br><span class="line">snappy.<span class="function"><span class="title">table</span><span class="params">(<span class="string">"rowTable"</span>)</span></span><span class="class">.count</span></span><br><span class="line">snappy.<span class="function"><span class="title">table</span><span class="params">(<span class="string">"rowTable"</span>)</span></span>.<span class="function"><span class="title">orderBy</span><span class="params">(<span class="string">"CUSTKEY"</span>)</span></span><span class="class">.show</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// update and delete on row table. current version did't support update and delete on column table.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// update rowTable set custname='d' where custkey=1</span></span><br><span class="line">snappy.<span class="function"><span class="title">update</span><span class="params">(tableName = <span class="string">"rowTable"</span>, filterExpr = <span class="string">"CUSTKEY=1"</span>, newColumnValues = Row(<span class="string">"d"</span>)</span></span>, updateColumns = <span class="string">"CUSTNAME"</span>)</span><br><span class="line">snappy.<span class="function"><span class="title">table</span><span class="params">(<span class="string">"rowTable"</span>)</span></span>.<span class="function"><span class="title">orderBy</span><span class="params">(<span class="string">"CUSTKEY"</span>)</span></span><span class="class">.show</span></span><br><span class="line"><span class="comment">// delete rowTable where custkey=1</span></span><br><span class="line">snappy.<span class="function"><span class="title">delete</span><span class="params">(tableName = <span class="string">"rowTable"</span>, filterExpr = <span class="string">"CUSTKEY=1"</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>打开<a href="http://192.168.6.52:4042/dashboard/" target="_blank" rel="external">http://192.168.6.52:4042/dashboard/</a>，查看web-ui的dashboard页面</p>
<p><img src="http://img.blog.csdn.net/20170714115456658" alt="snappy"></p>
<p>查看quickstartdir,索引采用GF(GemFire)</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ tree quickstartdatadir/</span><br><span class="line">quickstartdatadir/</span><br><span class="line">├── BACKUPGFXD-DEFAULT-DISKSTORE_1<span class="class">.crf</span></span><br><span class="line">├── BACKUPGFXD-DEFAULT-DISKSTORE_1<span class="class">.drf</span></span><br><span class="line">├── BACKUPGFXD-DEFAULT-DISKSTORE<span class="class">.if</span></span><br><span class="line">├── datadictionary</span><br><span class="line">│   ├── BACKUPGFXD-DD-DISKSTORE_1<span class="class">.crf</span></span><br><span class="line">│   ├── BACKUPGFXD-DD-DISKSTORE_1<span class="class">.drf</span></span><br><span class="line">│   ├── BACKUPGFXD-DD-DISKSTORE<span class="class">.if</span></span><br><span class="line">│   └── DRLK_IFGFXD-DD-DISKSTORE<span class="class">.lk</span></span><br><span class="line">├── DRLK_IFGFXD-DEFAULT-DISKSTORE<span class="class">.lk</span></span><br><span class="line">├── gemfirexdtemp_1015622261<span class="class">.d</span></span><br><span class="line">└── quickstart.log</span><br></pre></td></tr></table></figure>
<p>简单的性能测试：</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">def <span class="function">benchmark</span>(name<span class="value">: String, times: Int = <span class="number">10</span>, warmups: Int = <span class="number">6</span>)(f: =&gt; Unit) &#123;</span><br><span class="line">  for (i &lt;- <span class="number">1</span> to warmups) &#123;</span><br><span class="line">    f</span><br><span class="line">  &#125;</span><br><span class="line">  val startTime = System.nanoTime</span><br><span class="line">  for (i &lt;- <span class="number">1</span> to times) &#123;</span><br><span class="line">    f</span><br><span class="line">  &#125;</span><br><span class="line">  val endTime = System.nanoTime</span><br><span class="line">  <span class="function">println</span>(s<span class="string">"Average time taken in $name for $times runs: "</span> +</span><br><span class="line">    (endTime - startTime).toDouble / (times * <span class="number">1000000.0</span>) + <span class="string">" millis"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">val snappy = new org.apache.spark.sql.<span class="function">SnappySession</span>(spark.sparkContext)</span><br><span class="line">val testDF = snappy.<span class="function">range</span>(<span class="number">100000000</span>).<span class="function">selectExpr</span>(<span class="string">"id"</span>, <span class="string">"concat('sym', cast((id % 100) as varchar(10))) as sym"</span>)</span><br><span class="line">snappy.<span class="function">sql</span>(<span class="string">"drop table if exists snappyTable"</span>)</span><br><span class="line">snappy.<span class="function">sql</span>(<span class="string">"create table snappyTable (id bigint not null, sym varchar(10) not null) using column"</span>)</span><br><span class="line"><span class="function">benchmark</span>(<span class="string">"Snappy insert perf"</span>, <span class="number">1</span>, <span class="number">0</span>) &#123;testDF.write.<span class="function">insertInto</span>(<span class="string">"snappyTable"</span>) &#125;</span><br><span class="line"><span class="function">benchmark</span>(<span class="string">"Snappy perf"</span>) &#123;snappy.<span class="function">sql</span>(<span class="string">"select sym, avg(id) from snappyTable group by sym"</span>).<span class="function">collect</span>()&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="单机模式">单机模式</h3><p>左图为本地模式，右图为伪分布式模式：分别启动locator（左下）、server（DataServer，右上）、<br>leader（左上），quickstartdir为右下（share-nothing store）.</p>
<p><img src="http://snappydatainc.github.io/snappydata/Images/SnappyLocalMode.png" alt="snappy"><br><img src="http://snappydatainc.github.io/snappydata/Images/SnappyEmbeddedMode.png" alt="snappy"></p>
<p>伪分布式模式的三个组件都在本机启动，使用不同的文件夹。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ cd snappydata-0.9-bin</span><br><span class="line">$ mkdir -p node-a/locator1 node-b/server1 node-c/lead1</span><br><span class="line"></span><br><span class="line">$ bin/snappy locator <span class="operator"><span class="keyword">start</span> -dir=node-a/locator1</span><br><span class="line"></span><br><span class="line"><span class="keyword">Starting</span> SnappyData <span class="keyword">Locator</span> <span class="keyword">using</span> peer discovery <span class="keyword">on</span>: <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>[<span class="number">10334</span>]</span><br><span class="line"><span class="keyword">Starting</span> Thrift <span class="keyword">server</span> <span class="keyword">for</span> SnappyData <span class="keyword">at</span> address localhost/<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>[<span class="number">1527</span>]</span><br><span class="line"><span class="keyword">Logs</span> <span class="keyword">generated</span> <span class="keyword">in</span> /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-<span class="keyword">bin</span>/node-a/locator1/snappylocator.<span class="keyword">log</span></span><br><span class="line">SnappyData <span class="keyword">Locator</span> pid: <span class="number">27651</span> <span class="keyword">status</span>: running</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">bin</span>/snappy <span class="keyword">server</span> <span class="keyword">start</span> -dir=node-b/server1 -locators=dp0652:<span class="number">10334</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Starting</span> SnappyData <span class="keyword">Server</span> <span class="keyword">using</span> locators <span class="keyword">for</span> peer discovery: dp0652:<span class="number">10334</span></span><br><span class="line"><span class="keyword">Starting</span> Thrift <span class="keyword">server</span> <span class="keyword">for</span> SnappyData <span class="keyword">at</span> address localhost/<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>[<span class="number">1528</span>]</span><br><span class="line"><span class="keyword">Logs</span> <span class="keyword">generated</span> <span class="keyword">in</span> /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-<span class="keyword">bin</span>/node-b/server1/snappyserver.<span class="keyword">log</span></span><br><span class="line">SnappyData <span class="keyword">Server</span> pid: <span class="number">29595</span> <span class="keyword">status</span>: running</span><br><span class="line">  <span class="keyword">Distributed</span> <span class="keyword">system</span> <span class="keyword">now</span> has <span class="number">2</span> members.</span><br><span class="line">  Other members: dp0652(<span class="number">27651</span>:<span class="keyword">locator</span>)&lt;v0&gt;:<span class="number">32709</span></span><br><span class="line"></span><br><span class="line">$ <span class="keyword">bin</span>/snappy leader <span class="keyword">start</span> -dir=node-<span class="keyword">c</span>/lead1 -locators=dp0652:<span class="number">10334</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Starting</span> SnappyData Leader <span class="keyword">using</span> locators <span class="keyword">for</span> peer discovery: localhost:<span class="number">10334</span></span><br><span class="line"><span class="keyword">Logs</span> <span class="keyword">generated</span> <span class="keyword">in</span> /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-<span class="keyword">bin</span>/node-<span class="keyword">c</span>/lead1/snappyleader.<span class="keyword">log</span></span><br><span class="line">SnappyData Leader pid: <span class="number">29860</span> <span class="keyword">status</span>: running</span><br><span class="line">  <span class="keyword">Distributed</span> <span class="keyword">system</span> <span class="keyword">now</span> has <span class="number">3</span> members.</span><br><span class="line">  Other members: dp0652(<span class="number">27651</span>:<span class="keyword">locator</span>)&lt;v0&gt;:<span class="number">32709</span>, dp0652(<span class="number">29595</span>:datastore)&lt;v7&gt;:<span class="number">9553</span></span></span><br></pre></td></tr></table></figure>
<p>如果要修改地址，可以用xx=xx的方式，<br>比如(修改locator的地址)[<a href="https://snappydatainc.github.io/snappydata/reference/configuration_parameters/start-locator/" target="_blank" rel="external">https://snappydatainc.github.io/snappydata/reference/configuration_parameters/start-locator/</a>]</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/snappy locator <span class="literal">start</span> -<span class="variable">dir=</span><span class="keyword">node</span><span class="identifier"></span><span class="title">-a</span>/locator1 -<span class="variable">start-locator=</span><span class="number">192.168</span>.<span class="number">6.52</span>[<span class="number">1529</span>]</span><br></pre></td></tr></table></figure>
<p>关闭各个组件：</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bin/snappy locator <span class="literal">stop</span> -<span class="variable">dir=</span><span class="keyword">node</span><span class="identifier"></span><span class="title">-a</span>/locator1</span><br><span class="line">bin/snappy server <span class="literal">stop</span> -<span class="variable">dir=</span><span class="keyword">node</span><span class="identifier"></span><span class="title">-b</span>/server1</span><br><span class="line">bin/snappy leader <span class="literal">stop</span> -<span class="variable">dir=</span><span class="keyword">node</span><span class="identifier"></span><span class="title">-c</span>/lead1</span><br></pre></td></tr></table></figure>
<p>执行spark-shell，并指定snappydata的连接地址为<code>localhost:1527</code>.</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bin/spark-shell --driver-memory=<span class="number">4</span>g \</span><br><span class="line">  --conf spark<span class="class">.snappydata</span><span class="class">.connection</span>=localhost:<span class="number">1527</span> \</span><br><span class="line">  --conf spark<span class="class">.snappydata</span><span class="class">.store</span><span class="class">.sys-disk-dir</span>=quickstartdatadir2 \</span><br><span class="line">  --conf spark<span class="class">.snappydata</span><span class="class">.store</span><span class="class">.log-file</span>=quickstartdatadir2/quickstart<span class="class">.log</span> \</span><br><span class="line">  --driver-java-options=<span class="string">"-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:MaxNewSize=1g"</span></span><br></pre></td></tr></table></figure>
<p>如果打开<a href="http://192.168.6.52:4042" target="_blank" rel="external">http://192.168.6.52:4042</a>，有spark app的页面，但是没有dashboard的页面。<br>打开<a href="http://192.168.6.52:5050/dashboard/" target="_blank" rel="external">http://192.168.6.52:5050/dashboard/</a>，可以查看snappydata的web ui。</p>
<blockquote>
<p>5050类似于spark standalone的8082 web-ui，4040类似于spark app的ui。</p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20170714120810617" alt="snappy2"></p>
<h3 id="一键启动三个组件">一键启动三个组件</h3><p>上面三个启动脚本可以用一个脚本执行,这种情况默认的文件夹在work下。</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sbin/snappy-start-<span class="keyword">all</span>.<span class="keyword">sh</span></span><br><span class="line">sbin/snappy-<span class="keyword">stop</span>-<span class="keyword">all</span>.<span class="keyword">sh</span></span><br><span class="line">sbin/snappy-status-<span class="keyword">all</span>.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
<p>snappy-start-all.sh会在本地启动一个locator,一个server,一个leader.</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/snappy-<span class="operator"><span class="keyword">start</span>-all.sh</span><br><span class="line"><span class="keyword">Starting</span> SnappyData <span class="keyword">Locator</span> <span class="keyword">using</span> peer discovery <span class="keyword">on</span>: localhost[<span class="number">10334</span>], other locators: localhost[<span class="number">10334</span>]</span><br><span class="line"><span class="keyword">Starting</span> Thrift <span class="keyword">server</span> <span class="keyword">for</span> SnappyData <span class="keyword">at</span> address localhost/<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>[<span class="number">1527</span>]</span><br><span class="line"><span class="keyword">Logs</span> <span class="keyword">generated</span> <span class="keyword">in</span> /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-<span class="keyword">bin</span>/<span class="keyword">work</span>/localhost-<span class="keyword">locator</span>-<span class="number">1</span>/snappylocator.<span class="keyword">log</span></span><br><span class="line">SnappyData <span class="keyword">Locator</span> pid: <span class="number">7949</span> <span class="keyword">status</span>: running</span><br><span class="line"></span><br><span class="line"><span class="keyword">Starting</span> SnappyData <span class="keyword">Server</span> <span class="keyword">using</span> locators <span class="keyword">for</span> peer discovery: localhost[<span class="number">10334</span>]</span><br><span class="line"><span class="keyword">Starting</span> Thrift <span class="keyword">server</span> <span class="keyword">for</span> SnappyData <span class="keyword">at</span> address localhost/<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>[<span class="number">1528</span>]</span><br><span class="line"><span class="keyword">Logs</span> <span class="keyword">generated</span> <span class="keyword">in</span> /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-<span class="keyword">bin</span>/<span class="keyword">work</span>/localhost-<span class="keyword">server</span>-<span class="number">1</span>/snappyserver.<span class="keyword">log</span></span><br><span class="line">SnappyData <span class="keyword">Server</span> pid: <span class="number">8176</span> <span class="keyword">status</span>: running</span><br><span class="line">  <span class="keyword">Distributed</span> <span class="keyword">system</span> <span class="keyword">now</span> has <span class="number">2</span> members.</span><br><span class="line">  Other members: localhost(<span class="number">7949</span>:<span class="keyword">locator</span>)&lt;v0&gt;:<span class="number">37846</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Starting</span> SnappyData Leader <span class="keyword">using</span> locators <span class="keyword">for</span> peer discovery: localhost[<span class="number">10334</span>]</span><br><span class="line"><span class="keyword">Logs</span> <span class="keyword">generated</span> <span class="keyword">in</span> /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-<span class="keyword">bin</span>/<span class="keyword">work</span>/localhost-<span class="keyword">lead</span>-<span class="number">1</span>/snappyleader.<span class="keyword">log</span></span><br><span class="line">SnappyData Leader pid: <span class="number">8488</span> <span class="keyword">status</span>: running</span><br><span class="line">  <span class="keyword">Distributed</span> <span class="keyword">system</span> <span class="keyword">now</span> has <span class="number">3</span> members.</span><br><span class="line">  Other members: localhost(<span class="number">7949</span>:<span class="keyword">locator</span>)&lt;v0&gt;:<span class="number">37846</span>, dp0652(<span class="number">8176</span>:datastore)&lt;v1&gt;:<span class="number">24462</span></span></span><br></pre></td></tr></table></figure>
<p>查看默认work下的目录</p>
<ul>
<li>lead：类似于Spark的Driver，文件夹是spark-jobserver，放了作业和jar包</li>
<li>locator：</li>
<li>server：</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">$ tree work/</span><br><span class="line">work/</span><br><span class="line">├── localhost-lead-<span class="number">1</span></span><br><span class="line">│   ├── BACKUPGFXD-DEFAULT-DISKSTORE<span class="class">.if</span></span><br><span class="line">│   ├── DRLK_IFGFXD-DEFAULT-DISKSTORE<span class="class">.lk</span></span><br><span class="line">│   ├── snappyleader<span class="class">.gfs</span></span><br><span class="line">│   ├── snappyleader<span class="class">.log</span></span><br><span class="line">│   ├── snappyleader<span class="class">.pid</span></span><br><span class="line">│   ├── spark-jobserver</span><br><span class="line">│   │   ├── filedao</span><br><span class="line">│   │   │   └── data</span><br><span class="line">│   │   │       ├── configs<span class="class">.data</span></span><br><span class="line">│   │   │       ├── jars<span class="class">.data</span></span><br><span class="line">│   │   │       └── jobs<span class="class">.data</span></span><br><span class="line">│   │   └── upload</span><br><span class="line">│   │       └── files<span class="class">.data</span></span><br><span class="line">│   └── start_snappyleader<span class="class">.log</span></span><br><span class="line">├── localhost-locator-<span class="number">1</span></span><br><span class="line">│   ├── BACKUPGFXD-DEFAULT-DISKSTORE_1<span class="class">.crf</span></span><br><span class="line">│   ├── BACKUPGFXD-DEFAULT-DISKSTORE_1<span class="class">.drf</span></span><br><span class="line">│   ├── BACKUPGFXD-DEFAULT-DISKSTORE<span class="class">.if</span></span><br><span class="line">│   ├── datadictionary</span><br><span class="line">│   │   ├── BACKUPGFXD-DD-DISKSTORE_1<span class="class">.crf</span></span><br><span class="line">│   │   ├── BACKUPGFXD-DD-DISKSTORE_1<span class="class">.drf</span></span><br><span class="line">│   │   ├── BACKUPGFXD-DD-DISKSTORE<span class="class">.if</span></span><br><span class="line">│   │   └── DRLK_IFGFXD-DD-DISKSTORE<span class="class">.lk</span></span><br><span class="line">│   ├── DRLK_IFGFXD-DEFAULT-DISKSTORE<span class="class">.lk</span></span><br><span class="line">│   ├── locator10334state<span class="class">.dat</span></span><br><span class="line">│   ├── locator10334views<span class="class">.log</span></span><br><span class="line">│   ├── snappylocator<span class="class">.gfs</span></span><br><span class="line">│   ├── snappylocator<span class="class">.log</span></span><br><span class="line">│   ├── snappylocator<span class="class">.pid</span></span><br><span class="line">│   └── start_snappylocator<span class="class">.log</span></span><br><span class="line">├── localhost-server-<span class="number">1</span></span><br><span class="line">│   ├── BACKUPGFXD-DEFAULT-DISKSTORE_1<span class="class">.crf</span></span><br><span class="line">│   ├── BACKUPGFXD-DEFAULT-DISKSTORE_1<span class="class">.drf</span></span><br><span class="line">│   ├── BACKUPGFXD-DEFAULT-DISKSTORE<span class="class">.if</span></span><br><span class="line">│   ├── datadictionary</span><br><span class="line">│   │   ├── BACKUPGFXD-DD-DISKSTORE_1<span class="class">.crf</span></span><br><span class="line">│   │   ├── BACKUPGFXD-DD-DISKSTORE_1<span class="class">.drf</span></span><br><span class="line">│   │   ├── BACKUPGFXD-DD-DISKSTORE<span class="class">.if</span></span><br><span class="line">│   │   └── DRLK_IFGFXD-DD-DISKSTORE<span class="class">.lk</span></span><br><span class="line">│   ├── DRLK_IFGFXD-DEFAULT-DISKSTORE<span class="class">.lk</span></span><br><span class="line">│   ├── snappyserver<span class="class">.gfs</span></span><br><span class="line">│   ├── snappyserver<span class="class">.log</span></span><br><span class="line">│   ├── snappyserver<span class="class">.pid</span></span><br><span class="line">│   └── start_snappyserver<span class="class">.log</span></span><br><span class="line">└── members.txt</span><br></pre></td></tr></table></figure>
<h2 id="client">client</h2><p>先停止snappydata，然后修改远程机器conf下的servers, locators, leads.<br>将localhost改为主机地址:192.168.6.52，再重启snappydata。</p>
<p>注意：默认启动时，使用的是localhost，work下的文件夹页是localhost开头。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0652 snappydata-<span class="number">0.9</span>-bin]$ sbin/snappy-start-all.sh</span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: Starting SnappyData Locator <span class="keyword">using</span> peer discovery on: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>[<span class="number">10334</span>], other locators: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">10334</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: Starting Thrift server <span class="keyword">for</span> SnappyData at address /<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>[<span class="number">1527</span>]</span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: Logs generated in /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-bin/work/<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>-locator-<span class="number">1</span>/snappylocator.<span class="built_in">log</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: SnappyData Locator pid: <span class="number">45151</span> status: running</span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: Starting SnappyData Server <span class="keyword">using</span> locators <span class="keyword">for</span> peer discovery: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">10334</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: Starting Thrift server <span class="keyword">for</span> SnappyData at address /<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>[<span class="number">1528</span>]</span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: Logs generated in /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-bin/work/<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>-server-<span class="number">1</span>/snappyserver.<span class="built_in">log</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: SnappyData Server pid: <span class="number">45860</span> status: running</span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:   Distributed system now has <span class="number">2</span> members.</span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:   Other members: dp0652(<span class="number">45151</span>:locator)&lt;v0&gt;:<span class="number">48205</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: Starting SnappyData Leader <span class="keyword">using</span> locators <span class="keyword">for</span> peer discovery: <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">10334</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: Logs generated in /home/qihuang.zheng/snappydata-<span class="number">0.9</span>-bin/work/<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>-lead-<span class="number">1</span>/snappyleader.<span class="built_in">log</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>: SnappyData Leader pid: <span class="number">46726</span> status: running</span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:   Distributed system now has <span class="number">3</span> members.</span><br><span class="line"><span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:   Other members: dp0652(<span class="number">45860</span>:datastore)&lt;v1&gt;:<span class="number">8287</span>, dp0652(<span class="number">45151</span>:locator)&lt;v0&gt;:<span class="number">48205</span></span><br></pre></td></tr></table></figure>
<p>查看进程</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">45860</span> io.snappydata.tools.ServerLauncher server -critical-heap-percentage=<span class="number">90</span> -eviction-heap-percentage=<span class="number">81</span> locators=<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">10334</span> <span class="built_in">log</span>-file=snappyserver.<span class="built_in">log</span> -client-bind-address=<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span></span><br><span class="line"><span class="number">46726</span> io.snappydata.tools.LeaderLauncher server locators=<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">10334</span> <span class="built_in">log</span>-file=snappyleader.<span class="built_in">log</span> -run-netserver=<span class="literal">false</span></span><br><span class="line"><span class="number">45151</span> io.snappydata.tools.LocatorLauncher server locators=<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">10334</span> start-locator=<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:<span class="number">10334</span> <span class="built_in">log</span>-file=snappylocator.<span class="built_in">log</span> -client-bind-address=<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span> -peer-discovery-address=<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span> jmx-manager=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>本机下载snappydata的二进制包，并启动snappy脚本，通过thrift/jdbc连接远程的snappydata cluster</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">➜  snappydata-0.9-bin bin/snappy</span><br><span class="line">SnappyData 版本 0.9</span><br><span class="line">snappy&gt; connect client '192.168.6.52:1527';</span><br><span class="line">九月 14, 2017 3:43:43 下午 java.util.logging.LogManager$RootLogger log</span><br><span class="line">信息: Starting client on '10.57.4.219' with ID='7059|<span class="string">2017/09/14 15:43:43.185 CST'</span><br><span class="line">Using CONNECTION0</span><br><span class="line">snappy&gt; show connections ;</span><br><span class="line">CONNECTION0* -  jdbc:snappydata:thrift://192.168.6.52[1527]</span><br><span class="line">* = 当前连接</span><br><span class="line">snappy&gt; show tables;</span><br><span class="line">TABLE_SCHEM          </span>|<span class="string">TABLE_NAME                    </span>|<span class="string">TABLE_TYPE  </span>|REMARKS</span><br><span class="line">--------------------------------------------------------------------------------------</span><br><span class="line">SYS                  |<span class="string">ASYNCEVENTLISTENERS           </span>|<span class="string">SYSTEM TABLE</span>|</span><br><span class="line">SYS                  |<span class="string">GATEWAYRECEIVERS              </span>|<span class="string">SYSTEM TABLE</span>|</span><br><span class="line">SYS                  |<span class="string">GATEWAYSENDERS                </span>|<span class="string">SYSTEM TABLE</span>|</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SnappyData®&lt;/p&gt;
    
    </summary>
    
      <category term="bigdata" scheme="http://github.com/zqhxuyuan/categories/bigdata/"/>
    
    
      <category term="spark" scheme="http://github.com/zqhxuyuan/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>CarbonData</title>
    <link href="http://github.com/zqhxuyuan/2017/07/13/CarbonData-In-Action/"/>
    <id>http://github.com/zqhxuyuan/2017/07/13/CarbonData-In-Action/</id>
    <published>2017-07-12T16:00:00.000Z</published>
    <updated>2017-09-13T07:33:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>Apache CarbonData</p>
<a id="more"></a>
<h2 id="Apache_CarbonData">Apache CarbonData</h2><p>版本：carbondata-1.1.0，spark-2.1.1，hadoop-2.6.0</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mvn -DskipTests -Pspark-<span class="number">2.1</span> -Dspark.version=<span class="number">2.1</span><span class="number">.1</span> -Dhadoop.version=<span class="number">2.6</span><span class="number">.0</span> clean package</span><br><span class="line"></span><br><span class="line">$ ll assembly/target/scala-<span class="number">2.11</span></span><br><span class="line"><span class="number">8.9</span>M  <span class="number">7</span> <span class="number">12</span> <span class="number">16</span>:<span class="number">14</span> carbondata_2<span class="number">.11</span>-<span class="number">1.1</span><span class="number">.1</span>-shade-hadoop2<span class="number">.6</span><span class="number">.0</span>.jar</span><br></pre></td></tr></table></figure>
<p>本地模式测试，创建CarbonSession的第一个参数为本地文件系统</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bin/spark-shell --jars ~/Github/carbondata-parent-<span class="number">1.1</span>.<span class="number">0</span>/assembly/target/scala-<span class="number">2.11</span>/carbondata_2.<span class="number">11</span>-<span class="number">1.1</span>.<span class="number">1</span>-shade-hadoop2.<span class="number">6.0</span><span class="class">.jar</span></span><br><span class="line"></span><br><span class="line">import org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.sql</span><span class="class">.SparkSession</span></span><br><span class="line">import org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.sql</span><span class="class">.CarbonSession</span>._</span><br><span class="line">val carbon = SparkSession.<span class="function"><span class="title">builder</span><span class="params">()</span></span>.<span class="function"><span class="title">config</span><span class="params">(sc.getConf)</span></span>.<span class="function"><span class="title">getOrCreateCarbonSession</span><span class="params">(<span class="string">"/tmp/carbon"</span>)</span></span></span><br><span class="line">carbon.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"CREATE TABLE IF NOT EXISTS test_table(id string,name string,city string,age Int)STORED BY 'carbondata'"</span>)</span></span></span><br><span class="line">carbon.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"LOAD DATA INPATH '/Users/zhengqh/Downloads/spark-2.1.1-bin-hadoop2.7/sample.csv' INTO TABLE test_table"</span>)</span></span></span><br><span class="line">carbon.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"SELECT city, avg(age), sum(age) FROM test_table GROUP BY city"</span>)</span></span>.<span class="function"><span class="title">show</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
<p>本地文件系统的文件夹包括Fact（表数据）、Metadata(表结构)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">➜  carbondata-parent-<span class="number">1.1</span><span class="number">.0</span> tree /tmp/carbon</span><br><span class="line">/tmp/carbon</span><br><span class="line">├── <span class="keyword">default</span></span><br><span class="line">│   └── test_table</span><br><span class="line">│       ├── Fact</span><br><span class="line">│       │   └── Part0</span><br><span class="line">│       │       └── Segment_0</span><br><span class="line">│       │           ├── <span class="number">0</span>_batchno0-<span class="number">0</span>-<span class="number">1499845043969.</span>carbonindex</span><br><span class="line">│       │           └── part-<span class="number">0</span>-<span class="number">0</span>_batchno0-<span class="number">0</span>-<span class="number">1499845043969.</span>carbondata</span><br><span class="line">│       └── Metadata</span><br><span class="line">│           ├── <span class="number">3</span>d8bd318-a620-<span class="number">419</span>b-b0fd-c276936375e2.dict</span><br><span class="line">│           ├── <span class="number">3</span>d8bd318-a620-<span class="number">419</span>b-b0fd-c276936375e2.dictmeta</span><br><span class="line">│           ├── <span class="number">3</span>d8bd318-a620-<span class="number">419</span>b-b0fd-c276936375e2_27.sortindex</span><br><span class="line">│           ├── f2f45986-<span class="number">6f</span>b6-<span class="number">42</span>af-b991-<span class="number">513</span>ee43aad01.dict</span><br><span class="line">│           ├── f2f45986-<span class="number">6f</span>b6-<span class="number">42</span>af-b991-<span class="number">513</span>ee43aad01.dictmeta</span><br><span class="line">│           ├── f2f45986-<span class="number">6f</span>b6-<span class="number">42</span>af-b991-<span class="number">513</span>ee43aad01_18.sortindex</span><br><span class="line">│           ├── f93ce55d-b82a-<span class="number">4</span>eca-<span class="number">9076</span>-e21dcd819218.dict</span><br><span class="line">│           ├── f93ce55d-b82a-<span class="number">4</span>eca-<span class="number">9076</span>-e21dcd819218.dictmeta</span><br><span class="line">│           ├── f93ce55d-b82a-<span class="number">4</span>eca-<span class="number">9076</span>-e21dcd819218_30.sortindex</span><br><span class="line">│           ├── schema</span><br><span class="line">│           └── tablestatus</span><br><span class="line">└── modifiedTime.mdt</span><br></pre></td></tr></table></figure>
<p>yarn模式按照官网部署<a href="http://carbondata.apache.org/installation-guide.html" target="_blank" rel="external">http://carbondata.apache.org/installation-guide.html</a></p>
<blockquote>
<p>注意：使用yarn模式，不需要把carbondata通过scp分发到各个节点，只需要在Driver端有就可以。另外，当前版本不依赖kettle</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cd spark-<span class="number">2.1</span><span class="number">.1</span>*</span><br><span class="line">mkdir carbonlib</span><br><span class="line">cp ~/carbondata_2<span class="number">.11</span>-<span class="number">1.1</span><span class="number">.1</span>-shade-hadoop2<span class="number">.6</span><span class="number">.0</span>.jar carbonlib</span><br><span class="line">cp ~/carbon.properties conf</span><br><span class="line"></span><br><span class="line">tar -zcvf carbondata.tar.gz carbonlib/</span><br><span class="line">mv carbondata.tar.gz carbonlib/</span><br><span class="line"></span><br><span class="line">$ vi conf/spark-defaults.conf</span><br><span class="line">spark.executor.extraJavaOptions -Dcarbon.properties.filepath=/usr/install/spark-<span class="number">2.1</span><span class="number">.1</span>-bin-<span class="number">2.6</span><span class="number">.0</span>-cdh5<span class="number">.9</span><span class="number">.0</span>/conf/carbon.properties</span><br><span class="line">spark.driver.extraJavaOptions   -Dcarbon.properties.filepath=/usr/install/spark-<span class="number">2.1</span><span class="number">.1</span>-bin-<span class="number">2.6</span><span class="number">.0</span>-cdh5<span class="number">.9</span><span class="number">.0</span>/conf/carbon.properties</span><br><span class="line">spark.driver.extraClassPath     /usr/install/spark-<span class="number">2.1</span><span class="number">.1</span>-bin-<span class="number">2.6</span><span class="number">.0</span>-cdh5<span class="number">.9</span><span class="number">.0</span>/carbonlib<span class="comment">/*</span><br><span class="line">spark.executor.extraClassPath   /usr/install/spark-2.1.1-bin-2.6.0-cdh5.9.0/carbonlib<span class="comment">/*</span><br><span class="line">spark.yarn.dist.files           /usr/install/spark-2.1.1-bin-2.6.0-cdh5.9.0/conf/carbon.properties</span><br><span class="line">spark.yarn.dist.archives        /usr/install/spark-2.1.1-bin-2.6.0-cdh5.9.0/carbonlib/carbondata.tar.gz</span></span></span><br></pre></td></tr></table></figure>
<p>启动spark-shell还需要加上<code>--jars</code>。注意创建CarbonSession时第一个参数必须加上hdfs前缀，否则会报错找不到文件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ bin/spark-shell <span class="comment">--jars /home/admin/carbondata_2.11-1.1.1-shade-hadoop2.6.0.jar</span></span><br><span class="line"></span><br><span class="line">sql("<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> test_table1(<span class="keyword">id</span> <span class="keyword">string</span>,<span class="keyword">name</span> <span class="keyword">string</span>,city <span class="keyword">string</span>,age <span class="built_in">Int</span>)<span class="string">")</span><br><span class="line">sql("</span><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> test_table1 <span class="keyword">values</span>(<span class="string">'1'</span>,<span class="string">'david'</span>,<span class="string">'shenzhen'</span>,<span class="number">31</span>)<span class="string">")</span><br><span class="line">sql("</span><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> test_table1 <span class="keyword">values</span>(<span class="string">'2'</span>,<span class="string">'eason'</span>,<span class="string">'shenzhen'</span>,<span class="number">20</span>)<span class="string">")</span><br><span class="line">sql("</span><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> test_table1 <span class="keyword">values</span>(<span class="string">'3'</span>,<span class="string">'jarry'</span>,<span class="string">'wuhan'</span>,<span class="number">35</span>)<span class="string">")</span><br><span class="line"></span><br><span class="line">import org.apache.spark.sql.SparkSession</span><br><span class="line">import org.apache.spark.sql.CarbonSession._</span><br><span class="line">val carbon = SparkSession.builder().config(sc.getConf).getOrCreateCarbonSession("</span>hdfs://tdhdfs/<span class="keyword">user</span>/tongdun/carbon<span class="string">","</span>/home/<span class="keyword">admin</span>/carbon<span class="string">")</span><br><span class="line"></span><br><span class="line">carbon.sql("</span><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> test_table2(<span class="keyword">id</span> <span class="keyword">string</span>,<span class="keyword">name</span> <span class="keyword">string</span>,city <span class="keyword">string</span>,age <span class="built_in">Int</span>)<span class="keyword">STORED</span> <span class="keyword">BY</span> <span class="string">'carbondata'</span><span class="string">")</span><br><span class="line">carbon.sql("</span><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_table2 <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> test_table1<span class="string">") // insert #1</span><br><span class="line">carbon.sql("</span><span class="keyword">select</span> * <span class="keyword">from</span> test_table2<span class="string">").show</span><br><span class="line">carbon.sql("</span><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_table2 <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> test_table1<span class="string">") // insert again</span><br><span class="line">carbon.sql("</span><span class="keyword">select</span> * <span class="keyword">from</span> test_table2<span class="string">").show</span><br><span class="line"></span><br><span class="line">carbon.sql("</span><span class="keyword">INSERT</span> overwrite <span class="keyword">table</span> test_table2 <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> test_table1<span class="string">") // overwrite</span></span></span><br></pre></td></tr></table></figure>
<p>carbondata运行在HDFS时，它的事实数据与元数据保存在HDFS上。</p>
<p><img src="http://img.blog.csdn.net/20170713222930582" alt="carbon"></p>
<p>将hdfs表数据导入到carbondata建立的表后，执行一些查询语句，观察ui。</p>
<blockquote>
<p>注意：导入数据时，carbondata分为两个步骤：全局字典（GlobalDictionary）和CarbonDataRDD。<br>其中全局字典会在Metadata下生产索引文件，CarbonDataRDD会在Fact下生成数据文件。</p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20170713222957886" alt="carbon1"></p>
<h3 id="CarbonData数据导入与查询">CarbonData数据导入与查询</h3><p>建立crosspartner carbondata表</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.spark.sql.SparkSession</span><br><span class="line">import org.apache.spark.sql.CarbonSession._</span><br><span class="line">val carbon = SparkSession.builder().config(sc.getConf).getOrCreateCarbonSession("hdfs://tdhdfs/user/tongdun/carbon","/home/admin/carbon")</span><br><span class="line"></span><br><span class="line">carbon.sql("<span class="operator"><span class="keyword">drop</span> <span class="keyword">table</span> cross_partner_carbon<span class="string">")</span><br><span class="line">carbon.sql("""</span><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> cross_partner_carbon(</span><br><span class="line">  partnerCode <span class="keyword">string</span>,</span><br><span class="line">  eventType <span class="keyword">string</span>,</span><br><span class="line">  idNumber <span class="keyword">string</span>,</span><br><span class="line">  accountMobile <span class="keyword">string</span>,</span><br><span class="line">  accountEmail <span class="keyword">string</span>,</span><br><span class="line">  accountPhone <span class="keyword">string</span>,</span><br><span class="line">  deviceId <span class="keyword">string</span>,</span><br><span class="line">  cardNumber <span class="keyword">string</span>,</span><br><span class="line">  contact1Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact2Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact3Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact4Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact5Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact1IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact2IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact3IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact4IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact5IdNumber <span class="keyword">string</span>,</span><br><span class="line">  sequenceId <span class="keyword">string</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">BY</span> <span class="string">'carbondata'</span></span><br><span class="line">TBLPROPERTIES (<span class="string">'DICTIONARY_EXCLUDE'</span>=<span class="string">'sequenceId'</span>)</span><br><span class="line"><span class="string">""")</span></span></span><br></pre></td></tr></table></figure>
<p>再生成carbondata表：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">carbon.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"insert into cross_partner_carbon select * from crosspartner"</span>)</span></span></span><br><span class="line"></span><br><span class="line">spark.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"select count(*) from cross2partner_dt"</span>)</span></span><span class="class">.show</span></span><br><span class="line">carbon.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"select count(*) from cross_partner_carbon_dm"</span>)</span></span><span class="class">.show</span></span><br><span class="line"></span><br><span class="line">spark.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"select * from cross2partner_dt"</span>)</span></span><span class="class">.show</span></span><br><span class="line">carbon.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"select * from cross_partner_carbon_dm"</span>)</span></span><span class="class">.show</span></span><br><span class="line"></span><br><span class="line">val idnumber=<span class="string">""</span></span><br><span class="line">spark.<span class="function"><span class="title">sql</span><span class="params">(s<span class="string">"select sequenceId from cross2partner_dt where partnerCode='007fenqi' and eventType='Loan' and idNumber='$idnumber'"</span>)</span></span><span class="class">.show</span></span><br><span class="line">carbon.<span class="function"><span class="title">sql</span><span class="params">(s<span class="string">"select sequenceId from cross_partner_carbon_dm where partnerCode='007fenqi' and eventType='Loan' and idNumber='$idnumber'"</span>)</span></span>.show</span><br></pre></td></tr></table></figure>
<p>比较crosspartner_hdfs的过滤与carbondata的查询</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">carbon.sql("<span class="operator"><span class="keyword">select</span> sequenceId <span class="keyword">from</span> cross_partner_carbon <span class="keyword">where</span> partnerCode=<span class="string">'qufenqi'</span> <span class="keyword">and</span> eventType=<span class="string">'Loan'</span> <span class="keyword">and</span> idNumber=<span class="string">''</span><span class="string">").show</span></span></span><br></pre></td></tr></table></figure>
<h3 id="实验结果">实验结果</h3><p>创建carbondata表时，如果默认所有字段都加上索引，导入数据时Executor会报错OOM。<br>如果去掉所有字段的索引，导入数据很快，但是查询速度就满了。</p>
<p>比较磁盘空间的大小，没有索引下，Parquet和Carbondata差不多</p>
<p><img src="http://img.blog.csdn.net/20170721100001741" alt="1"></p>
<h3 id="问题">问题</h3><h4 id="1-_Hive表与CarbonData表">1. Hive表与CarbonData表</h4><p>activity事件数据,只取借贷和放贷的数据，并保存成临时表crosspartner_hdfs</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">spark.sql("""<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> crosspartner_hdfs(</span><br><span class="line">  partnerCode <span class="keyword">string</span>,</span><br><span class="line">  eventType <span class="keyword">string</span>,</span><br><span class="line">  idNumber <span class="keyword">string</span>,</span><br><span class="line">  accountMobile <span class="keyword">string</span>,</span><br><span class="line">  accountEmail <span class="keyword">string</span>,</span><br><span class="line">  accountPhone <span class="keyword">string</span>,</span><br><span class="line">  deviceId <span class="keyword">string</span>,</span><br><span class="line">  cardNumber <span class="keyword">string</span>,</span><br><span class="line">  contact1Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact2Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact3Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact4Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact5Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact1IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact2IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact3IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact4IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact5IdNumber <span class="keyword">string</span>,</span><br><span class="line">  sequenceId <span class="keyword">string</span></span><br><span class="line">) partitioned <span class="keyword">by</span>(ds <span class="keyword">string</span>)</span><br><span class="line"><span class="string">""")</span><br><span class="line"></span><br><span class="line">spark.sql("""</span><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> crosspartner_hdfs <span class="keyword">partition</span>(ds=<span class="string">'201706'</span>)</span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">  activity_map.partnerCode <span class="keyword">as</span> partnerCode,</span><br><span class="line">  activity_map.eventType <span class="keyword">as</span> eventType,</span><br><span class="line">  activity_map.idNumber <span class="keyword">as</span> idNumber,</span><br><span class="line">  activity_map.accountMobile <span class="keyword">as</span> accountMobile,</span><br><span class="line">  activity_map.accountEmail <span class="keyword">as</span> accountEmail,</span><br><span class="line">  activity_map.accountPhone <span class="keyword">as</span> accountPhone,</span><br><span class="line">  activity_map.deviceId <span class="keyword">as</span> deviceId,</span><br><span class="line">  activity_map.cardNumber <span class="keyword">as</span> cardNumber,</span><br><span class="line">  activity_map.contact1Mobile <span class="keyword">as</span> contact1Mobile,</span><br><span class="line">  activity_map.contact2Mobile <span class="keyword">as</span> contact2Mobile,</span><br><span class="line">  activity_map.contact3Mobile <span class="keyword">as</span> contact3Mobile,</span><br><span class="line">  activity_map.contact4Mobile <span class="keyword">as</span> contact4Mobile,</span><br><span class="line">  activity_map.contact5Mobile <span class="keyword">as</span> contact5Mobile,</span><br><span class="line">  activity_map.contact1IdNumber <span class="keyword">as</span> contact1IdNumber,</span><br><span class="line">  activity_map.contact2IdNumber <span class="keyword">as</span> contact2IdNumber,</span><br><span class="line">  activity_map.contact3IdNumber <span class="keyword">as</span> contact3IdNumber,</span><br><span class="line">  activity_map.contact4IdNumber <span class="keyword">as</span> contact4IdNumber,</span><br><span class="line">  activity_map.contact5IdNumber <span class="keyword">as</span> contact5IdNumber,</span><br><span class="line">  activity_map.sequenceId <span class="keyword">as</span> sequenceId</span><br><span class="line"><span class="keyword">from</span> activity </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>=<span class="number">2017</span> <span class="keyword">and</span> <span class="keyword">month</span>=<span class="number">6</span></span><br><span class="line"><span class="keyword">and</span> activity_map.eventType <span class="keyword">in</span>(<span class="string">'Loan'</span>,<span class="string">'Lending'</span>)</span><br><span class="line"><span class="string">""")</span></span></span><br></pre></td></tr></table></figure>
<p>上面如果建表时没有指定存储为parquet,最后是part-xxx。<br>而且即使指定了parquet,insert sql也不能指定分区数量。  </p>
<p><strong>下面改用parquet文件夹加上手动分区的形式:cross_partner_hdfs</strong>。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.<span class="type">SimpleDateFormat</span></span><br><span class="line"><span class="keyword">import</span> java.util.&#123;<span class="type">Calendar</span>,<span class="type">Date</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">year</span>(</span>ymd: <span class="type">String</span>) = ymd.substring(<span class="number">0</span>,<span class="number">4</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">month</span>(</span>ymd: <span class="type">String</span>) = &#123;</span><br><span class="line">  <span class="keyword">var</span> month=ymd.substring(<span class="number">4</span>,<span class="number">6</span>)</span><br><span class="line">  <span class="keyword">if</span>(month.startsWith(<span class="string">"0"</span>)) month=ymd.substring(<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">  month</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">day</span>(</span>ymd: <span class="type">String</span>) = &#123;</span><br><span class="line">  <span class="keyword">var</span> d=ymd.substring(<span class="number">6</span>,<span class="number">8</span>)</span><br><span class="line">  <span class="keyword">if</span>(d.startsWith(<span class="string">"0"</span>)) d=ymd.substring(<span class="number">7</span>,<span class="number">8</span>)</span><br><span class="line">  d</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写成parquet文件夹</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genCrossData</span>(</span>beg: <span class="type">String</span>, end: <span class="type">String</span>) = &#123;</span><br><span class="line">    <span class="keyword">var</span> cal = <span class="type">Calendar</span>.getInstance()</span><br><span class="line">    <span class="keyword">var</span> datef=<span class="keyword">new</span> <span class="type">SimpleDateFormat</span>(<span class="string">"yyyyMMdd"</span>)</span><br><span class="line">    <span class="keyword">var</span> beginTime=datef.parse(beg)</span><br><span class="line">    <span class="keyword">var</span> endTime=datef.parse(end)</span><br><span class="line">    <span class="keyword">while</span>(beginTime.compareTo(endTime)&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">      cal.setTime(beginTime);</span><br><span class="line">      <span class="keyword">var</span> ymd=datef.format(beginTime)</span><br><span class="line">      println(ymd)</span><br><span class="line">      <span class="keyword">var</span> y=year(ymd)</span><br><span class="line">      <span class="keyword">var</span> m=month(ymd)</span><br><span class="line">      <span class="keyword">var</span> d=day(ymd)</span><br><span class="line">      spark.sql(s<span class="string">"""</span><br><span class="line">        select </span><br><span class="line">          activity_map.partnerCode as partnerCode,</span><br><span class="line">          activity_map.eventType as eventType,</span><br><span class="line">          activity_map.idNumber as idNumber,</span><br><span class="line">          activity_map.accountMobile as accountMobile,</span><br><span class="line">          activity_map.accountEmail as accountEmail,</span><br><span class="line">          activity_map.accountPhone as accountPhone,</span><br><span class="line">          activity_map.deviceId as deviceId,</span><br><span class="line">          activity_map.cardNumber as cardNumber,</span><br><span class="line">          activity_map.contact1Mobile as contact1Mobile,</span><br><span class="line">          activity_map.contact2Mobile as contact2Mobile,</span><br><span class="line">          activity_map.contact3Mobile as contact3Mobile,</span><br><span class="line">          activity_map.contact4Mobile as contact4Mobile,</span><br><span class="line">          activity_map.contact5Mobile as contact5Mobile,</span><br><span class="line">          activity_map.contact1IdNumber as contact1IdNumber,</span><br><span class="line">          activity_map.contact2IdNumber as contact2IdNumber,</span><br><span class="line">          activity_map.contact3IdNumber as contact3IdNumber,</span><br><span class="line">          activity_map.contact4IdNumber as contact4IdNumber,</span><br><span class="line">          activity_map.contact5IdNumber as contact5IdNumber,</span><br><span class="line">          activity_map.sequenceId as sequenceId</span><br><span class="line">        from activity </span><br><span class="line">        where year=$y and month=$m and day=$d </span><br><span class="line">        and activity_map.eventType in('Loan','Lending')</span><br><span class="line">        """</span>).repartition(<span class="number">1</span>).write.mode(<span class="string">"overwrite"</span>).parquet(s<span class="string">"/user/hive/warehouse/cross_partner_hdfs/ds=$ymd"</span>)</span><br><span class="line">      cal.add(<span class="type">Calendar</span>.<span class="type">DATE</span>,<span class="number">1</span>);</span><br><span class="line">      beginTime=cal.getTime();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">genCrossData(<span class="string">"20170101"</span>,<span class="string">"20170630"</span>)</span><br><span class="line"></span><br><span class="line">genCrossData(<span class="string">"20170621"</span>,<span class="string">"20170630"</span>)</span><br></pre></td></tr></table></figure>
<p>查询parquet，建立临时表，使用SparkSQL查询</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">val df=spark<span class="class">.read</span><span class="class">.parquet</span>(<span class="string">"/user/hive/warehouse/cross_partner_hdfs/*"</span>)</span><br><span class="line">df.<span class="function"><span class="title">createOrReplaceTempView</span><span class="params">(<span class="string">"cross_partner_hdfs"</span>)</span></span></span><br><span class="line"></span><br><span class="line">spark.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"select * from cross_partner_hdfs"</span>)</span></span><span class="class">.show</span></span><br><span class="line"></span><br><span class="line">spark.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"select sequenceId from cross_partner_hdfs where partnerCode='qufenqi' and eventType='Loan' and idNumber=''"</span>)</span></span>.show</span><br></pre></td></tr></table></figure>
<p>使用临时表的数据插入到carbondata table</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">val df=spark<span class="class">.read</span><span class="class">.parquet</span>(<span class="string">"/user/hive/warehouse/cross_partner_hdfs/*"</span>)</span><br><span class="line">df.<span class="function"><span class="title">createOrReplaceTempView</span><span class="params">(<span class="string">"cross_partner_hdfs"</span>)</span></span></span><br><span class="line"></span><br><span class="line">carbon.<span class="function"><span class="title">sql</span><span class="params">(<span class="string">"insert into cross_partner_carbon select * from cross_partner_hdfs"</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>carbondata不认识用df注册的临时表：</p>
<p><img src="http://img.blog.csdn.net/20170714085833872" alt="10"></p>
<p>创建hive表时指定parquet格式，并从parquet文件夹的数据直接生成表</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">spark.sql("""<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> crosspartner(</span><br><span class="line">  partnerCode <span class="keyword">string</span>,</span><br><span class="line">  eventType <span class="keyword">string</span>,</span><br><span class="line">  idNumber <span class="keyword">string</span>,</span><br><span class="line">  accountMobile <span class="keyword">string</span>,</span><br><span class="line">  accountEmail <span class="keyword">string</span>,</span><br><span class="line">  accountPhone <span class="keyword">string</span>,</span><br><span class="line">  deviceId <span class="keyword">string</span>,</span><br><span class="line">  cardNumber <span class="keyword">string</span>,</span><br><span class="line">  contact1Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact2Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact3Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact4Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact5Mobile <span class="keyword">string</span>,</span><br><span class="line">  contact1IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact2IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact3IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact4IdNumber <span class="keyword">string</span>,</span><br><span class="line">  contact5IdNumber <span class="keyword">string</span>,</span><br><span class="line">  sequenceId <span class="keyword">string</span></span><br><span class="line">) partitioned <span class="keyword">by</span>(ds <span class="keyword">string</span>) <span class="keyword">stored</span> <span class="keyword">as</span> parquet</span><br><span class="line"><span class="string">""")</span><br><span class="line"></span><br><span class="line">import java.text.SimpleDateFormat</span><br><span class="line">import java.util.&#123;Calendar,Date&#125;</span><br><span class="line">def genCrossData(beg: String, end: String) = &#123;</span><br><span class="line">    var cal = Calendar.getInstance()</span><br><span class="line">    var datef=new SimpleDateFormat("</span>yyyyMMdd<span class="string">")</span><br><span class="line">    var beginTime=datef.parse(beg)</span><br><span class="line">    var endTime=datef.parse(end)</span><br><span class="line">    while(beginTime.compareTo(endTime)&lt;=0)&#123;</span><br><span class="line">      cal.setTime(beginTime);</span><br><span class="line">      var ymd=datef.format(beginTime)</span><br><span class="line">      var df = spark.read.parquet(s"</span>/<span class="keyword">user</span>/hive/warehouse/cross_partner_hdfs/ds=$ymd<span class="string">")</span><br><span class="line">      df.repartition(1).write.mode("</span>overwrite<span class="string">").parquet(s"</span>/<span class="keyword">user</span>/hive/warehouse/crosspartner/ds=$ymd<span class="string">")</span><br><span class="line">      spark.sql(s"</span><span class="keyword">alter</span> <span class="keyword">table</span> crosspartner <span class="keyword">add</span> <span class="keyword">partition</span>(ds=<span class="string">'$ymd'</span>)<span class="string">")</span><br><span class="line">      cal.add(Calendar.DATE,1);</span><br><span class="line">      beginTime=cal.getTime();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">genCrossData("</span><span class="number">20170101</span><span class="string">","</span><span class="number">20170630</span><span class="string">")</span></span></span><br></pre></td></tr></table></figure>
<p>或者直接用parquet文件创建外部表：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">spark.sql(<span class="string">"""</span><br><span class="line">create external table cross2partner_dt(</span><br><span class="line">  partnerCode string,</span><br><span class="line">  eventType string,</span><br><span class="line">  idNumber string,</span><br><span class="line">  accountMobile string,</span><br><span class="line">  accountEmail string,</span><br><span class="line">  accountPhone string,</span><br><span class="line">  deviceId string,</span><br><span class="line">  cardNumber string,</span><br><span class="line">  contact1Mobile string,</span><br><span class="line">  contact2Mobile string,</span><br><span class="line">  contact3Mobile string,</span><br><span class="line">  contact4Mobile string,</span><br><span class="line">  contact5Mobile string,</span><br><span class="line">  contact1IdNumber string,</span><br><span class="line">  contact2IdNumber string,</span><br><span class="line">  contact3IdNumber string,</span><br><span class="line">  contact4IdNumber string,</span><br><span class="line">  contact5IdNumber string,</span><br><span class="line">  sequenceId string    </span><br><span class="line">) </span><br><span class="line">partitioned by (ds string)</span><br><span class="line">stored as parquet</span><br><span class="line">location '/user/hive/warehouse/cross_partner_hdfs'</span><br><span class="line">"""</span>)</span><br><span class="line">spark.sql(s<span class="string">"alter table cross2partner_dt add partition(ds='20170101')"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.<span class="type">SimpleDateFormat</span></span><br><span class="line"><span class="keyword">import</span> java.util.&#123;<span class="type">Calendar</span>,<span class="type">Date</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genCrossData</span>(</span>beg: <span class="type">String</span>, end: <span class="type">String</span>) = &#123;</span><br><span class="line">    <span class="keyword">var</span> cal = <span class="type">Calendar</span>.getInstance()</span><br><span class="line">    <span class="keyword">var</span> datef=<span class="keyword">new</span> <span class="type">SimpleDateFormat</span>(<span class="string">"yyyyMMdd"</span>)</span><br><span class="line">    <span class="keyword">var</span> beginTime=datef.parse(beg)</span><br><span class="line">    <span class="keyword">var</span> endTime=datef.parse(end)</span><br><span class="line">    <span class="keyword">while</span>(beginTime.compareTo(endTime)&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">      cal.setTime(beginTime);</span><br><span class="line">      <span class="keyword">var</span> ymd=datef.format(beginTime)</span><br><span class="line">      spark.sql(s<span class="string">"alter table cross2partner_dt add partition(ds='$ymd')"</span>)</span><br><span class="line">      cal.add(<span class="type">Calendar</span>.<span class="type">DATE</span>,<span class="number">1</span>);</span><br><span class="line">      beginTime=cal.getTime();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">genCrossData(<span class="string">"20170102"</span>,<span class="string">"20170630"</span>)</span><br></pre></td></tr></table></figure>
<p>一次性将所有数据插入carbondata太慢了</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">carbon.sql(s"<span class="operator"><span class="keyword">insert</span> <span class="keyword">into</span> cross_partner_carbon <span class="keyword">select</span> * <span class="keyword">from</span> crosspartner <span class="keyword">where</span> ds <span class="keyword">like</span> <span class="string">'$ymd%'</span><span class="string">")</span></span></span><br></pre></td></tr></table></figure>
<p><strong>改用按月/天插入carbondata表</strong></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.<span class="type">SimpleDateFormat</span></span><br><span class="line"><span class="keyword">import</span> java.util.&#123;<span class="type">Calendar</span>,<span class="type">Date</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genCrossCarbonData</span>(</span>beg: <span class="type">String</span>, end: <span class="type">String</span>) = &#123;</span><br><span class="line">    <span class="keyword">var</span> cal = <span class="type">Calendar</span>.getInstance()</span><br><span class="line">    <span class="keyword">var</span> datef=<span class="keyword">new</span> <span class="type">SimpleDateFormat</span>(<span class="string">"yyyyMM"</span>)</span><br><span class="line">    <span class="keyword">var</span> beginTime=datef.parse(beg)</span><br><span class="line">    <span class="keyword">var</span> endTime=datef.parse(end)</span><br><span class="line">    <span class="keyword">while</span>(beginTime.compareTo(endTime)&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">      cal.setTime(beginTime);</span><br><span class="line">      <span class="keyword">var</span> ymd=datef.format(beginTime)</span><br><span class="line">      println(ymd) </span><br><span class="line">      carbon.sql(s<span class="string">"insert into cross_partner_carbon select * from cross2partner_dt where ds like '$ymd%'"</span>)</span><br><span class="line">      cal.add(<span class="type">Calendar</span>.<span class="type">DATE</span>,<span class="number">1</span>);</span><br><span class="line">      beginTime=cal.getTime();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">genCrossCarbonData(<span class="string">"201701"</span>,<span class="string">"201706"</span>)</span><br></pre></td></tr></table></figure>
<p>导入数据时还是会报错：</p>
<p>增加内存：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bin/spark/shell \</span><br><span class="line">--conf spark<span class="class">.executor</span><span class="class">.instances</span>=<span class="number">15</span> \</span><br><span class="line">--conf spark<span class="class">.executor</span><span class="class">.cores</span>=<span class="number">2</span> \</span><br><span class="line">--conf spark<span class="class">.executor</span><span class="class">.memory</span>=<span class="number">8</span>g \</span><br><span class="line">--conf spark<span class="class">.driver</span><span class="class">.memory</span>=<span class="number">8</span>g \</span><br></pre></td></tr></table></figure>
<h4 id="2-_carbondata其他设置">2. carbondata其他设置</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">carbon.sql("""<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> crosspartner1(</span><br><span class="line">...</span><br><span class="line"><span class="keyword">STORED</span> <span class="keyword">BY</span> <span class="string">'carbondata'</span></span><br><span class="line">TBLPROPERTIES (<span class="string">'DICTIONARY_EXCLUDE'</span>=<span class="string">'sequenceId,idNumber,accountMobile,accountEmail,accountPhone,deviceId,cardNumber,contact1Mobile,contact2Mobile,contact3Mobile,contact4Mobile,contact5Mobile,contact1IdNumber,contact2IdNumber,contact3IdNumber,contact4IdNumber,contact5IdNumber'</span>)</span><br><span class="line"><span class="string">""")</span><br><span class="line"></span><br><span class="line">carbon.sql("</span><span class="keyword">insert</span> <span class="keyword">into</span> crosspartner1 <span class="keyword">select</span> * <span class="keyword">from</span> cross_partner_hdfs<span class="string">")</span></span></span><br></pre></td></tr></table></figure>
<h4 id="3-_carbon_thrift_server">3. carbon thrift server</h4><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="stylus">bin/spark-submit \</span><br><span class="line">--conf spark<span class="class">.sql</span><span class="class">.hive</span><span class="class">.thriftServer</span><span class="class">.singleSession</span>=true \</span><br><span class="line">--hiveconf hive<span class="class">.server2</span><span class="class">.thrift</span><span class="class">.port</span>=<span class="number">10002</span> \</span><br><span class="line">--hiveconf hive<span class="class">.server2</span><span class="class">.thrift</span><span class="class">.bind</span><span class="class">.host</span>=<span class="string">"192.168.39.25"</span> \</span><br><span class="line">--class org<span class="class">.apache</span><span class="class">.carbondata</span><span class="class">.spark</span><span class="class">.thriftserver</span><span class="class">.CarbonThriftServer</span> \</span><br><span class="line">carbonlib/carbondata_2.<span class="number">11</span>-<span class="number">1.1</span>.<span class="number">1</span>-shade-hadoop2.<span class="number">6.0</span><span class="class">.jar</span> \</span><br><span class="line">hdfs:<span class="comment">//tdhdfs/user/tongdun/carbon</span></span><br><span class="line">hdfs:<span class="comment">//tdhdfs/user/hive/warehouse/carbon.store</span></span><br><span class="line">hdfs:<span class="comment">//tdhdfs/user/tongdun/carbondata/CarbonStore</span></span></span><br></pre></td></tr></table></figure>
<h4 id="4-_spark-2-2-0">4. spark-2.2.0</h4><p>carbondata-1.1.1目前不支持spark2.2。如果加上profile，更改spark版本为2.2.0，编译不通过</p>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">$ mvn -DskipTests -Pspark-2.2 -Dspark.version=2.2.0 -Dhadoop.version=2.6.0 clean package</span><br><span class="line"></span><br><span class="line"><span class="comment">[WARNING]</span> /Users/zhengqh/Github/carbondata-parent-1.1.1/integration/spark-common/src/main/scala/org/apache/carbondata/spark/rdd/UpdateCoalescedRDD.scala:23: warning: imported `RDD' <span class="keyword">is</span> permanently hidden by definition <span class="keyword">of</span> class RDD in package rdd</span><br><span class="line"><span class="comment">[INFO]</span> import org.apache.spark.rdd.&#123;CoalescedRDDPartition, DataLoadPartitionCoalescer, RDD&#125;</span><br><span class="line"><span class="comment">[INFO]</span>                                                                                 ^</span><br><span class="line"><span class="comment">[WARNING]</span> /Users/zhengqh/Github/carbondata-parent-1.1.1/integration/spark-common/src/main/scala/org/apache/carbondata/spark/util/CarbonScalaUtil.scala:125: warning: non-variable type argument Any in type pattern scala.collection.Map<span class="comment">[Any,Any]</span> <span class="keyword">is</span> unchecked since it <span class="keyword">is</span> eliminated by erasure</span><br><span class="line"><span class="comment">[INFO]</span>         case m: scala.collection.Map<span class="comment">[Any, Any]</span> =&gt;</span><br><span class="line"><span class="comment">[INFO]</span>                                  ^</span><br><span class="line"><span class="comment">[ERROR]</span> /Users/zhengqh/Github/carbondata-parent-1.1.1/integration/spark-common/src/main/scala/org/apache/spark/sql/optimizer/CarbonDecoderOptimizerHelper.scala:87: error: value child <span class="keyword">is</span> not a member <span class="keyword">of</span> org.apache.spark.sql.catalyst.plans.logical.InsertIntoTable</span><br><span class="line"><span class="comment">[INFO]</span>       case i: InsertIntoTable =&gt; process(i.child, nodeList)</span><br><span class="line"><span class="comment">[INFO]</span>                                            ^</span><br><span class="line"><span class="comment">[WARNING]</span> 11 warnings found</span><br><span class="line"><span class="comment">[ERROR]</span> one error found</span><br><span class="line"><span class="comment">[INFO]</span> ------------------------------------------------------------------------</span><br><span class="line"><span class="comment">[INFO]</span> Reactor Summary:</span><br><span class="line"><span class="comment">[INFO]</span></span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Parent ........................ SUCCESS <span class="comment">[  5.140 s]</span></span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Common ........................ SUCCESS <span class="comment">[ 10.114 s]</span></span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Core .......................... SUCCESS <span class="comment">[ 29.232 s]</span></span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Processing .................... SUCCESS <span class="comment">[  9.828 s]</span></span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Hadoop ........................ SUCCESS <span class="comment">[  5.719 s]</span></span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Spark Common .................. FAILURE <span class="comment">[01:10 min]</span></span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Spark Common Test ............. SKIPPED</span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Assembly ...................... SKIPPED</span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Spark2 ........................ SKIPPED</span><br><span class="line"><span class="comment">[INFO]</span> Apache CarbonData :: Spark2 Examples ............... SKIPPED</span><br><span class="line"><span class="comment">[INFO]</span> ------------------------------------------------------------------------</span><br><span class="line"><span class="comment">[INFO]</span> BUILD FAILURE</span><br><span class="line"><span class="comment">[INFO]</span> ------------------------------------------------------------------------</span><br><span class="line"><span class="comment">[INFO]</span> Total time: 02:10 min</span><br><span class="line"><span class="comment">[INFO]</span> Finished at: 2017-08-03T14:39:55+08:00</span><br><span class="line"><span class="comment">[INFO]</span> Final Memory: 72M/786M</span><br><span class="line"><span class="comment">[INFO]</span> ------------------------------------------------------------------------</span><br><span class="line"><span class="comment">[ERROR]</span> Failed to execute goal org.scala-tools:maven-scala-plugin:2.15.2:compile (default) on project carbondata-spark-common: wrap: org.apache.commons.exec.ExecuteException: Process exited with an error: 1(Exit value: 1) -&gt; <span class="comment">[Help 1]</span></span><br><span class="line"><span class="comment">[ERROR]</span></span><br><span class="line"><span class="comment">[ERROR]</span> To see the full stack trace <span class="keyword">of</span> the errors, re-run Maven with the -e switch.</span><br><span class="line"><span class="comment">[ERROR]</span> Re-run Maven using the -X switch to enable full debug logging.</span><br><span class="line"><span class="comment">[ERROR]</span></span><br><span class="line"><span class="comment">[ERROR]</span> For more information about the errors and possible solutions, please read the following articles:</span><br><span class="line"><span class="comment">[ERROR]</span> <span class="comment">[Help 1]</span> http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException</span><br><span class="line"><span class="comment">[ERROR]</span></span><br><span class="line"><span class="comment">[ERROR]</span> After correcting the problems, you can resume the build with the command</span><br><span class="line"><span class="comment">[ERROR]</span>   mvn &lt;goals&gt; -rf :carbondata-spark-common</span><br></pre></td></tr></table></figure>
<p>如果使用spark2.1.1编译的二进制包，放到spark2.2.0下，也会报错：</p>
<p><img src="http://img.blog.csdn.net/20170803143703134" alt="car"></p>
<p>spark-1.6.2</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertIntoTable</span>(</span></span><br><span class="line">    table: <span class="type">LogicalPlan</span>,</span><br><span class="line">    partition: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">Option</span>[<span class="type">String</span>]],</span><br><span class="line">    child: <span class="type">LogicalPlan</span>,</span><br><span class="line">    overwrite: <span class="type">Boolean</span>,</span><br><span class="line">    ifNotExists: <span class="type">Boolean</span>)</span><br><span class="line">  <span class="keyword">extends</span> <span class="type">LogicalPlan</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">children</span>:</span> <span class="type">Seq</span>[<span class="type">LogicalPlan</span>] = child :: <span class="type">Nil</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">output</span>:</span> <span class="type">Seq</span>[<span class="type">Attribute</span>] = <span class="type">Seq</span>.empty</span><br><span class="line"></span><br><span class="line">  assert(overwrite || !ifNotExists)</span><br><span class="line">  <span class="keyword">override</span> <span class="keyword">lazy</span> <span class="keyword">val</span> resolved: <span class="type">Boolean</span> = childrenResolved &amp;&amp; child.output.zip(table.output).forall &#123;</span><br><span class="line">    <span class="keyword">case</span> (childAttr, tableAttr) =&gt;</span><br><span class="line">      <span class="type">DataType</span>.equalsIgnoreCompatibleNullability(childAttr.dataType, tableAttr.dataType)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>spark-2.2.0</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertIntoTable</span>(</span></span><br><span class="line">    table: <span class="type">LogicalPlan</span>,</span><br><span class="line">    partition: <span class="type">Map</span>[<span class="type">String</span>, <span class="type">Option</span>[<span class="type">String</span>]],</span><br><span class="line">    query: <span class="type">LogicalPlan</span>,</span><br><span class="line">    overwrite: <span class="type">Boolean</span>,</span><br><span class="line">    ifPartitionNotExists: <span class="type">Boolean</span>)</span><br><span class="line">  <span class="keyword">extends</span> <span class="type">LogicalPlan</span> &#123;</span><br><span class="line">  <span class="comment">// We don't want `table` in children as sometimes we don't want to transform it.</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">children</span>:</span> <span class="type">Seq</span>[<span class="type">LogicalPlan</span>] = query :: <span class="type">Nil</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">output</span>:</span> <span class="type">Seq</span>[<span class="type">Attribute</span>] = <span class="type">Seq</span>.empty</span><br><span class="line">  <span class="keyword">override</span> <span class="keyword">lazy</span> <span class="keyword">val</span> resolved: <span class="type">Boolean</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更改为i.query后，重新编译：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[INFO] Apache CarbonData :: Assembly ...................... FAILURE [  2.180 s]</span><br><span class="line">[INFO] Apache CarbonData :: Spark2 ........................ SKIPPED</span><br><span class="line">[INFO] Apache CarbonData :: Spark2 Examples ............... SKIPPED</span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[INFO] BUILD FAILURE</span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[INFO] Total time: 01:57 min</span><br><span class="line">[INFO] Finished at: 2017-08-03T15:33:59+08:00</span><br><span class="line">[INFO] Final Memory: 83M/728M</span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[ERROR] Failed to <span class="operator"><span class="keyword">execute</span> goal <span class="keyword">on</span> <span class="keyword">project</span> carbondata-<span class="keyword">assembly</span>: Could <span class="keyword">not</span> resolve dependencies <span class="keyword">for</span> <span class="keyword">project</span> org.apache.carbondata:carbondata-<span class="keyword">assembly</span>:pom:<span class="number">1.1</span><span class="number">.1</span>: Could <span class="keyword">not</span> find artifact org.apache.carbondata:carbondata-spark:jar:<span class="number">1.1</span><span class="number">.1</span> <span class="keyword">in</span> central (<span class="keyword">http</span>://repo1.maven.org/maven2) -&gt; [<span class="keyword">Help</span> <span class="number">1</span>]</span><br><span class="line">[<span class="keyword">ERROR</span>]</span><br><span class="line">[<span class="keyword">ERROR</span>] <span class="keyword">To</span> see the <span class="keyword">full</span> stack <span class="keyword">trace</span> <span class="keyword">of</span> the <span class="keyword">errors</span>, re-run Maven <span class="keyword">with</span> the -<span class="keyword">e</span> <span class="keyword">switch</span>.</span><br><span class="line">[<span class="keyword">ERROR</span>] Re-run Maven <span class="keyword">using</span> the -X <span class="keyword">switch</span> <span class="keyword">to</span> <span class="keyword">enable</span> <span class="keyword">full</span> debug <span class="keyword">logging</span>.</span><br><span class="line">[<span class="keyword">ERROR</span>]</span><br><span class="line">[<span class="keyword">ERROR</span>] <span class="keyword">For</span> more information about the <span class="keyword">errors</span> <span class="keyword">and</span> possible solutions, please <span class="keyword">read</span> the <span class="keyword">following</span> articles:</span><br><span class="line">[<span class="keyword">ERROR</span>] [<span class="keyword">Help</span> <span class="number">1</span>] <span class="keyword">http</span>://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException</span><br><span class="line">[<span class="keyword">ERROR</span>]</span><br><span class="line">[<span class="keyword">ERROR</span>] <span class="keyword">After</span> correcting the problems, you can <span class="keyword">resume</span> the <span class="keyword">build</span> <span class="keyword">with</span> the command</span><br><span class="line">[<span class="keyword">ERROR</span>]   mvn &lt;goals&gt; -rf :carbondata-<span class="keyword">assembly</span></span></span><br></pre></td></tr></table></figure>
<p>默认1.6版本的assembly无法下载1.1.1的pom,将默认版本改为(添加)2.2.0</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">profile</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">id</span>&gt;</span>spark-2.2<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="title">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">activation</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.carbondata<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>carbondata-spark2<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">version</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">profile</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Apache CarbonData&lt;/p&gt;
    
    </summary>
    
      <category term="bigdata" scheme="http://github.com/zqhxuyuan/categories/bigdata/"/>
    
    
      <category term="spark" scheme="http://github.com/zqhxuyuan/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>Deep into Apache Gearpump</title>
    <link href="http://github.com/zqhxuyuan/2017/06/25/2017-06-24-Gearpump/"/>
    <id>http://github.com/zqhxuyuan/2017/06/25/2017-06-24-Gearpump/</id>
    <published>2017-06-24T16:00:00.000Z</published>
    <updated>2017-06-25T15:24:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>Deep into Apache Gearpump<br><a id="more"></a></p>
<p><strong>Prefix</strong>: I’ve heard Gearpump nearly one or two years ago, but never take a deep look inside. Until recently I’m almost done writing my chinese book about kafka internal implimentation, and decide to add some kafka relation opensouce system to my book’s appendix, such as spark streaming,storm,flink, and gearpump! So I finaly have a chance to deep into Gearpump.</p>
<h2 id="Introduce">Introduce</h2><p>According to offical documentation: “Gearpump is a 100% Akka based platform. We model big data streaming within the Akka actor hierarchy”. Below It’s Gearpump Actor Hierarchy architecture. PS: If you don’t know Actor right now, It’s fine, just think that’s another RPC layer or message transformer.</p>
<p><img src="http://gearpump.apache.org/releases/latest/img/actor_hierarchy.png" alt="geararch"></p>
<p>Everything in the diagram is an actor; they fall into two categories, Cluster Actors and Application Actors.</p>
<p><strong>Cluster Actors</strong></p>
<p><em>Worker</em>: Maps to a physical worker machine. It is responsible for <span style="border-bottom:1px dashed red;">managing resources</span> and report metrics on that machine.</p>
<p><em>Master</em>: Heart of the cluster, which <span style="border-bottom:1px dashed red;">manages workers, resources, and applications</span>. The main function is delegated to three child actors, App Manager, Worker Manager, and Resource Scheduler.</p>
<p><strong>Application Actors</strong></p>
<p><em>AppMaster</em>: Responsible to <span style="border-bottom:1px dashed red;">schedule the tasks to workers</span> and manage the state of the application. Different applications have different AppMaster instances and are isolated.</p>
<p><em>Executor</em>: Child of AppMaster, represents a JVM process. Its job is to <span style="border-bottom:1px dashed red;">manage the life cycle of tasks</span> and recover the tasks in case of failure.</p>
<p><em>Task</em>: Child of Executor, does the real job. Every task actor has a global unique address. One task actor can send data to any other task actors. This gives us great flexibility of how the computation DAG is distributed.</p>
<blockquote>
<p>All actors in the graph are weaved together with actor supervision, and actor watching and every error is handled properly via supervisors. In a master, a risky job is isolated and delegated to child actors, so it’s more robust. In the application, an extra intermediate layer “Executor” is created so that we can do fine-grained and fast recovery in case of task failure. A master watches the lifecycle of AppMaster and worker to handle the failures, but the life cycle of Worker and AppMaster are not bound to a Master Actor by supervision, so that Master node can fail independently. Several Master Actors form an Akka cluster, the Master state is exchanged using the Gossip protocol in a conflict-free consistent way so that there is no single point of failure. With this hierarchy design, we are able to achieve high availability.</p>
</blockquote>
<p>Next It’s a good entrance to knowing some <a href="http://gearpump.apache.org/releases/latest/introduction/basic-concepts/index.html" target="_blank" rel="external">basic concepts</a>. It’s very necessary, you should first take a detail/serious look at if you want to know how gearpump works.</p>
<p><strong>Master &amp; Worker</strong></p>
<blockquote>
<p>Gearpump follow <strong>master slave architecture</strong>. Every cluster contains one or more Master node, and several worker nodes. Worker node is responsible to manage local resources on single machine, and Master node is responsible to manage global resources of the whole cluster.</p>
</blockquote>
<p>If you have already know hadoop/spark such bigdata system, you should familiar those terminology. Here is the first comparison about gearpump and other system.</p>
<table>
<thead>
<tr>
<th>bigdata system</th>
<th>Master</th>
<th>Slave</th>
</tr>
</thead>
<tbody>
<tr>
<td>Hadoop HDFS</td>
<td>NameNode</td>
<td>DataNode</td>
</tr>
<tr>
<td>Hadoop YARN</td>
<td>ReourceManager</td>
<td>NodeManager</td>
</tr>
<tr>
<td>Spark</td>
<td>ClusterManagement</td>
<td>Worker</td>
</tr>
<tr>
<td>Storm</td>
<td>Nimbus</td>
<td>Supervisor</td>
</tr>
<tr>
<td>Gearpump</td>
<td>Master</td>
<td>Worker</td>
</tr>
</tbody>
</table>
<p><strong>Application &amp; AppMaster &amp; Executor</strong></p>
<blockquote>
<p><strong>Application</strong> is what we want to parallel and run on the cluster. There are different application types, for example MapReduce application and streaming application are different application types. Gearpump natively supports Streaming Application types, it also contains several templates to help user to create custom application types, like distributedShell.</p>
<p>In runtime, every application instance is represented by a single <strong>AppMaster</strong> and a list of <strong>Executors</strong>. AppMaster represents the command and controls center of the Application instance. It communicates with user, master, worker, and executor to get the job done. Each executor is a parallel unit for distributed application. Typically AppMaster and Executor will be started as JVM processes on worker nodes.</p>
</blockquote>
<p>Now we have talking all important components in gearpump. Notice here we did’t mentioned Task as appeared in previous actor hierarchy. Also notice that Application is not an actor but an Java main class. Next take a look at Application Submission Flow in gearpump.</p>
<blockquote>
<p>When user submits an application to Master, Master will first find an available worker to start the AppMaster. After AppMaster is started, AppMaster will request Master for more resources (worker) to start executors. The Executor now is only an empty container. After the executors are started, the AppMaster will then distribute real computation tasks to the executor and run them in parallel way.</p>
<p>To submit an application, a Gearpump client specifies a computation defined within a DAG and submits this to an active master. The SubmitApplication message is sent to the Master who then forwards this to an AppManager. </p>
</blockquote>
<p><img src="http://gearpump.apache.org/releases/latest/img/submit.png" alt="submit app"> </p>
<blockquote>
<p>The AppManager locates an available worker and launches an AppMaster in a sub-process JVM of the worker. The AppMaster will then negotiate with the Master for Resource allocation in order to distribute the DAG as defined within the Application. The allocated workers will then launch Executors (new JVMs).</p>
</blockquote>
<p><img src="http://gearpump.apache.org/releases/latest/img/submit2.png" alt="launch"></p>
<p>Here I summary basic steps of submit application. notice the step number below are’t corresponding to the official pictures above.</p>
<ol>
<li>User(client) submits an streaming application to gearpump Master;</li>
<li>Master forward <code>SubmitApplication</code> request to AppManager;</li>
<li>Master will first find an available worker to start the AppMaster;</li>
<li>AppMaster started(as Executor) on one of worker which master specified, until now, AppManager on Master can send  <code>SubmitApplicationResult</code> to client;</li>
<li>AppMaster send <code>RequestResource</code> to master, the purpose of this step is ask resources to run/launch Tasks which doing real job. After all, AppMaster is not responsible to running job, but instead let Tasks doing the job. Notice the lifecycle of both AppMaster and Tasks all resides in Executors. So If you want to start AppMaster or Task, you first must start Executor, then let Executor start AppMaster and Task;</li>
<li>Once AppMaster receive <code>ResouceAllocated</code> response, it’ll send <code>LaunchExecutor</code> to workers which Master pointing out where to go. For ex, the ResouceAllocated response says by Master to AppMaster: you can run executors on workers #1 and #2. Then AppMaster will send LaunchExecutor request to this two workers;</li>
<li>The Workers receive LaunchExecutor request from AppMaster, it then spawn an Executor as a java process. The reason why spawn a new process here is that the Executor and Worker thread should separate, which means the working process of Executor and Worker shouldn’t affect each other;</li>
<li>Just like Worker register to Master for reporting resources, the Executor also register to AppMaster by sending <code>RegisterExecutor</code> request. If someone regist to other-one, that means someone wants to be managed/controlled by other-one. for example, students regist to school, company regist to Mainland China, employee regist to company and so on;</li>
<li>The AppMaster receive <code>RegisterExecutor</code> request from Executor on Worker, it then ask Executor to start Task;</li>
<li>As AppMaster may getting more than one resouce at step6, and each Executor all register to AppMaster, so AppMaster can start multi task on this registerd Executor;</li>
<li>Each Task reside in Executor has DAG information defined within Application, so every Task can doing real job.</li>
</ol>
<p>The workflow above was extraordinary like yarn application below. I take the picture and description from <a href="https://hortonworks.com/blog/apache-hadoop-yarn-concepts-and-applications/" target="_blank" rel="external">this excellent hortonworks blog</a>.</p>
<ol>
<li>A client program <em>submits</em> the application, including the necessary specifications to launch the application-specific <strong>ApplicationMaster</strong> itself.</li>
<li>The <strong>ResourceManager</strong> assumes the responsibility to negotiate a specified container in which to <em>start</em> the ApplicationMaster and then <em>launches</em> the ApplicationMaster.</li>
<li>The ApplicationMaster, on boot-up, <em>registers</em> with the ResourceManager – the registration allows the client program to query the ResourceManager for details, which allow it to  directly communicate with its own ApplicationMaster.</li>
<li>During normal operation the ApplicationMaster negotiates appropriate resource containers via the <em>resource-request </em>protocol.</li>
<li>On successful <em>container allocations</em>, the ApplicationMaster <em>launches</em> the container by providing the container launch specification to the NodeManager. The launch specification, typically, includes the necessary information to allow the container to communicate with the ApplicationMaster itself.</li>
<li>The application code executing within the container then provides necessary information (progress, status etc.) to its ApplicationMaster via an application-specific protocol.</li>
<li>During the application execution, the client that submitted the program communicates directly with the ApplicationMaster to get status, progress updates etc. via an application-specific protocol.</li>
<li>Once the application is complete, and all necessary work has been finished, the ApplicationMaster deregisters with the ResourceManager and shuts down, allowing its own container to be repurposed.</li>
</ol>
<p><img src="https://2xbbhjxc6wk3v21p62t8n4d4-wpengine.netdna-ssl.com/wp-content/uploads/2012/08/yarnflow.png" alt="yarn"></p>
<p>The picture above start two client application to yarn cluster, the ApplicationMaster reside on node2 of red one start three containers on node1 and node3, the ApplicationMaster reside on node1 of blue one only start one container. </p>
<p>In yarn, ResouceManager take responsible to launch ApplicationManager on one of container, and launching Tasks on containers is the responsibility of ApplicationManager. But as you know, the ApplicationManager did’t know cluster resources, so he ask ResouceManager to give him the information of where to start tasks. Now we summary some conclusions:</p>
<ol>
<li>ResouceManager launch ApplicationManager on one of NodeManager.</li>
<li>ApplicationManager launch Tasks on multi NodeManagers.</li>
<li>NodeManagers report resouce to ResouceManager.</li>
<li>Containers report task execution progress to ApplicationManager.  </li>
<li>ResouceManager manager ApplicationManager, and ApplicationManager manager tasks. If all tasks monitored by ApplicationManager was finished, then Application registered to ReousceManager was completed.</li>
</ol>
<p>Step into gearpump, there are similiarity idea inspired from yarn. We could take yarn’s container as gearpump’s Executor, and yarn’s NodeManager as gearpump’s Worker. Because Containers reside in NodeManager at yarn world, and Executors reside in Worker at gearpump world.</p>
<p><img src="http://img.blog.csdn.net/20170624165428321" alt="yarn-gp"></p>
<p>We could also consider yarn’s ResouceManager as gearpump’s AppManager. Note that AppManager is different from AppMaster, which the former is at Master side, and the latter is at Worker side.</p>
<p>The Master in Gearpump have three main components: AppManager,Scheduler,Worker Manager. In reality, there are non WorkerManager class around gearpump source code,but Master indeed has a map which mapping Worker ActorRef to WorkerId. </p>
<p>After oveview gearpump architecture, Let’s begin explore gearpump inside now.</p>
<h2 id="Part-1:_Application">Part-1: Application</h2><p>First given a WordCount example, We sumbit an StreamApplication through ClientContext. Inside the application() method, we create three <code>Processor</code> and connect by <code>~</code> to construct a DAG graph.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">WordCount</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">AkkaApp</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">application</span>(</span>config: <span class="type">ParseResult</span>, system: <span class="type">ActorSystem</span>): </span><br><span class="line">      <span class="type">StreamApplication</span> = &#123;</span><br><span class="line">    <span class="keyword">implicit</span> <span class="keyword">val</span> actorSystem = system</span><br><span class="line">    <span class="keyword">val</span> split = <span class="keyword">new</span> <span class="type">Split</span></span><br><span class="line">    <span class="keyword">val</span> sourceProcessor = <span class="type">DataSourceProcessor</span>(split, <span class="number">2</span>, <span class="string">"Split"</span>)</span><br><span class="line">    <span class="keyword">val</span> sum = <span class="type">Processor</span>[<span class="type">Sum</span>](<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">val</span> computation = sourceProcessor ~ <span class="type">HashPartitioner</span> ~&gt; sum</span><br><span class="line">    <span class="keyword">val</span> app = <span class="type">StreamApplication</span>(<span class="string">"wordCount"</span>, <span class="type">Graph</span>(computation))</span><br><span class="line">    app</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">main</span>(</span>akkaConf: <span class="type">Config</span>, args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> context: <span class="type">ClientContext</span> = <span class="type">ClientContext</span>(akkaConf)</span><br><span class="line">    <span class="keyword">val</span> app = application(config, context.system)</span><br><span class="line">    context.submit(app)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>StreamApplication is one of gearpump supported application type, there’re other applications such as MapReduce could run in gearpump. Each Application type has special appMaster class, StreamApplication’s appMaster is AppMaster. There’re some other ApplicationMaster actor implementation embeded: DistShellAppMaster,DistServiceAppMaster,and AppMaster.</p>
<p>Note Application is a scala App, but ApplicationMaster is an Actor. So what’s different between an App and and Actor? Well, App normaly has a main method doing what you want, but actor doing much more complicate thing.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Application</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">name</span>:</span> <span class="type">String</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">userConfig</span>(</span><span class="keyword">implicit</span> system: <span class="type">ActorSystem</span>): <span class="type">UserConfig</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">appMaster</span>:</span> <span class="type">Class</span>[_ &lt;: <span class="type">ApplicationMaster</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationMaster</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Actor</span></span><br><span class="line"></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StreamApplication</span>(</span>) <span class="keyword">extends</span> <span class="type">Application</span> &#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">appMaster</span>:</span> <span class="type">Class</span>[_ &lt;: <span class="type">ApplicationMaster</span>] = classOf[<span class="type">AppMaster</span>] </span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppMaster</span>(</span>appContext: <span class="type">AppMasterContext</span>, app: <span class="type">AppDescription</span>) </span><br><span class="line">  <span class="keyword">extends</span> <span class="type">ApplicationMaster</span> &#123;...&#125;</span><br></pre></td></tr></table></figure>
<p>ClientContext is a user facing util to submit/manage an application. The AppDescription describe application metadata such as appMaster name(here is AppMaster).</p>
<p>In the Akka world, Actor is the king. Client send SubmitApplication request to Master Actor, and expect get SubmitApplicationResult response from Master. Messages are sent to an Actor through one of the following methods.</p>
<ul>
<li><code>!</code> means “fire-and-forget”, e.g. send a message asynchronously and return immediately. Also known as tell.</li>
<li><code>?</code> sends a message asynchronously and returns a Future representing a possible reply. Also known as ask. That’s the way client submit application doing here.</li>
</ul>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClientContext</span>(</span>config: <span class="type">Config</span>, sys: <span class="type">ActorSystem</span>, _master: <span class="type">ActorRef</span>) &#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">submit</span>(</span>app: <span class="type">Application</span>, jar: <span class="type">String</span>, executorNum: <span class="type">Int</span>)= &#123;</span><br><span class="line">    <span class="keyword">val</span> appName = ...</span><br><span class="line">    <span class="keyword">val</span> submissionConfig = ...</span><br><span class="line">    <span class="keyword">val</span> appDescription = <span class="type">AppDescription</span>(appName,app.appMaster.getName,...)</span><br><span class="line">    <span class="keyword">val</span> appJar = <span class="type">Option</span>(jar).map(loadFile)</span><br><span class="line">    submitApplication(<span class="type">SubmitApplication</span>(appDescription, appJar))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">submitApplication</span>(</span>submitApplication: <span class="type">SubmitApplication</span>)=&#123;</span><br><span class="line">    <span class="keyword">val</span> result = <span class="type">ActorUtil</span>.askActor[<span class="type">SubmitApplicationResult</span>](</span><br><span class="line">        master, submitApplication, masterClientTimeout)</span><br><span class="line">    <span class="keyword">val</span> application = result.appId <span class="keyword">match</span> &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="type">Success</span>(appId) =&gt;</span><br><span class="line">        <span class="type">Console</span>.println(s<span class="string">"Submit app succeed. The app id is $appId"</span>)</span><br><span class="line">        <span class="keyword">new</span> <span class="type">RunningApplication</span>(appId, master, masterClientTimeout)</span><br><span class="line">      <span class="keyword">case</span> <span class="type">Failure</span>(ex) =&gt; <span class="keyword">throw</span> ex</span><br><span class="line">    &#125;</span><br><span class="line">    application</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now Let’s see how Master deal with SubmitApplication. Before this, you should know that client only submit application when Master has started. Also note that when start Master, we also start some Workers to form a gearpump cluster. Only then the cluster is stabled, client then can submit application. We can see that when startup Master, in preStart() method, Master created an AppManager and Scheduler by invoking <code>context.actorOf(...)</code>. That means before client submit application, AppManager and Scheduler already exists in Master, and they both preparing to work.</p>
<p>We’re also seeing a <code>receiveHandler()</code> method return Receive object, and was invoked by <code>waitForNextWorkerId()</code> method. What <code>context.become()</code> and <code>orElse</code> meaning? well, normaly you define one receive method, but here you have seen there’re multi receive method, so become() method of ActorContext is used for switchover between different receive method.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>[cluster] <span class="class"><span class="keyword">class</span> <span class="title">Master</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Actor</span> <span class="keyword"><span class="keyword">with</span></span> <span class="title">Stash</span> &#123;</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> kvService = context.actorOf(<span class="type">Props</span>(<span class="keyword">new</span> <span class="type">InMemoryKVService</span>()))</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> appManager: <span class="type">ActorRef</span> = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> scheduler: <span class="type">ActorRef</span> = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> workers = <span class="keyword">new</span> immutable.<span class="type">HashMap</span>[<span class="type">ActorRef</span>, <span class="type">WorkerId</span>]</span><br><span class="line"></span><br><span class="line">  <span class="comment">// when start up Master, send GetKV to kvService immediatery</span></span><br><span class="line">  kvService ! <span class="type">GetKV</span>(<span class="type">MASTER_GROUP</span>, <span class="type">WORKER_ID</span>) </span><br><span class="line">  context.become(waitForNextWorkerId) <span class="comment">// wait for getting result </span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">waitForNextWorkerId</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">GetKVSuccess</span>(_, result) =&gt; <span class="comment">// receive GetKV response</span></span><br><span class="line">      context.become(receiveHandler) <span class="comment">// switchover to receiveHandler</span></span><br><span class="line">      unstashAll()</span><br><span class="line">    <span class="keyword">case</span> msg =&gt; stash() <span class="comment">// why do we stash here?</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">receiveHandler</span>:</span> <span class="type">Receive</span> = workerMsgHandler orElse</span><br><span class="line">    appMasterMsgHandler orElse <span class="comment">// AppMaster to Master</span></span><br><span class="line">    onMasterListChange orElse <span class="comment">// Master change</span></span><br><span class="line">    clientMsgHandler orElse <span class="comment">// Client to Master. you'll see submit app here</span></span><br><span class="line">    kvServiceMsgHandler orElse <span class="type">ActorUtil</span>.defaultMsgHandler(self)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">preStart</span>(</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">    appManager = context.actorOf(</span><br><span class="line">        <span class="type">Props</span>(<span class="keyword">new</span> <span class="type">AppManager</span>(kvService, <span class="type">AppMasterLauncher</span>)),</span><br><span class="line">        classOf[<span class="type">AppManager</span>].getSimpleName)</span><br><span class="line">    scheduler = context.actorOf(<span class="type">Props</span>(schedulerClass))</span><br><span class="line">    context.system.eventStream.subscribe(self,classOf[<span class="type">DisassociatedEvent</span>])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Now you have overview the main function in Master, lets see how clientMsgHandler receive method response to client’s submit application request. I have omit other unimportance request only left submit and restart application. The Master delegate/forward reqeust to AppManager.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">clientMsgHandler</span>:</span> Receive = &#123;</span><br><span class="line">  case app: SubmitApplication =&gt; appManager.forward(app)</span><br><span class="line">  case app: RestartApplication =&gt; appManager.forward(app)</span><br><span class="line">  case register: RegisterAppResultListener =&gt; appManager forward register</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>AppManager is dedicated child of Master to manager all applications. The AppManager behaviour similar as Master.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>[cluster] <span class="class"><span class="keyword">class</span> <span class="title">AppManager</span>(</span></span><br><span class="line">    kvService: <span class="type">ActorRef</span>, launcher: <span class="type">AppMasterLauncherFactory</span>) </span><br><span class="line">    <span class="keyword">extends</span> <span class="type">Actor</span> <span class="keyword">with</span> <span class="type">Stash</span> <span class="keyword">with</span> <span class="type">TimeOutScheduler</span> &#123;</span><br><span class="line"></span><br><span class="line">  kvService ! <span class="type">GetKV</span>(<span class="type">MASTER_GROUP</span>, <span class="type">MASTER_STATE</span>)</span><br><span class="line">  context.become(waitForMasterState)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">waitForMasterState</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">GetKVSuccess</span>(_, result) =&gt;</span><br><span class="line">      context.become(receiveHandler)</span><br><span class="line">      unstashAll()</span><br><span class="line">    <span class="keyword">case</span> msg =&gt; stash()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">receiveHandler</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    clientMsgHandler orElse <span class="comment">// Client to AppManager</span></span><br><span class="line">      appMasterMessage orElse <span class="comment">// AppMaster to AppManager</span></span><br><span class="line">      selfMsgHandler orElse</span><br><span class="line">      workerMessage orElse <span class="comment">// Worker to AppManager</span></span><br><span class="line">      appDataStoreService orElse terminationWatch</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">clientMsgHandler</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">SubmitApplication</span>(app, jar, username) =&gt;</span><br><span class="line">      <span class="keyword">val</span> client = sender()</span><br><span class="line">      context.actorOf(launcher.props(</span><br><span class="line">        nextAppId, -<span class="number">1</span>, app, jar, username, context.parent, client))</span><br><span class="line">      <span class="comment">// ommit something like save application metadata to kv store</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Master create AppManager by invoke <code>context.actorOf(Props(...))</code>, here AppManager create AppMasterLauncher Actor by <code>context.actorOf(launcher.props(..))</code>. <strong><code>AppMasterLauncher</code> is a child Actor of <code>AppManager</code>, it is responsible to launch the <code>AppMaster</code> on the cluster.</strong> </p>
<p>When AppManager receive SubmitApplication from client, it create AppMasterLauncher, and send RequestResource to master then wait for ResourceAllocation. </p>
<p>When AppMasterLauncher receive ResourceAllocated response from master, it will Try to launch a executor for AppMaster on worker specified by ResourceAllocated response.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppMasterLauncher</span>(</span>...,master: <span class="type">ActorRef</span>, client: <span class="type">ActorRef</span>) <span class="keyword">extends</span> <span class="type">Actor</span> &#123;</span><br><span class="line">  <span class="type">LOG</span>.info(s<span class="string">"Ask Master resource to start AppMaster $appId..."</span>)</span><br><span class="line">  master ! <span class="type">RequestResource</span>(appId, <span class="type">ResourceRequest</span>(<span class="type">Resource</span>(<span class="number">1</span>))</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">receive</span>:</span> <span class="type">Receive</span> = waitForResourceAllocation</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">waitForResourceAllocation</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">ResourceAllocated</span>(allocations) =&gt;</span><br><span class="line">      <span class="keyword">val</span> <span class="type">ResourceAllocation</span>(resource, worker, workerId) = allocations(<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">val</span> workerInfo = <span class="type">WorkerInfo</span>(workerId, worker)</span><br><span class="line">      <span class="keyword">val</span> appMasterContext = <span class="type">AppMasterContext</span>(...)</span><br><span class="line">      <span class="comment">// Try to launch a executor for AppMaster on worker for app</span></span><br><span class="line">      <span class="keyword">val</span> name = <span class="type">ActorUtil</span>.actorNameForExecutor(appId, executorId)</span><br><span class="line">      <span class="keyword">val</span> selfPath = <span class="type">ActorUtil</span>.getFullPath(context.system, self.path)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">val</span> executorJVM = <span class="type">ExecutorJVMConfig</span>(</span><br><span class="line">        classOf[<span class="type">ActorSystemBooter</span>].getName, <span class="type">Array</span>(name, selfPath), jar,</span><br><span class="line">        username, appMasterAkkaConfig)</span><br><span class="line"></span><br><span class="line">      worker ! <span class="type">LaunchExecutor</span>(appId, executorId, resource, executorJVM)</span><br><span class="line">      context.become(waitForActorSystemToStart(worker, appMasterContext, resource))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Let’s see how Worker deal with LaunchExecutor reqeust from AppMasterLauncher.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>[cluster] <span class="class"><span class="keyword">class</span> <span class="title">Worker</span>(</span>masterProxy: <span class="type">ActorRef</span>) <span class="keyword">extends</span> <span class="type">Actor</span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">service</span>:</span> <span class="type">Receive</span> = appMasterMsgHandler orElse clientMessageHandler </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">appMasterMsgHandler</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> launch: <span class="type">LaunchExecutor</span> =&gt;</span><br><span class="line">      <span class="keyword">val</span> executor = context.actorOf(<span class="type">Props</span>(classOf[<span class="type">ExecutorWatcher</span>], </span><br><span class="line">        launch, masterInfo, ioPool, jarStoreClient, executorProcLauncher))</span><br><span class="line">      context.watch(executor)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The ExecutorWatcher create a java process and the main class <code>ActorSystemBooter</code> is coming from ExecutorJVMConfig which defined in AppMasterLauncher.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExecutorWatcher</span>(</span>launch: <span class="type">LaunchExecutor</span>, </span><br><span class="line">    procLauncher: <span class="type">ExecutorProcessLauncher</span>) <span class="keyword">extends</span> <span class="type">Actor</span> &#123;</span><br><span class="line">  <span class="keyword">val</span> ctx = launch.executorJvmConfig</span><br><span class="line">  procLauncher.createProcess(ctx.mainClass, ctx.arguments)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ExecutorWatcher is an Actor, ActorSystemBooter is an pure scala app. But inside ActorSystemBooter’s main method, it create another actor: Daemon.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ActorSystemBooter</span>(</span>config: <span class="type">Config</span>) &#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">boot</span>(</span>name: <span class="type">String</span>, reportBackActor: <span class="type">String</span>): <span class="type">ActorSystem</span> = &#123;</span><br><span class="line">    system.actorOf(<span class="type">Props</span>(classOf[<span class="type">Daemon</span>], name, reportBackActor), <span class="string">"daemon"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ActorSystemBooter</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">apply</span>(</span>config: <span class="type">Config</span>): <span class="type">ActorSystemBooter</span> = <span class="keyword">new</span> <span class="type">ActorSystemBooter</span>(config)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span>(</span>args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">    <span class="keyword">val</span> name = args(<span class="number">0</span>) <span class="comment">// The parameter was passed when construnct </span></span><br><span class="line">    <span class="keyword">val</span> reportBack = args(<span class="number">1</span>) <span class="comment">// ExecutorJVMConfig at AppMasterLauncher</span></span><br><span class="line">    apply(config).boot(name, reportBack)</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Daemon</span>(</span><span class="keyword">val</span> name: <span class="type">String</span>, reportBack: <span class="type">String</span>) <span class="keyword">extends</span> <span class="type">Actor</span> &#123;</span><br><span class="line">    <span class="keyword">val</span> reportBackActor = context.actorSelection(reportBack)</span><br><span class="line">    reportBackActor ! <span class="type">RegisterActorSystem</span>(</span><br><span class="line">        <span class="type">ActorUtil</span>.getSystemAddress(context.system).toString)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Those many Actor headache me, and the invoke chain nest and nest again. So I draw a picture to help me understand what happend all the way around. To make my picture looks vividly, I use gear to indicate an Actor, you can see except ActorSystemBooter, all others are Actor. The underline character means request. Let me outlines some import steps.</p>
<ol>
<li>AppManager create AppMasterLauncher which then send RequestResource to Master</li>
<li>After AppMasterLauncher receive ResourceAllocated, it send LauncherExecutor request to Worker</li>
<li>Worker create an ExecutorWatcher and create a java Daemon process which send RegisterActorSystem request back to Master</li>
</ol>
<p><img src="http://img.blog.csdn.net/20170624205039225" alt="9"></p>
<p>Now the AppMasterLauncher is going to deal with RegisterActorSystem request. If you backward to check AppMasterLauncher, you can find that: after AppMasterLauncher send LaunchExecutor, it is waiting for ActorSystem to start.</p>
<p>After Daemon actor in Worker send <code>RegisterActorSystem</code> request to <code>AppMasterLauncher</code>, the AppMasterLauncher finally have chance to receive RegisterActorSystem event, first it send <code>ActorSystemRegistered</code> request to Daemon, and then send another request <code>CreateActor</code> to Daemon again.</p>
<ol>
<li>Daemon on Worker send RegisterActorSystem request to AppMasterLauncher</li>
<li>AppMasterLauncher on Master send ActorSystemRegistered to Daemon on Worker</li>
<li>AppMasterLauncher on Master send CreateActor to Daemon on Worker</li>
</ol>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppMasterLauncher</span>(</span>...,master: <span class="type">ActorRef</span>, client: <span class="type">ActorRef</span>) <span class="keyword">extends</span> <span class="type">Actor</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">waitForResourceAllocation</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    worker ! <span class="type">LaunchExecutor</span>(appId, executorId, resource, executorJVM)</span><br><span class="line">    context.become(</span><br><span class="line">        waitForActorSystemToStart(worker, appMasterContext, resource))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">waitForActorSystemToStart</span>(</span>worker: <span class="type">ActorRef</span>, appContext: <span class="type">AppMasterContext</span>,</span><br><span class="line">      resource: <span class="type">Resource</span>): <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">RegisterActorSystem</span>(systemPath) =&gt;</span><br><span class="line">      sender ! <span class="type">ActorSystemRegistered</span>(worker)</span><br><span class="line">      <span class="comment">// There're many masters construct Master HA in case of fault</span></span><br><span class="line">      <span class="keyword">val</span> masterAddress = systemConfig.getStringList(<span class="type">GEARPUMP_CLUSTER_MASTERS</span>)</span><br><span class="line">        .asScala.map(<span class="type">HostPort</span>(_)).map(<span class="type">ActorUtil</span>.getMasterActorPath)</span><br><span class="line"></span><br><span class="line">      sender ! <span class="type">CreateActor</span>(</span><br><span class="line">        <span class="type">AppMasterRuntimeEnvironment</span>.props(masterAddress, app, appContext))</span><br><span class="line">      context.become(waitForAppMasterToStart(worker, appMasterTimeout))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">waitForAppMasterToStart</span>(</span>worker: <span class="type">ActorRef</span>, cancel: <span class="type">Cancellable</span>)= &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">ActorCreated</span>(appMaster, _) =&gt;</span><br><span class="line">      cancel.cancel()</span><br><span class="line">      sender ! <span class="type">BindLifeCycle</span>(appMaster)</span><br><span class="line">      <span class="type">LOG</span>.info(s<span class="string">"AppMaster is created, mission complete..."</span>)</span><br><span class="line">      replyToClient(<span class="type">SubmitApplicationResult</span>(<span class="type">Success</span>(appId)))</span><br><span class="line">      context.stop(self)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Seems AppMasterLauncher and Daemon are playing ping-pong, and they both back and forth many times. Finally after Daemon create another Actor which we’ll talk about later, it then send ActorCreated back to AppMasterLauncher. </p>
<ol>
<li>Daemon on Worker send ActorCreated reqeust to AppMasterLauncher on Master</li>
<li>AppMasterLauncher send BindLifeCycle request back to Daemon on Worker</li>
<li>and then send SubmitApplicationResult back to Client</li>
<li>Daemon on Worker receive BindLifeCycle request from AppMasterLauncher and watch the actor. this actor being watched by Daemon is AppMaster.</li>
</ol>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Daemon</span>(</span><span class="keyword">val</span> name: <span class="type">String</span>, reportBack: <span class="type">String</span>) <span class="keyword">extends</span> <span class="type">Actor</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">waitForRegisterResult</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">ActorSystemRegistered</span>(parent) =&gt;</span><br><span class="line">      timeout.cancel()</span><br><span class="line">      context.watch(parent)</span><br><span class="line">      context.become(waitCommand)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">waitCommand</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">BindLifeCycle</span>(actor) =&gt;</span><br><span class="line">      <span class="type">LOG</span>.info(s<span class="string">"ActorSystem $name Binding life cycle with actor: $actor"</span>)</span><br><span class="line">      context.watch(actor)</span><br><span class="line">    <span class="keyword">case</span> create<span class="annotation">@CreateActor</span>(props: <span class="type">Props</span>, name: <span class="type">String</span>) =&gt;</span><br><span class="line">      <span class="keyword">val</span> actor = <span class="type">Try</span>(context.actorOf(props, name)) <span class="comment">// create another actor</span></span><br><span class="line">      actor <span class="keyword">match</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">Success</span>(actor) =&gt; sender ! <span class="type">ActorCreated</span>(actor, name)</span><br><span class="line">        <span class="keyword">case</span> <span class="type">Failure</span>(e) =&gt; sender ! <span class="type">CreateActorFailed</span>(props.clazz.getName, e)</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">PoisonPill</span> =&gt;</span><br><span class="line">      context.stop(self)</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Terminated</span>(actor) =&gt;</span><br><span class="line">      <span class="type">LOG</span>.info(s<span class="string">"System $name Watched actor is terminated $actor"</span>)</span><br><span class="line">      context.stop(self)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20170624212741793" alt="9"></p>
<p>Daemon create an Actor which defined in RegisterActorSystem on AppMasterLauncher. This Actor is <code>AppMasterRuntimeEnvironment</code>, it’ll create AppMaster. </p>
<p>We know that create Actor can use <code>context.actorOf(props)</code> method, here the props is passed from AppMasterLauncher to Daemon, but not created on Daemon side. Why do we doing this way? Because only AppMasterLauncher know how to create an AppMaster. Passing the props inside CreateActor is just like passing other request. Now the mainpoint focus transfer to AppMasterRuntimeEnvironment.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">AppMasterRuntimeEnvironment</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">props</span>(</span>masters: <span class="type">Iterable</span>[<span class="type">ActorPath</span>], </span><br><span class="line">      app: <span class="type">AppDescription</span>, appContextInput: <span class="type">AppMasterContext</span></span><br><span class="line">      ): <span class="type">Props</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> master = (appId: <span class="type">AppId</span>, masterProxy: <span class="type">MasterActorRef</span>) =&gt;</span><br><span class="line">      <span class="type">MasterWithExecutorSystemProvider</span>.props(appId, masterProxy)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> appMaster = (appContext: <span class="type">AppMasterContext</span>, app: <span class="type">AppDescription</span>) =&gt;</span><br><span class="line">      <span class="type">LazyStartAppMaster</span>.props(appContext, app)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> masterConnectionKeeper = (master: <span class="type">MasterActorRef</span>, registerAppMaster:</span><br><span class="line">      <span class="type">RegisterAppMaster</span>, listener: <span class="type">ListenerActorRef</span>) =&gt; <span class="type">Props</span>(<span class="keyword">new</span> <span class="type">MasterConnectionKeeper</span>(</span><br><span class="line">        registerAppMaster, master, masterStatusListener = listener))</span><br><span class="line"></span><br><span class="line">    <span class="type">Props</span>(<span class="keyword">new</span> <span class="type">AppMasterRuntimeEnvironment</span>(appContextInput, app, masters,</span><br><span class="line">      master, appMaster, masterConnectionKeeper))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>AppMasterRuntimeEnvironment will create three Actor once it’s created. It serves as runtime environment for AppMaster. When starting an AppMaster, we need to setup the connection to master(an MasterProxy which substitute to Master), and prepare other environments.</p>
<p>The MasterProxy also extend the function of Master, by providing a scheduler service for Executor System. AppMaster can ask Master for executor system directly. details like requesting resource, contacting worker to start a process, and then starting an executor system is hidden from AppMaster.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>[appmaster] <span class="class"><span class="keyword">class</span> <span class="title">AppMasterRuntimeEnvironment</span>(</span></span><br><span class="line">    appContextInput: <span class="type">AppMasterContext</span>,</span><br><span class="line">    app: <span class="type">AppDescription</span>,</span><br><span class="line">    masters: <span class="type">Iterable</span>[<span class="type">ActorPath</span>],</span><br><span class="line">    masterFactory: (<span class="type">AppId</span>, <span class="type">MasterActorRef</span>) =&gt; <span class="type">Props</span>,</span><br><span class="line">    appMasterFactory: (<span class="type">AppMasterContext</span>, <span class="type">AppDescription</span>) =&gt; <span class="type">Props</span>,</span><br><span class="line">    masterConnectionKeeperFactory: (<span class="type">MasterActorRef</span>, <span class="type">RegisterAppMaster</span>, <span class="type">ListenerActorRef</span>) =&gt; <span class="type">Props</span>) <span class="keyword">extends</span> <span class="type">Actor</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> master = context.actorOf(</span><br><span class="line">    masterFactory(appId, context.actorOf(<span class="type">Props</span>(<span class="keyword">new</span> <span class="type">MasterProxy</span>(masters, <span class="number">30.</span>seconds)))))</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> appContext = appContextInput.copy(masterProxy = master)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Create appMaster proxy to receive command and forward to appmaster</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> appMaster = context.actorOf(appMasterFactory(appContext, app))</span><br><span class="line">  context.watch(appMaster)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> registerAppMaster = <span class="type">RegisterAppMaster</span>(</span><br><span class="line">    appId, appMaster, appContext.workerInfo)</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> masterConnectionKeeper = context.actorOf(</span><br><span class="line">    masterConnectionKeeperFactory(master, registerAppMaster, self))</span><br><span class="line">  context.watch(masterConnectionKeeper)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">receive</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">MasterConnected</span> =&gt;</span><br><span class="line">      <span class="type">LOG</span>.info(s<span class="string">"Master is connected, start AppMaster $appId..."</span>)</span><br><span class="line">      appMaster ! <span class="type">StartAppMaster</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">MasterStopped</span> =&gt;</span><br><span class="line">      <span class="type">LOG</span>.error(s<span class="string">"Master is stopped, stop AppMaster $appId..."</span>)</span><br><span class="line">      context.stop(self)</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Terminated</span>(actor) =&gt; actor <span class="keyword">match</span> &#123;</span><br><span class="line">      <span class="keyword">case</span> `appMaster` =&gt;</span><br><span class="line">        <span class="type">LOG</span>.error(s<span class="string">"AppMaster $appId is stopped, shutdown myself"</span>)</span><br><span class="line">        context.stop(self)</span><br><span class="line">      <span class="keyword">case</span> `masterConnectionKeeper` =&gt;</span><br><span class="line">        <span class="type">LOG</span>.error(s<span class="string">"Master connection keeper is stopped, appId: $appId, shutdown myself"</span>)</span><br><span class="line">        context.stop(self)</span><br><span class="line">      <span class="keyword">case</span> _ =&gt; <span class="comment">// Skip</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>The workflow from creating <code>AppMasterRuntimeEnvironment</code> to create <code>AppMaster</code> is trigged through <code>MasterConnectionKeeper</code> by sending <code>RegisterAppMaster</code> request to <code>AppMasterLauncher</code>. Finally when <code>AppMasterRuntimeEnvironment</code> receive <code>MasterConnected</code> from <code>MasterConnectionKeeper</code>, it send <code>StartAppMaster</code> to <code>AppMaster</code>. happy now! Take long long way bring up to AppMaster.</p>
<p><img src="http://img.blog.csdn.net/20170624220921664" alt="9"></p>
<p>Note AppMasterRuntimeEnvironment did not send StartAppMaster directory to AppMaster but to LazyStartAppMaster. and Every message send to LazyStartAppMaster will forward to AppMaster. Why do we need a Lazy AppMaster? If you take look at LazyStartAppMaster, you’ll notice that LazyStartAppMaster is not really an AppMaster but it’s responsible to create AppMaster only when it receive StartAppMaster request from AppMasterRuntimeEnvironment. So you wont’t find StartAppMaster on AppMaster.</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LazyStartAppMaster</span>(</span>appId: <span class="type">Int</span>, appMasterProps: <span class="type">Props</span>) </span><br><span class="line">    <span class="keyword">extends</span> <span class="type">Actor</span> <span class="keyword">with</span> <span class="type">Stash</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">receive</span>:</span> <span class="type">Receive</span> = <span class="literal">null</span></span><br><span class="line">  context.become(startAppMaster)</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">startAppMaster</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">StartAppMaster</span> =&gt;</span><br><span class="line">      <span class="keyword">val</span> appMaster = context.actorOf(appMasterProps, <span class="string">"appmaster"</span>)</span><br><span class="line">      context.watch(appMaster)</span><br><span class="line">      context.become(terminationWatch(appMaster) orElse </span><br><span class="line">        appMasterService(appMaster))</span><br><span class="line">      unstashAll()</span><br><span class="line">    <span class="keyword">case</span> _ =&gt; stash()</span><br><span class="line"> &#125;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">appMasterService</span>(</span>appMaster: <span class="type">ActorRef</span>): <span class="type">Receive</span> = &#123;</span><br><span class="line">    <span class="keyword">case</span> msg =&gt; appMaster forward msg</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>[appmaster] <span class="class"><span class="keyword">object</span> <span class="title">LazyStartAppMaster</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">props</span>(</span>appContext: <span class="type">AppMasterContext</span>, app: <span class="type">AppDescription</span>): <span class="type">Props</span> = &#123;</span><br><span class="line">    <span class="comment">// the class name of app.appMaster is AppMaster </span></span><br><span class="line">    <span class="comment">// which will create when receive StartAppMaster</span></span><br><span class="line">    <span class="keyword">val</span> appMasterProps = <span class="type">Props</span>(<span class="type">Class</span>.forName(app.appMaster), appContext, app)</span><br><span class="line">    <span class="type">Props</span>(<span class="keyword">new</span> <span class="type">LazyStartAppMaster</span>(appContext.appId, appMasterProps))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The AppMaster is the head of a streaming application. It contains:</p>
<ol>
<li>ExecutorManager to manage all executors.</li>
<li>TaskManager to manage all tasks,</li>
<li>ClockService to track the global clock for this streaming application.</li>
<li>Scheduler to decide which a task should be scheduled to.</li>
</ol>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppMaster</span>(</span>appContext: <span class="type">AppMasterContext</span>, app: <span class="type">AppDescription</span>) </span><br><span class="line">    <span class="keyword">extends</span> <span class="type">ApplicationMaster</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> dagManager = context.actorOf(<span class="type">Props</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="type">DagManager</span>(appContext.appId, userConfig, store,</span><br><span class="line">    <span class="type">Some</span>(getUpdatedDAG))))</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> taskManager: <span class="type">Option</span>[<span class="type">ActorRef</span>] = <span class="type">None</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> clockService: <span class="type">Option</span>[<span class="type">ActorRef</span>] = <span class="type">None</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">val</span> executorManager: <span class="type">ActorRef</span> =</span><br><span class="line">    context.actorOf(<span class="type">ExecutorManager</span>.props(userConfig, appContext, app.clusterConfig, app.name),</span><br><span class="line">      <span class="type">ActorPathUtil</span>.executorManagerActorName)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (dag &lt;- getDAG) &#123;</span><br><span class="line">    clockService = <span class="type">Some</span>(context.actorOf(<span class="type">Props</span>(<span class="keyword">new</span> <span class="type">ClockService</span>(dag, self, store))))</span><br><span class="line">    <span class="keyword">val</span> jarScheduler = <span class="keyword">new</span> <span class="type">JarScheduler</span>(appId, app.name, systemConfig, context)</span><br><span class="line">    taskManager = <span class="type">Some</span>(context.actorOf(<span class="type">Props</span>(<span class="keyword">new</span> <span class="type">TaskManager</span>(appContext.appId, dagManager,</span><br><span class="line">      jarScheduler, executorManager, clockService.get, self, app.name))))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">receive</span>:</span> <span class="type">Receive</span> = &#123;</span><br><span class="line">    taskMessageHandler orElse</span><br><span class="line">      executorMessageHandler orElse</span><br><span class="line">      ready orElse</span><br><span class="line">      recover orElse</span><br><span class="line">      appMasterService orElse</span><br><span class="line">      <span class="type">ActorUtil</span>.defaultMsgHandler(self)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>At now I lost my line of argument, as there’re no request send trigger inside AppMaster, so what’s the entry of AppMaster?</p>
<p>Keep in mind, once create AppMaster, it will create <code>ExecutorManager</code> and <code>TaskManager</code>. Althrough we did’t see request send directory from AppMaster, we could find if there’re something inside ExecutorManager or TaskManager.</p>
<p>Suddenly comeup so many Managers make me unprepared. But unlike <code>AppManager</code> reside in Master, <code>ExecutorManager</code> and <code>TaskManager</code> both reside in Worker! </p>
<p><img src="http://img.blog.csdn.net/20170624224944769" alt="9"></p>
<h2 id="Processor,_OP,_Task">Processor, OP, Task</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Planner</span> &#123;</span></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * Converts Dag of Op to Dag of TaskDescription. TaskDescription is part of the low level Graph API.</span><br><span class="line">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">plan</span>(</span>dag: <span class="type">Graph</span>[<span class="type">Op</span>, <span class="type">OpEdge</span>])</span><br><span class="line">    (<span class="keyword">implicit</span> system: <span class="type">ActorSystem</span>): <span class="type">Graph</span>[<span class="type">Processor</span>[_ &lt;: <span class="type">Task</span>], _ &lt;: <span class="type">Partitioner</span>] = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> graph = optimize(dag)</span><br><span class="line">    graph.mapEdge &#123; (node1, edge, node2) =&gt;</span><br><span class="line">      edge <span class="keyword">match</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">Shuffle</span> =&gt;</span><br><span class="line">          node2 <span class="keyword">match</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> op: <span class="type">GroupByOp</span>[_, _] =&gt;</span><br><span class="line">              <span class="keyword">new</span> <span class="type">GroupByPartitioner</span>(op.groupBy.groupByFn)</span><br><span class="line">            <span class="keyword">case</span> _ =&gt; <span class="keyword">new</span> <span class="type">HashPartitioner</span></span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">Direct</span> =&gt;</span><br><span class="line">          <span class="keyword">new</span> <span class="type">CoLocationPartitioner</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;.mapVertex(_.getProcessor)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">optimize</span>(</span>dag: <span class="type">Graph</span>[<span class="type">Op</span>, <span class="type">OpEdge</span>])</span><br><span class="line">    (<span class="keyword">implicit</span> system: <span class="type">ActorSystem</span>): <span class="type">Graph</span>[<span class="type">Op</span>, <span class="type">OpEdge</span>] = &#123;</span><br><span class="line">    <span class="keyword">val</span> graph = dag.copy</span><br><span class="line">    <span class="keyword">val</span> nodes = graph.topologicalOrderWithCirclesIterator.toList.reverse</span><br><span class="line">    <span class="keyword">for</span> (node &lt;- nodes) &#123;</span><br><span class="line">      <span class="keyword">val</span> outGoingEdges = graph.outgoingEdgesOf(node)</span><br><span class="line">      <span class="keyword">for</span> (edge &lt;- outGoingEdges) &#123;</span><br><span class="line">        merge(graph, edge._1, edge._3)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    graph</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">def</span> <span class="title">merge</span>(</span>graph: <span class="type">Graph</span>[<span class="type">Op</span>, <span class="type">OpEdge</span>], node1: <span class="type">Op</span>, node2: <span class="type">Op</span>)</span><br><span class="line">    (<span class="keyword">implicit</span> system: <span class="type">ActorSystem</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">if</span> (graph.outDegreeOf(node1) == <span class="number">1</span> &amp;&amp;</span><br><span class="line">      graph.inDegreeOf(node2) == <span class="number">1</span> &amp;&amp;</span><br><span class="line">      <span class="comment">// For processor node, we don't allow it to merge with downstream operators</span></span><br><span class="line">      !node1.isInstanceOf[<span class="type">ProcessorOp</span>[_ &lt;: <span class="type">Task</span>]] &amp;&amp;</span><br><span class="line">      !node2.isInstanceOf[<span class="type">ProcessorOp</span>[_ &lt;: <span class="type">Task</span>]]) &#123;</span><br><span class="line">      <span class="keyword">val</span> (_, edge, _) = graph.outgoingEdgesOf(node1).head</span><br><span class="line">      <span class="keyword">if</span> (edge == <span class="type">Direct</span>) &#123;</span><br><span class="line">        <span class="keyword">val</span> chainedOp = node1.chain(node2)</span><br><span class="line">        graph.addVertex(chainedOp)</span><br><span class="line">        <span class="keyword">for</span> (incomingEdge &lt;- graph.incomingEdgesOf(node1)) &#123;</span><br><span class="line">          graph.addEdge(incomingEdge._1, incomingEdge._2, chainedOp)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (outgoingEdge &lt;- graph.outgoingEdgesOf(node2)) &#123;</span><br><span class="line">          graph.addEdge(chainedOp, outgoingEdge._2, outgoingEdge._3)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Remove the old vertex</span></span><br><span class="line">        graph.removeVertex(node1)</span><br><span class="line">        graph.removeVertex(node2)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="keyword">class</span> DataSourceOp(</span><br><span class="line">    dataSource: DataSource,</span><br><span class="line">    parallelism: <span class="built_in">Int</span> = <span class="number">1</span>,</span><br><span class="line">    userConfig: UserConfig = UserConfig.empty,</span><br><span class="line">    description: String = <span class="string">"source"</span>)</span><br><span class="line">  <span class="keyword">extends</span> Op &#123;</span><br><span class="line"></span><br><span class="line">  override def chain(other: Op)(<span class="type">implicit</span> system: ActorSystem): Op = &#123;</span><br><span class="line">    DataSourceOp(dataSource, parallelism,</span><br><span class="line">      userConfig.withValue(Constants.GEARPUMP_STREAMING_OPERATOR, other.fn),</span><br><span class="line">      description)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  override def getProcessor(<span class="type">implicit</span> system: ActorSystem): Processor[_ &lt;: Task] = &#123;</span><br><span class="line">    Processor[DataSourceTask[<span class="built_in">Any</span>, <span class="built_in">Any</span>]](parallelism, description,</span><br><span class="line">      userConfig.withValue(GEARPUMP_STREAMING_SOURCE, dataSource))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="type">TaskWrapper</span><span class="container">(</span><br><span class="line">    <span class="title">val</span> <span class="title">taskId</span>: <span class="type">TaskId</span>, <span class="title">val</span> <span class="title">taskClass</span>: <span class="type">Class</span>[<span class="title">_</span> &lt;: <span class="type">Task</span>], <span class="title">context</span>: <span class="type">TaskContextData</span>,</span><br><span class="line">    <span class="title">userConf</span>: <span class="type">UserConfig</span>)</span> extends <span class="type">TaskContext</span> with <span class="type">TaskInterface</span> &#123;</span><br><span class="line"></span><br><span class="line">  private var task: <span class="type">Option</span>[<span class="type">Task</span>] = <span class="type">None</span></span><br><span class="line"></span><br><span class="line">  override def onStart<span class="container">(<span class="title">startTime</span>: <span class="type">Instant</span>)</span>: <span class="type">Unit</span> = &#123;</span><br><span class="line">    val constructor = taskClass.getConstructor<span class="container">(</span><br><span class="line">        <span class="title">classOf</span>[<span class="type">TaskContext</span>], <span class="title">classOf</span>[<span class="type">UserConfig</span>])</span></span><br><span class="line">    task = <span class="type">Some</span><span class="container">(<span class="title">constructor</span>.<span class="title">newInstance</span>(<span class="title">this</span>, <span class="title">userConf</span>)</span>)</span><br><span class="line">    task.foreach<span class="container">(<span class="title">_</span>.<span class="title">onStart</span>(<span class="title">startTime</span>)</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>Utility that helps user to create a DAG starting with [[DataSourceTask]] user should pass in a [[DataSource]]</p>
<p>Here is an example to build a DAG that reads from Kafka source followed by word count</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> source = <span class="keyword">new</span> <span class="type">KafkaSource</span>()</span><br><span class="line"><span class="keyword">val</span> sourceProcessor =  <span class="type">DataSourceProcessor</span>(source, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">val</span> split = <span class="type">Processor</span>[<span class="type">Split</span>](<span class="number">1</span>)</span><br><span class="line"><span class="keyword">val</span> sum = <span class="type">Processor</span>[<span class="type">Sum</span>](<span class="number">1</span>)</span><br><span class="line"><span class="keyword">val</span> dag = sourceProcessor ~&gt; split ~&gt; sum</span><br></pre></td></tr></table></figure>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">DataSourceProcessor</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">apply</span>(</span></span><br><span class="line">      dataSource: <span class="type">DataSource</span>,</span><br><span class="line">      parallelism: <span class="type">Int</span> = <span class="number">1</span>,</span><br><span class="line">      description: <span class="type">String</span> = <span class="string">""</span>,</span><br><span class="line">      taskConf: <span class="type">UserConfig</span> = <span class="type">UserConfig</span>.empty)(<span class="keyword">implicit</span> system: <span class="type">ActorSystem</span>)</span><br><span class="line">    : <span class="type">Processor</span>[<span class="type">DataSourceTask</span>[<span class="type">Any</span>, <span class="type">Any</span>]] = &#123;</span><br><span class="line">    <span class="type">Processor</span>[<span class="type">DataSourceTask</span>[<span class="type">Any</span>, <span class="type">Any</span>]](parallelism, description,</span><br><span class="line">      taskConf.withValue[<span class="type">DataSource</span>](<span class="type">Constants</span>.<span class="type">GEARPUMP_STREAMING_SOURCE</span>, dataSource))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Default Task container for [[org.apache.gearpump.streaming.source.DataSource]] that reads from DataSource in batch</p>
<p>DataSourceTask calls:</p>
<ul>
<li><code>DataSource.open()</code> in <code>onStart</code> and pass in [[org.apache.gearpump.streaming.task.TaskContext]]</li>
</ul>
<p>and application start time</p>
<ul>
<li><code>DataSource.read()</code> in each <code>onNext</code>, which reads a batch of messages</li>
<li><code>DataSource.close()</code> in <code>onStop</code></li>
</ul>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataSourceTask</span>[</span><span class="type">IN</span>, <span class="type">OUT</span>] <span class="keyword">private</span>[source](</span><br><span class="line">    context: <span class="type">TaskContext</span>,</span><br><span class="line">    conf: <span class="type">UserConfig</span>,</span><br><span class="line">    source: <span class="type">DataSource</span>,</span><br><span class="line">    transform: <span class="type">Transform</span>[<span class="type">IN</span>, <span class="type">OUT</span>])</span><br><span class="line">  <span class="keyword">extends</span> <span class="type">Task</span>(context, conf) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">this</span>(</span>context: <span class="type">TaskContext</span>, conf: <span class="type">UserConfig</span>) = &#123;</span><br><span class="line">    <span class="keyword">this</span>(context, conf,</span><br><span class="line">      conf.getValue[<span class="type">DataSource</span>](<span class="type">GEARPUMP_STREAMING_SOURCE</span>)(context.system).get,</span><br><span class="line">      <span class="keyword">new</span> <span class="type">Transform</span>[<span class="type">IN</span>, <span class="type">OUT</span>](context,</span><br><span class="line">        conf.getValue[<span class="type">FunctionRunner</span>[<span class="type">IN</span>, <span class="type">OUT</span>]](<span class="type">GEARPUMP_STREAMING_OPERATOR</span>)(context.system))</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Deep into Apache Gearpump&lt;br&gt;
    
    </summary>
    
      <category term="bigdata" scheme="http://github.com/zqhxuyuan/categories/bigdata/"/>
    
    
      <category term="流处理" scheme="http://github.com/zqhxuyuan/tags/%E6%B5%81%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Apache Kafka JIRA</title>
    <link href="http://github.com/zqhxuyuan/2017/06/20/JIRA_KAFKA/"/>
    <id>http://github.com/zqhxuyuan/2017/06/20/JIRA_KAFKA/</id>
    <published>2017-06-19T16:00:00.000Z</published>
    <updated>2017-06-24T14:57:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>Apache Kafka JIRA<br><a id="more"></a></p>
<p><a href="https://issues.apache.org/jira/browse/KAFKA" target="_blank" rel="external">https://issues.apache.org/jira/browse/KAFKA</a></p>
<h2 id="2944">2944</h2><p><a href="https://github.com/apache/kafka/pull/723">https://github.com/apache/kafka/pull/723</a></p>
<p>最后来分析<code>KafkaBasedLog</code>的<code>readToLogEnd()</code>方法如何读取到日志的最末尾，具体步骤如下。</p>
<ol>
<li>定位到分区的最末尾，通过消费者的<code>seekToEnd()</code>只是声明了重置策略为<code>LATEST</code>，并没有真正定位。客户端还需要调用消费者的轮询方法，才能保证发送拉取请求，并更新消费者的当前位置；</li>
<li>比较消费者的当前位置（<code>endOffset</code>）与上一次还没定位到最末尾时的位置（<code>startOffset</code>），如果前者大于后者，客户端需要调用<code>seek()</code>方法定位到旧的位置（<code>startOffset</code>）；</li>
<li>如果步骤(2)回退到旧的位置，需要调用轮询方法消费消息，直到当前位置是分区的最末尾位置。</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaBasedLog</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; </span>&#123; </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readToLogEnd</span><span class="params">()</span> </span>&#123; <span class="comment">// 读取到日志的最末尾</span></span><br><span class="line">    <span class="comment">// 1. 定位到分区的最末尾（logEndOffset）</span></span><br><span class="line">    Set&lt;TopicPartition&gt; assignment = consumer.assignment();</span><br><span class="line">    Map&lt;TopicPartition, Long&gt; offsets = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (TopicPartition tp : assignment) &#123;</span><br><span class="line">      <span class="keyword">long</span> offset = consumer.position(tp); <span class="comment">// 获取当前的消费位置</span></span><br><span class="line">      offsets.put(tp, offset); <span class="comment">// 暂存起来</span></span><br><span class="line">      consumer.seekToEnd(singleton(tp)); <span class="comment">// 定位到最末尾的位置</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2. 回退到开始位置</span></span><br><span class="line">    Map&lt;TopicPartition, Long&gt; endOffsets = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      poll(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="keyword">for</span> (TopicPartition tp : assignment) &#123;</span><br><span class="line">        <span class="keyword">long</span> startOffset = offsets.get(tp); <span class="comment">// 旧的消费位置</span></span><br><span class="line">        <span class="keyword">long</span> endOffset = consumer.position(tp); <span class="comment">// 当前的偏移量等于最末尾的位置</span></span><br><span class="line">        <span class="keyword">if</span> (endOffset &gt; startOffset) &#123; </span><br><span class="line">          endOffsets.put(tp, endOffset); </span><br><span class="line">          consumer.seek(tp, startOffset);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 3. 开始读取，直到读取到分区的最末尾位置</span></span><br><span class="line">    <span class="keyword">while</span> (!endOffsets.isEmpty()) &#123;</span><br><span class="line">      poll(Integer.MAX_VALUE);</span><br><span class="line">      Iterator it = endOffsets.entrySet().iterator();</span><br><span class="line">      <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">        Map.Entry&lt;TopicPartition, Long&gt; entry = it.next();</span><br><span class="line">        <span class="keyword">if</span> (consumer.position(entry.getKey()) &lt; entry.getValue()) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> it.remove();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>客户端调用<code>readToLogEnd()</code>之前，如果还有新的消息没有消费，当调用<code>readToLogEnd()</code>方法时，可以保证客户端会完全消费新写入的消息。如图8-31（左图）所示，偏移量从<code>3</code>到<code>6</code>是新写入的消息（比如一个连接器配置、两个任务配置、一个提交日志的配置，总共四条消息）。客户端为了读取到分区最近的位置，先定位到最近的位置（<code>7</code>）。注意这时不能立即调用轮询方法，因为如果客户端在最近的位置，调用轮询不会有任何的新消息。客户端应该再定位到上次消费的位置（<code>3</code>），然后才能调用轮询方法，直到消费者的当前位置大于等于最近位置时，就说明客户端读取到了日志的最末尾。右图中，假设客户端已经消费到了日志的最末尾，那么调用<code>readToLogEnd()</code>方法会立即返回。</p>
<p><img src="http://img.blog.csdn.net/20170520193000243" alt="8"></p>
<p>图8-31 读取到分区最末尾的位置</p>
<blockquote>
<p><strong>注意：</strong>上面的<code>readToLogEnd()</code>方法用到了Kafka新消费者的三个方法。（1）：<code>postion()</code>方法返回消费者当前的位置，即消费进度，这个值比客户端真正消费过的位置要大<code>1</code>。比如客户端消费了两条消息，<code>postion()</code>方法的返回值就等于<code>3</code>。（2）：<code>seekToEnd(tp)</code>方法定位到日志的最末尾，同样，这个值也是实际的偏移量加上<code>1</code>（即<code>nextOffset</code>）。比如分区实际只有六条消息，最末尾的偏移量等于<code>7</code>。（3）：<code>seekTo(tp,offset)</code>方法定位到日志的指定位置。客户端定位到指定位置后，下一步一般是要调用轮询方法，并从这个位置拉取消息。所以如果客户端已经消费了偏移量等于<code>1</code>和<code>2</code>的两条消息，定位的位置是<code>3</code>，表示要拉取第三条的消息。不能定位到<code>2</code>，那样的话，从位置<code>2</code>开始拉取消息，就重复拉取了第二条消息。</p>
</blockquote>
<h2 id="2500/2076/KIP-17">2500/2076/KIP-17</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Apache Kafka JIRA&lt;br&gt;
    
    </summary>
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/categories/kafka/"/>
    
    
      <category term="流处理" scheme="http://github.com/zqhxuyuan/tags/%E6%B5%81%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://github.com/zqhxuyuan/2017/05/10/2017-05-10-Spark2-SQL/"/>
    <id>http://github.com/zqhxuyuan/2017/05/10/2017-05-10-Spark2-SQL/</id>
    <published>2017-05-10T09:41:16.000Z</published>
    <updated>2017-05-10T09:41:16.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Spark Metrics</title>
    <link href="http://github.com/zqhxuyuan/2017/05/01/Spark-Metrics/"/>
    <id>http://github.com/zqhxuyuan/2017/05/01/Spark-Metrics/</id>
    <published>2017-04-30T16:00:00.000Z</published>
    <updated>2017-09-01T03:08:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spark Metrics<br><a id="more"></a></p>
<ul>
<li><a href="http://www.hammerlab.org/2015/02/27/monitoring-spark-with-graphite-and-grafana/" target="_blank" rel="external">http://www.hammerlab.org/2015/02/27/monitoring-spark-with-graphite-and-grafana/</a></li>
</ul>
<h2 id="命令行添加监控">命令行添加监控</h2><p>直接添加到命令行后</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--files=/yourPath/metrics<span class="class">.properties</span> --conf spark<span class="class">.metrics</span><span class="class">.conf</span>=metrics.properties</span><br></pre></td></tr></table></figure>
<blockquote>
<p>The –files flag will cause /path/to/metrics.properties to be sent to every executor,<br>and spark.metrics.conf=metrics.properties will tell all executors to load that file<br>when initializing their respective MetricsSystems.</p>
</blockquote>
<p>或者用conf的形式</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--conf spark<span class="class">.metrics</span><span class="class">.conf</span>.*<span class="class">.sink</span><span class="class">.graphite</span><span class="class">.class</span>=org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.metrics</span><span class="class">.sink</span><span class="class">.GraphiteSink</span> \</span><br><span class="line">--conf spark<span class="class">.metrics</span><span class="class">.conf</span>.*<span class="class">.sink</span><span class="class">.graphite</span><span class="class">.host</span>=...</span><br></pre></td></tr></table></figure>
<h2 id="Spark_Metrics">Spark Metrics</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*<span class="class">.sink</span><span class="class">.console</span><span class="class">.class</span>=org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.metrics</span><span class="class">.sink</span><span class="class">.ConsoleSink</span></span><br><span class="line">*<span class="class">.sink</span><span class="class">.console</span><span class="class">.period</span>=<span class="number">10</span></span><br><span class="line">*<span class="class">.sink</span><span class="class">.console</span><span class="class">.unit</span>=seconds</span><br><span class="line">*<span class="class">.sink</span><span class="class">.csv</span><span class="class">.class</span>=org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.metrics</span><span class="class">.sink</span><span class="class">.CsvSink</span></span><br><span class="line">*<span class="class">.sink</span><span class="class">.csv</span><span class="class">.period</span>=<span class="number">1</span></span><br><span class="line">*<span class="class">.sink</span><span class="class">.csv</span><span class="class">.unit</span>=minutes</span><br><span class="line">*<span class="class">.sink</span><span class="class">.csv</span><span class="class">.directory</span>=/tmp/</span><br></pre></td></tr></table></figure>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">➜  spark-<span class="number">2.0</span><span class="number">.1</span>-bin-hadoop2<span class="number">.7</span> bin/spark-<span class="built_in">shell</span></span><br><span class="line">Spark context Web UI available <span class="keyword">at</span> <span class="keyword">http</span>://<span class="number">10.57</span><span class="number">.2</span><span class="number">.5</span>:<span class="number">4040</span></span><br><span class="line">Spark context available <span class="keyword">as</span> <span class="string">'sc'</span> (master = <span class="built_in">local</span>[*], app id = <span class="built_in">local</span>-<span class="number">1495078254084</span>).</span><br><span class="line">Spark session available <span class="keyword">as</span> <span class="string">'spark'</span>.</span><br><span class="line">scala&gt; <span class="number">17</span>-<span class="number">5</span>-<span class="number">18</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">05</span> ===============================================================</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Gauges ----------------------------------------------------------------------</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.BlockManager.disk.diskSpaceUsed_MB <span class="built_in">value</span> = <span class="number">0</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.BlockManager.memory.maxMem_MB <span class="built_in">value</span> = <span class="number">366</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.BlockManager.memory.memUsed_MB <span class="built_in">value</span> = <span class="number">0</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.BlockManager.memory.remainingMem_MB <span class="built_in">value</span> = <span class="number">366</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.DAGScheduler.job.activeJobs <span class="built_in">value</span> = <span class="number">0</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.DAGScheduler.job.allJobs <span class="built_in">value</span> = <span class="number">0</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.DAGScheduler.stage.failedStages <span class="built_in">value</span> = <span class="number">0</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.DAGScheduler.stage.runningStages <span class="built_in">value</span> = <span class="number">0</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.DAGScheduler.stage.waitingStages <span class="built_in">value</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- Histograms ------------------------------------------------------------------</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.CodeGenerator.compilationTime</span><br><span class="line">             count = <span class="number">0</span></span><br><span class="line">               <span class="built_in">min</span> = <span class="number">0</span></span><br><span class="line">               <span class="built_in">max</span> = <span class="number">0</span></span><br><span class="line">              mean = <span class="number">0.00</span></span><br><span class="line">            stddev = <span class="number">0.00</span></span><br><span class="line">            <span class="built_in">median</span> = <span class="number">0.00</span></span><br><span class="line">              <span class="number">75</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">95</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">98</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">99</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">            <span class="number">99.9</span>% &lt;= <span class="number">0.00</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.CodeGenerator.generatedClassSize</span><br><span class="line">             count = <span class="number">0</span></span><br><span class="line">               <span class="built_in">min</span> = <span class="number">0</span></span><br><span class="line">               <span class="built_in">max</span> = <span class="number">0</span></span><br><span class="line">              mean = <span class="number">0.00</span></span><br><span class="line">            stddev = <span class="number">0.00</span></span><br><span class="line">            <span class="built_in">median</span> = <span class="number">0.00</span></span><br><span class="line">              <span class="number">75</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">95</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">98</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">99</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">            <span class="number">99.9</span>% &lt;= <span class="number">0.00</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.CodeGenerator.generatedMethodSize</span><br><span class="line">             count = <span class="number">0</span></span><br><span class="line">               <span class="built_in">min</span> = <span class="number">0</span></span><br><span class="line">               <span class="built_in">max</span> = <span class="number">0</span></span><br><span class="line">              mean = <span class="number">0.00</span></span><br><span class="line">            stddev = <span class="number">0.00</span></span><br><span class="line">            <span class="built_in">median</span> = <span class="number">0.00</span></span><br><span class="line">              <span class="number">75</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">95</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">98</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">99</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">            <span class="number">99.9</span>% &lt;= <span class="number">0.00</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.CodeGenerator.sourceCodeSize</span><br><span class="line">             count = <span class="number">0</span></span><br><span class="line">               <span class="built_in">min</span> = <span class="number">0</span></span><br><span class="line">               <span class="built_in">max</span> = <span class="number">0</span></span><br><span class="line">              mean = <span class="number">0.00</span></span><br><span class="line">            stddev = <span class="number">0.00</span></span><br><span class="line">            <span class="built_in">median</span> = <span class="number">0.00</span></span><br><span class="line">              <span class="number">75</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">95</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">98</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">              <span class="number">99</span>% &lt;= <span class="number">0.00</span></span><br><span class="line">            <span class="number">99.9</span>% &lt;= <span class="number">0.00</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- Timers ----------------------------------------------------------------------</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.DAGScheduler.messageProcessingTime</span><br><span class="line">             count = <span class="number">0</span></span><br><span class="line">         mean rate = <span class="number">0.00</span> calls/<span class="keyword">second</span></span><br><span class="line">     <span class="number">1</span>-minute rate = <span class="number">0.00</span> calls/<span class="keyword">second</span></span><br><span class="line">     <span class="number">5</span>-minute rate = <span class="number">0.00</span> calls/<span class="keyword">second</span></span><br><span class="line">    <span class="number">15</span>-minute rate = <span class="number">0.00</span> calls/<span class="keyword">second</span></span><br><span class="line">               <span class="built_in">min</span> = <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">               <span class="built_in">max</span> = <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">              mean = <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">            stddev = <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">            <span class="built_in">median</span> = <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">              <span class="number">75</span>% &lt;= <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">              <span class="number">95</span>% &lt;= <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">              <span class="number">98</span>% &lt;= <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">              <span class="number">99</span>% &lt;= <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line">            <span class="number">99.9</span>% &lt;= <span class="number">0.00</span> <span class="built_in">milliseconds</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">17</span>-<span class="number">5</span>-<span class="number">18</span> <span class="number">11</span>:<span class="number">31</span>:<span class="number">15</span> ===============================================================</span><br><span class="line"></span><br><span class="line">scala&gt; sc.parallelize(List(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)).count</span><br><span class="line">res1: Long = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">scala&gt; <span class="number">17</span>-<span class="number">5</span>-<span class="number">18</span> <span class="number">11</span>:<span class="number">33</span>:<span class="number">15</span> ===============================================================</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Timers ----------------------------------------------------------------------</span></span><br><span class="line"><span class="built_in">local</span>-<span class="number">1495078254084.</span>driver.DAGScheduler.messageProcessingTime</span><br><span class="line">             count = <span class="number">10</span></span><br><span class="line">         mean rate = <span class="number">0.07</span> calls/<span class="keyword">second</span></span><br><span class="line">     <span class="number">1</span>-minute rate = <span class="number">0.16</span> calls/<span class="keyword">second</span></span><br><span class="line">     <span class="number">5</span>-minute rate = <span class="number">0.03</span> calls/<span class="keyword">second</span></span><br><span class="line">    <span class="number">15</span>-minute rate = <span class="number">0.01</span> calls/<span class="keyword">second</span></span><br><span class="line">               <span class="built_in">min</span> = <span class="number">0.03</span> <span class="built_in">milliseconds</span></span><br><span class="line">               <span class="built_in">max</span> = <span class="number">1207.28</span> <span class="built_in">milliseconds</span></span><br><span class="line">              mean = <span class="number">125.02</span> <span class="built_in">milliseconds</span></span><br><span class="line">            stddev = <span class="number">358.42</span> <span class="built_in">milliseconds</span></span><br><span class="line">            <span class="built_in">median</span> = <span class="number">0.32</span> <span class="built_in">milliseconds</span></span><br><span class="line">              <span class="number">75</span>% &lt;= <span class="number">16.58</span> <span class="built_in">milliseconds</span></span><br><span class="line">              <span class="number">95</span>% &lt;= <span class="number">1207.28</span> <span class="built_in">milliseconds</span></span><br><span class="line">              <span class="number">98</span>% &lt;= <span class="number">1207.28</span> <span class="built_in">milliseconds</span></span><br><span class="line">              <span class="number">99</span>% &lt;= <span class="number">1207.28</span> <span class="built_in">milliseconds</span></span><br><span class="line">            <span class="number">99.9</span>% &lt;= <span class="number">1207.28</span> <span class="built_in">milliseconds</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ll /tmp/ -rth</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel    <span class="number">99</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.DAGScheduler.stage.waitingStages.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel    <span class="number">99</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.DAGScheduler.stage.runningStages.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel    <span class="number">99</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.DAGScheduler.stage.failedStages.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel   <span class="number">1.3</span>K  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.DAGScheduler.messageProcessingTime.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel    <span class="number">99</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.DAGScheduler.job.allJobs.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel    <span class="number">99</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.DAGScheduler.job.activeJobs.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel   <span class="number">676</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.CodeGenerator.sourceCodeSize.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel   <span class="number">676</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.CodeGenerator.generatedMethodSize.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel   <span class="number">676</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.CodeGenerator.generatedClassSize.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel   <span class="number">676</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.CodeGenerator.compilationTime.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel   <span class="number">113</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.BlockManager.memory.remainingMem_MB.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel    <span class="number">99</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.BlockManager.memory.memUsed_MB.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel   <span class="number">113</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.BlockManager.memory.maxMem_MB.csv</span><br><span class="line">-rw-r--r--   <span class="number">1</span> zhengqh  wheel    <span class="number">99</span>B  <span class="number">5</span> <span class="number">18</span> <span class="number">11</span>:<span class="number">36</span> local-<span class="number">1495078254084.</span>driver.BlockManager.disk.diskSpaceUsed_MB.csv</span><br><span class="line"></span><br><span class="line">➜  /tmp cat local-<span class="number">1495078254084.</span>driver.DAGScheduler.messageProcessingTime.csv</span><br><span class="line">t,count,max,mean,min,stddev,p50,p75,p95,p98,p99,p999,mean_rate,m1_rate,m5_rate,m15_rate,rate_unit,duration_unit</span><br><span class="line"><span class="number">1495078315</span>,<span class="number">0</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,calls/second,milliseconds</span><br><span class="line"><span class="number">1495078375</span>,<span class="number">0</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,<span class="number">0.000000</span>,calls/second,milliseconds</span><br><span class="line"><span class="number">1495078435</span>,<span class="number">10</span>,<span class="number">1207.284400</span>,<span class="number">125.017564</span>,<span class="number">0.027442</span>,<span class="number">358.422668</span>,<span class="number">0.317114</span>,<span class="number">16.580495</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">0.055257</span>,<span class="number">0.082101</span>,<span class="number">0.028931</span>,<span class="number">0.010599</span>,calls/second,milliseconds</span><br><span class="line"><span class="number">1495078495</span>,<span class="number">10</span>,<span class="number">1207.284400</span>,<span class="number">125.017564</span>,<span class="number">0.027442</span>,<span class="number">358.422668</span>,<span class="number">0.317114</span>,<span class="number">16.580495</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">0.041499</span>,<span class="number">0.030203</span>,<span class="number">0.023686</span>,<span class="number">0.009915</span>,calls/second,milliseconds</span><br><span class="line"><span class="number">1495078555</span>,<span class="number">10</span>,<span class="number">1207.284400</span>,<span class="number">125.017564</span>,<span class="number">0.027442</span>,<span class="number">358.422668</span>,<span class="number">0.317114</span>,<span class="number">16.580495</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">0.033225</span>,<span class="number">0.011111</span>,<span class="number">0.019393</span>,<span class="number">0.009276</span>,calls/second,milliseconds</span><br><span class="line"><span class="number">1495078577</span>,<span class="number">10</span>,<span class="number">1207.284400</span>,<span class="number">125.017564</span>,<span class="number">0.027442</span>,<span class="number">358.422668</span>,<span class="number">0.317114</span>,<span class="number">16.580495</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">0.030895</span>,<span class="number">0.007962</span>,<span class="number">0.018142</span>,<span class="number">0.009072</span>,calls/second,milliseconds</span><br><span class="line"><span class="number">1495078577</span>,<span class="number">10</span>,<span class="number">1207.284400</span>,<span class="number">125.017564</span>,<span class="number">0.027442</span>,<span class="number">358.422668</span>,<span class="number">0.317114</span>,<span class="number">16.580495</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">1207.284400</span>,<span class="number">0.030890</span>,<span class="number">0.007962</span>,<span class="number">0.018142</span>,<span class="number">0.009072</span>,calls/second,milliseconds</span><br></pre></td></tr></table></figure>
<h2 id="Spark_Cassandra_Metrics">Spark Cassandra Metrics</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">executor<span class="class">.source</span><span class="class">.cassandra-connector</span><span class="class">.class</span>=org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.metrics</span><span class="class">.CassandraConnectorSource</span></span><br><span class="line">driver<span class="class">.source</span><span class="class">.cassandra-connector</span><span class="class">.class</span>=org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.metrics</span><span class="class">.CassandraConnectorSource</span></span><br></pre></td></tr></table></figure>
<h2 id="Spark_Influx_Metrics">Spark Influx Metrics</h2><p><a href="https://github.com/palantir/spark-influx-sink">https://github.com/palantir/spark-influx-sink</a></p>
<p>spark.driver.extraClassPath=spark-influx-sink.jar:metrics-influxdb.jar<br>spark.executor.extraClassPath=spark-influx-sink.jar:metrics-influxdb.jar</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*<span class="class">.sink</span><span class="class">.influx</span><span class="class">.class</span>=org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.metrics</span><span class="class">.sink</span><span class="class">.InfluxDbSink</span></span><br><span class="line">*<span class="class">.sink</span><span class="class">.influx</span><span class="class">.protocol</span>=https</span><br><span class="line">*<span class="class">.sink</span><span class="class">.influx</span><span class="class">.host</span>=localhost</span><br><span class="line">*<span class="class">.sink</span><span class="class">.influx</span><span class="class">.port</span>=<span class="number">8086</span></span><br><span class="line">*<span class="class">.sink</span><span class="class">.influx</span><span class="class">.database</span>=my_metrics</span><br><span class="line">*<span class="class">.sink</span><span class="class">.influx</span><span class="class">.auth</span>=metric_client:PASSWORD</span><br><span class="line">*<span class="class">.sink</span><span class="class">.influx</span><span class="class">.tags</span>=product:my_product,parent:my_service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spark Metrics&lt;br&gt;
    
    </summary>
    
      <category term="spark" scheme="http://github.com/zqhxuyuan/categories/spark/"/>
    
    
      <category term="spark" scheme="http://github.com/zqhxuyuan/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>开源大数据ETL工具</title>
    <link href="http://github.com/zqhxuyuan/2017/02/15/2017-02-17-BigData-ETL/"/>
    <id>http://github.com/zqhxuyuan/2017/02/15/2017-02-17-BigData-ETL/</id>
    <published>2017-02-14T16:00:00.000Z</published>
    <updated>2017-02-25T07:13:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>BigData ETL Tools<br><a id="more"></a></p>
<h2 id="datatorrent(apex)">datatorrent(apex)</h2><p>执行<code>./datatorrent-rts-community-3.7.0.bin --help</code>打印帮助项</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@dp0653 <span class="operator"><span class="keyword">install</span>]$ sudo -u <span class="keyword">admin</span> ./datatorrent-rts-community-<span class="number">3.7</span><span class="number">.0</span>.<span class="keyword">bin</span> \</span><br><span class="line">-B /usr/<span class="keyword">install</span>/datatorrent-rts -<span class="keyword">g</span> <span class="number">9094</span> \</span><br><span class="line">-<span class="keyword">E</span> DT_LOG_DIR=/home/<span class="keyword">admin</span>/datatorrent \</span><br><span class="line">-<span class="keyword">E</span> DT_RUN_DIR=/home/<span class="keyword">admin</span>/run/datatorrent</span><br><span class="line"></span><br><span class="line">Verifying <span class="keyword">archive</span> integrity... All good.</span><br><span class="line">Uncompressing DataTorrent Distribution  <span class="number">100</span>%</span><br><span class="line"></span><br><span class="line">DataTorrent Platform <span class="number">3.7</span><span class="number">.0</span> will be installed <span class="keyword">under</span> /usr/<span class="keyword">install</span>/datatorrent-rts/releases/<span class="number">3.7</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line">dtGateway can be <span class="keyword">managed</span> <span class="keyword">with</span>: /usr/<span class="keyword">install</span>/datatorrent-rts/releases/<span class="number">3.7</span><span class="number">.0</span>/<span class="keyword">bin</span>/dtgateway [<span class="keyword">start</span>|<span class="keyword">stop</span>|<span class="keyword">status</span>]</span><br><span class="line">DTGateway <span class="keyword">is</span> running <span class="keyword">as</span> pid <span class="number">24571</span> <span class="keyword">and</span> listening <span class="keyword">on</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">9094</span></span><br><span class="line"></span><br><span class="line">Please <span class="keyword">finish</span> the remaining installation steps via DataTorrent Console <span class="keyword">at</span>: <span class="keyword">http</span>://dp0653:<span class="number">9094</span>/</span></span><br></pre></td></tr></table></figure>
<p>创建apex项目，并打包</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">name=salesapp</span><br><span class="line">version=3.5.0</span><br><span class="line"></span><br><span class="line">mvn -B archetype:generate \</span><br><span class="line">  -<span class="ruby"><span class="constant">DarchetypeGroupId</span>=org.apache.apex \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">DarchetypeArtifactId</span>=apex-app-archetype \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">DarchetypeVersion</span>=<span class="variable">$version</span>  \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">DgroupId</span>=com.example \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Dpackage</span>=com.example.<span class="variable">$name</span> \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">DartifactId</span>=<span class="variable">$name</span> \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Dversion</span>=<span class="number">1.0</span>-<span class="constant">SNAPSHOT</span></span></span><br></pre></td></tr></table></figure>
<p>上传到datatorrent平台</p>
<h2 id="StreamSets(https://github-com/streamsets/datacollector)">StreamSets(<a href="https://github.com/streamsets/datacollector">https://github.com/streamsets/datacollector</a>)</h2><h2 id="StreamFlow(https://github-com/lmco/streamflow)">StreamFlow(<a href="https://github.com/lmco/streamflow">https://github.com/lmco/streamflow</a>)</h2><h2 id="CDAP(https://github-com/caskdata/cdap)">CDAP(<a href="https://github.com/caskdata/cdap">https://github.com/caskdata/cdap</a>)</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;BigData ETL Tools&lt;br&gt;
    
    </summary>
    
      <category term="work" scheme="http://github.com/zqhxuyuan/categories/work/"/>
    
    
      <category term="bigdata" scheme="http://github.com/zqhxuyuan/tags/bigdata/"/>
    
  </entry>
  
  <entry>
    <title>开发者构建工具</title>
    <link href="http://github.com/zqhxuyuan/2017/01/01/Tools-Build/"/>
    <id>http://github.com/zqhxuyuan/2017/01/01/Tools-Build/</id>
    <published>2016-12-31T16:00:00.000Z</published>
    <updated>2017-07-18T07:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Maven,SBT构建工具<br><a id="more"></a></p>
<h2 id="Maven">Maven</h2><h3 id="assembly">assembly</h3><p>maven-assembly-plugin</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">descriptorRefs</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="title">descriptorRef</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">descriptorRefs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="title">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="title">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>maven-shade-plugin</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="title">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">goal</span>&gt;</span></span><br><span class="line">                    shade</span><br><span class="line">                <span class="tag">&lt;/<span class="title">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">minimizeJar</span>&gt;</span>true<span class="tag">&lt;/<span class="title">minimizeJar</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">shadedArtifactAttached</span>&gt;</span>true<span class="tag">&lt;/<span class="title">shadedArtifactAttached</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">shadedClassifierName</span>&gt;</span>fat<span class="tag">&lt;/<span class="title">shadedClassifierName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">relocations</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">relocation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">pattern</span>&gt;</span>com.google<span class="tag">&lt;/<span class="title">pattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">shadedPattern</span>&gt;</span>shaded.guava<span class="tag">&lt;/<span class="title">shadedPattern</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">include</span>&gt;</span>com.google.**<span class="tag">&lt;/<span class="title">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">excludes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">exclude</span>&gt;</span>com.google.common.base.Optional<span class="tag">&lt;/<span class="title">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">exclude</span>&gt;</span>com.google.common.base.Absent<span class="tag">&lt;/<span class="title">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">exclude</span>&gt;</span>com.google.common.base.Present<span class="tag">&lt;/<span class="title">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">excludes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">relocation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">relocations</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">filters</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">artifact</span>&gt;</span>*:*<span class="tag">&lt;/<span class="title">artifact</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">excludes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">exclude</span>&gt;</span>META-INF/*.SF<span class="tag">&lt;/<span class="title">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">exclude</span>&gt;</span>META-INF/*.DSA<span class="tag">&lt;/<span class="title">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">exclude</span>&gt;</span>META-INF/*.RSA<span class="tag">&lt;/<span class="title">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">excludes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">filters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[INFO] --- maven-jar-plugin:<span class="number">2.4</span>:jar (<span class="keyword">default</span>-jar) @ test ---</span><br><span class="line">[INFO] Building jar: /Users/zhengqh/Github/test/target/test-<span class="number">1.0</span>-SNAPSHOT.jar</span><br><span class="line">[INFO] --- maven-assembly-plugin:<span class="number">2.2</span>-beta-<span class="number">5</span>:single (make-assembly) @ test ---</span><br><span class="line">...</span><br><span class="line">[INFO] Building jar: /Users/zhengqh/Github/test/target/test-<span class="number">1.0</span>-SNAPSHOT-jar-with-dependencies.jar</span><br><span class="line">[INFO] Minimizing jar test:test:jar:<span class="number">1.0</span>-SNAPSHOT</span><br><span class="line"></span><br><span class="line">$ ll target</span><br><span class="line">-rw-r--r--  <span class="number">1</span> zhengqh  staff   <span class="number">8.1</span>M  <span class="number">6</span> <span class="number">22</span> <span class="number">11</span>:<span class="number">54</span> test-<span class="number">1.0</span>-SNAPSHOT-fat.jar</span><br><span class="line">-rw-r--r--  <span class="number">1</span> zhengqh  staff    <span class="number">29</span>M  <span class="number">6</span> <span class="number">22</span> <span class="number">11</span>:<span class="number">54</span> test-<span class="number">1.0</span>-SNAPSHOT-jar-with-dependencies.jar</span><br><span class="line">-rw-r--r--  <span class="number">1</span> zhengqh  staff   <span class="number">9.2</span>K  <span class="number">6</span> <span class="number">22</span> <span class="number">11</span>:<span class="number">54</span> test-<span class="number">1.0</span>-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>
<p>maven-assembly-plugin生成test-1.0-SNAPSHOT-jar-with-dependencies.jar<br>maven-shade-plugin的shadedClassifierName为<code>fat</code>，结果：test-1.0-SNAPSHOT-fat.jar</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  test jar -tvf target/test-<span class="number">1.0</span>-SNAPSHOT-jar-with-dependencies.jar|grep shaded</span><br><span class="line">assembly并不会重命令，只有shade才可以</span><br><span class="line"></span><br><span class="line">➜  test jar -tvf target/test-<span class="number">1.0</span>-SNAPSHOT-fat.jar|grep shaded</span><br><span class="line">     <span class="number">0</span> Thu Jun <span class="number">22</span> <span class="number">11</span>:<span class="number">54</span>:<span class="number">42</span> CST <span class="number">2017</span> shaded/</span><br><span class="line">     <span class="number">0</span> Thu Jun <span class="number">22</span> <span class="number">11</span>:<span class="number">54</span>:<span class="number">42</span> CST <span class="number">2017</span> shaded/guava/</span><br><span class="line">     <span class="number">0</span> Thu Jun <span class="number">22</span> <span class="number">11</span>:<span class="number">54</span>:<span class="number">42</span> CST <span class="number">2017</span> shaded/guava/common/</span><br><span class="line">     ...</span><br></pre></td></tr></table></figure>
<h3 id="install">install</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="operator"><span class="keyword">install</span>:<span class="keyword">install</span>-<span class="keyword">file</span> -Dfile=~/Downloads/ojdbc6-<span class="number">11.2</span><span class="number">.0</span><span class="number">.3</span>.jar -DgroupId=com.<span class="keyword">oracle</span> -DartifactId=ojdbc6 -Dversion=<span class="number">11.2</span><span class="number">.0</span> -Dpackaging=jar</span><br><span class="line"></span><br><span class="line">mvn <span class="keyword">install</span>:<span class="keyword">install</span>-<span class="keyword">file</span> -Dfile=pontus-api_2<span class="number">.11</span>-<span class="number">0.0</span><span class="number">.1</span>.jar -DgroupId=cn.fraudmetrix.pontus -DartifactId=pontus-api_2<span class="number">.11</span> -Dversion=<span class="number">0.0</span><span class="number">.1</span> -Dpackaging=jar</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[INFO] Building Maven Stub <span class="keyword">Project</span> (<span class="keyword">No</span> POM) <span class="number">1</span></span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[INFO]</span><br><span class="line">[INFO] <span class="comment">--- maven-install-plugin:2.4:install-file (default-cli) @ standalone-pom ---</span></span><br><span class="line">[INFO] Installing /<span class="keyword">Users</span>/zhengqh/pontus-api_2<span class="number">.11</span>-<span class="number">0.0</span><span class="number">.1</span>.jar <span class="keyword">to</span> /<span class="keyword">Users</span>/zhengqh/.m2/repository/cn/fraudmetrix/pontus/pontus-api_2<span class="number">.11</span>/<span class="number">0.0</span><span class="number">.1</span>/pontus-api_2<span class="number">.11</span>-<span class="number">0.0</span><span class="number">.1</span>.jar</span><br><span class="line">[INFO] Installing /<span class="keyword">var</span>/folders/xc/x0b8crk9667ddh1zhfs29_zr0000gn/<span class="keyword">T</span>/mvninstall1940592568391629100.pom <span class="keyword">to</span> /<span class="keyword">Users</span>/zhengqh/.m2/repository/cn/fraudmetrix/pontus/pontus-api_2<span class="number">.11</span>/<span class="number">0.0</span><span class="number">.1</span>/pontus-api_2<span class="number">.11</span>-<span class="number">0.0</span><span class="number">.1</span>.pom</span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[INFO] <span class="keyword">BUILD</span> <span class="keyword">SUCCESS</span></span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[INFO] Total <span class="keyword">time</span>: <span class="number">1.088</span> s</span><br><span class="line">[INFO] Finished <span class="keyword">at</span>: <span class="number">2017</span>-<span class="number">07</span>-<span class="number">17</span>T11:<span class="number">50</span>:<span class="number">49</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line">[INFO] <span class="keyword">Final</span> <span class="keyword">Memory</span>: <span class="number">6</span><span class="keyword">M</span>/<span class="number">64</span><span class="keyword">M</span></span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span></span><br></pre></td></tr></table></figure>
<h3 id="deploy">deploy</h3><p>源码包上传</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>deploy</span><br></pre></td></tr></table></figure>
<p>本地包上传到nexus</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">mvn deploy:deploy-file -DgroupId=&lt;group-id&gt; \</span><br><span class="line">  -<span class="ruby"><span class="constant">DartifactId</span>=&lt;artifact-id&gt; \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Dversion</span>=&lt;version&gt; \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Dpackaging</span>=&lt;type-of-packaging&gt; \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Dfile</span>=&lt;path-to-file&gt; \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">DrepositoryId</span>=&lt;id-to-map-on-server-section-of-settings.xml&gt; \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Durl</span>=&lt;url-of-the-repository-to-deploy&gt;</span><br><span class="line"></span></span><br><span class="line">mvn deploy:deploy-file -DgroupId=依赖项的GroupID \</span><br><span class="line">  -<span class="ruby"><span class="constant">DartifactId</span>=依赖项名称 \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Dversion</span>=依赖版本 \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Dpackaging</span>=jar \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Dfile</span>=三方库的文件路径 \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">DrepositoryId</span>=fraudmetrixRepo \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Durl</span>=<span class="symbol">http:</span>/<span class="regexp">/maven.fraudmetrix.cn/nexus</span><span class="regexp">/content/repositories</span><span class="regexp">/releases/</span></span><br><span class="line"></span></span><br><span class="line">repositoryId对应~/.m2/setting.xml中的server配置</span><br><span class="line"></span><br><span class="line">&lt;server&gt;</span><br><span class="line">  &lt;id&gt;fraudmetrixRepo&lt;/id&gt;</span><br><span class="line">  &lt;username&gt;xxx&lt;/username&gt;</span><br><span class="line">  &lt;password&gt;xxx&lt;/password&gt;</span><br><span class="line">&lt;/server&gt;</span><br><span class="line"></span><br><span class="line">部署pontus-api.jar</span><br><span class="line">mvn deploy:deploy-file -DgroupId=cn.fraudmetrix.pontus -DartifactId=pontus-api_2.11 -Dversion=0.0.1 \</span><br><span class="line"> -<span class="ruby"><span class="constant">Dpackaging</span>=jar -<span class="constant">Dfile</span>=pontus-api_2.<span class="number">11</span>-<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>.jar \</span><br><span class="line"></span> -<span class="ruby"><span class="constant">Durl</span>=<span class="symbol">http:</span>/<span class="regexp">/maven.fraudmetrix.cn/nexus</span><span class="regexp">/content/repositories</span><span class="regexp">/releases/</span> -<span class="constant">DrepositoryId</span>=fraudmetrixRepo  </span><br><span class="line"></span></span><br><span class="line">部署ojdbc.jar</span><br><span class="line">mvn deploy:deploy-file -Dfile=/Users/zhengqh/Downloads/install/ojdbc6-11.2.0.3.jar \</span><br><span class="line">  -<span class="ruby"><span class="constant">DgroupId</span>=com.oracle -<span class="constant">DartifactId</span>=ojdbc6 -<span class="constant">Dversion</span>=<span class="number">11.2</span>.<span class="number">0</span> -<span class="constant">Dpackaging</span>=jar \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Durl</span>=<span class="symbol">http:</span>/<span class="regexp">/maven.fraudmetrix.cn/nexus</span><span class="regexp">/content/repositories</span><span class="regexp">/releases/</span> -<span class="constant">DrepositoryId</span>=fraudmetrixRepo</span></span><br></pre></td></tr></table></figure>
<p>以-数字开头或者-V开头生成准备文件：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> files = <span class="keyword">new</span> java.io.<span class="type">File</span>(<span class="string">"/Users/zhengqh/Downloads/V100R002C60U20CP003/common/lib"</span>).listFiles.map(_.getName).filter(_.startsWith(<span class="string">"h"</span>)).toList</span><br><span class="line"><span class="keyword">import</span> scala.util.matching.<span class="type">Regex</span></span><br><span class="line"><span class="keyword">val</span> numitemPattern = <span class="string">"(.*)(-[0-9|V].*)"</span>.r</span><br><span class="line">files.foreach(file =&gt; &#123;</span><br><span class="line">  <span class="keyword">val</span> numitemPattern(art, version) = file</span><br><span class="line">  println(file + <span class="string">" "</span> + art + <span class="string">" "</span> + version.substring(<span class="number">1</span>).replace(<span class="string">".jar"</span>,<span class="string">""</span>))    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>导入到maven仓库：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat genMaven.txt | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  jar=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>1`</span><br><span class="line">  art=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>2`</span><br><span class="line">  ver=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>3`</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$jar</span> <span class="variable">$art</span> <span class="variable">$ver</span>"</span></span><br><span class="line">  mvn deploy:deploy-file -Dfile=<span class="variable">$jar</span> \</span><br><span class="line">  -DgroupId=com.huawei.fusion -DartifactId=<span class="variable">$art</span> -Dversion=<span class="string">"<span class="variable">$ver</span>-FSV100R002C60U20CP003"</span> -Dpackaging=jar \</span><br><span class="line">  -Durl=http://maven.fraudmetrix.cn/nexus/content/repositories/releases/ -DrepositoryId=fraudmetrixRepo</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>不更改groupId,从MANIFEST中获取groupId</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cat genMaven.txt | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  jarName=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>1`</span><br><span class="line">  art=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>2`</span><br><span class="line">  ver=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>3`</span><br><span class="line">  <span class="built_in">printf</span> <span class="string">"<span class="variable">$jarName</span> <span class="variable">$art</span> <span class="variable">$ver</span> "</span></span><br><span class="line">  jar xf <span class="variable">$jarName</span> META-INF/MANIFEST.MF</span><br><span class="line">  group=$(cat META-INF/MANIFEST.MF |grep Implementation-Vendor-Id |cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>2)</span><br><span class="line">  <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$group</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">printf</span> <span class="string">"<span class="variable">$group</span>"</span></span><br><span class="line">   <span class="built_in">print</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  rm -rf META-INF</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">cat genFS.txt | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  jarName=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>1`</span><br><span class="line">  art=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>2`</span><br><span class="line">  ver=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>3`</span><br><span class="line">  group=`<span class="built_in">echo</span> <span class="variable">$line</span> | cut <span class="operator">-d</span><span class="string">" "</span> <span class="operator">-f</span>4`</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$jarName</span> <span class="variable">$art</span> <span class="variable">$ver</span> <span class="variable">$group</span>"</span></span><br><span class="line">  mvn deploy:deploy-file -Dfile=<span class="variable">$jarName</span> \</span><br><span class="line">    -DgroupId=<span class="variable">$group</span> -DartifactId=<span class="variable">$art</span> -Dversion=<span class="string">"<span class="variable">$ver</span>-FSV100R002C60U20CP003"</span> -Dpackaging=jar \</span><br><span class="line">    -Durl=http://maven.fraudmetrix.cn/nexus/content/repositories/releases/ -DrepositoryId=fraudmetrixRepo  </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>找不到的jar包改版本后重新上传</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mvn deploy:deploy-file -Dfile=hadoop-yarn-server-tests-2.7.2.jar \</span><br><span class="line">  -<span class="ruby"><span class="constant">DgroupId</span>=org.apache.hadoop -<span class="constant">DartifactId</span>=hadoop-yarn-server-tests -<span class="constant">Dversion</span>=<span class="number">2.7</span>.<span class="number">2</span>-<span class="constant">FSV100R002C60U20CP003</span> -<span class="constant">Dpackaging</span>=jar \</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">Durl</span>=<span class="symbol">http:</span>/<span class="regexp">/maven.fraudmetrix.cn/nexus</span><span class="regexp">/content/repositories</span><span class="regexp">/releases/</span> -<span class="constant">DrepositoryId</span>=fraudmetrixRepo</span><br><span class="line"></span>  </span><br><span class="line">find ~/.m2/ -name "*.lastUpdated" | xargs rm</span><br></pre></td></tr></table></figure>
<h2 id="SBT">SBT</h2><h2 id="Ref">Ref</h2><ul>
<li><a href="https://stackoverflow.com/questions/13620281/what-is-the-maven-shade-plugin-used-for-and-why-would-you-want-to-relocate-java" target="_blank" rel="external">https://stackoverflow.com/questions/13620281/what-is-the-maven-shade-plugin-used-for-and-why-would-you-want-to-relocate-java</a></li>
<li><a href="https://www.elastic.co/blog/to-shade-or-not-to-shade#sthash.CRl8HKfN.dpbs" target="_blank" rel="external">https://www.elastic.co/blog/to-shade-or-not-to-shade#sthash.CRl8HKfN.dpbs</a></li>
<li><a href="http://ju.outofmemory.cn/entry/67085" target="_blank" rel="external">http://ju.outofmemory.cn/entry/67085</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Maven,SBT构建工具&lt;br&gt;
    
    </summary>
    
      <category term="tool" scheme="http://github.com/zqhxuyuan/categories/tool/"/>
    
    
      <category term="work" scheme="http://github.com/zqhxuyuan/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>监控工具集锦</title>
    <link href="http://github.com/zqhxuyuan/2016/12/31/Tools-BigData-Monitor/"/>
    <id>http://github.com/zqhxuyuan/2016/12/31/Tools-BigData-Monitor/</id>
    <published>2016-12-30T16:00:00.000Z</published>
    <updated>2017-04-05T03:19:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>监控工具：ZooKeeper，Kafka，Cassandra…<br><a id="more"></a></p>
<h2 id="ZooKeeper">ZooKeeper</h2><h3 id="node-zk-browser">node-zk-browser</h3><p>依赖条件：nodejs, npm</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/killme2008/node-zk-browser.git</span><br><span class="line">$ <span class="built_in">cd</span> node-zk-browser</span><br><span class="line">$ cat package.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"node-zk-browser"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"0.0.2"</span>,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"ejs"</span>: <span class="string">"0.7.2"</span>,</span><br><span class="line">    <span class="string">"express"</span>: <span class="string">"3.2.6"</span>,</span><br><span class="line">    <span class="string">"zookeeper"</span>:<span class="string">"*"</span>,</span><br><span class="line">    <span class="string">"express-namespace"</span>:<span class="string">"0.1.1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">$ npm install <span class="operator">-d</span></span><br><span class="line">$ node app.js</span><br><span class="line">Express server listening on port <span class="number">3000</span></span><br><span class="line">zk session established, id=<span class="number">154</span>a418d5dd000b</span><br></pre></td></tr></table></figure>
<p><a href="http://localhost:3000" target="_blank" rel="external">http://localhost:3000</a> admin:admin</p>
<p><img src="http://img.blog.csdn.net/20160516095143332" alt="node-zk"></p>
<h3 id="zkui">zkui</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/DeemOpen/zkui.git</span><br><span class="line">$ mvn clean install</span><br><span class="line">$ cp target/zkui-<span class="number">2.0</span>-SNAPSHOT-jar-with-dependencies.jar .</span><br><span class="line">$ java -jar zkui-<span class="number">2.0</span>-SNAPSHOT-jar-with-dependencies.jar</span><br></pre></td></tr></table></figure>
<p><a href="http://localhost:9090/" target="_blank" rel="external">http://localhost:9090/</a>  admin:manager</p>
<p><img src="http://img.blog.csdn.net/20160516094813768" alt="zkui"></p>
<h3 id="zk-web">zk-web</h3><p>依赖条件：lein</p>
<figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="char">$ </span>git clone <span class="method">https:</span>//github.com/qiuxiafei/zk-web</span><br><span class="line"><span class="char">$ </span>cd zk-web</span><br><span class="line"><span class="char">$ </span>lein deps</span><br><span class="line"><span class="char">$ </span>lein run</span><br></pre></td></tr></table></figure>
<p><a href="http://localhost:9090/" target="_blank" rel="external">http://localhost:9090/</a> admin:hello</p>
<p><img src="http://img.blog.csdn.net/20160516094831940" alt="zkweb"></p>
<h2 id="Kafka">Kafka</h2><h3 id="trifecta">trifecta</h3><p>下载<a href="https://github.com/ldaniels528/trifecta/releases">https://github.com/ldaniels528/trifecta/releases</a>中的zip包（web ui）， jar是命令行工具（trifecta_cli）。</p>
<p>依赖条件：scalascript</p>
<p><strong>编译并发布scalascript</strong>  </p>
<p>需要先将scalascript发布到本地仓库，默认sbt会发布到ivy下</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">➜  git clone https:<span class="comment">//github.com/ldaniels528/scalascript.git</span></span><br><span class="line">➜  cd scalascript </span><br><span class="line"></span><br><span class="line">修改sbt版本为当前安装的sbt版本，否则如果没有修改，会去下载，尽量使用已有的</span><br><span class="line">➜  cat project/build.properties  </span><br><span class="line">sbt.version=<span class="number">0.13</span><span class="number">.9</span></span><br><span class="line">➜  sbt publish-local  </span><br><span class="line">Getting org.scala-sbt sbt <span class="number">0.13</span><span class="number">.9</span> ...</span><br><span class="line">downloading http:<span class="comment">//repo.typesafe.com/typesafe/ivy-releases/org.scala-sbt/sbt/0.13.9/jars/sbt.jar ...</span></span><br><span class="line">    [SUCCESSFUL ] org.scala-sbt<span class="preprocessor">#sbt;<span class="number">0.13</span><span class="number">.9</span>!sbt.jar (<span class="number">5084</span>ms)</span></span><br><span class="line"></span><br><span class="line">使用<span class="number">0.13</span><span class="number">.11</span>就不会下载了</span><br><span class="line">➜  sbt publish-local</span><br><span class="line">[info] Loading global plugins from /Users/zhengqh/.sbt/<span class="number">0.13</span>/plugins</span><br><span class="line">[info] Loading project definition from /Users/zhengqh/Soft/scalascript/project</span><br><span class="line">[info] Packaging /Users/zhengqh/Soft/scalascript/target/scala-<span class="number">2.11</span>/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>-<span class="number">0.2</span><span class="number">.20</span>.jar ...</span><br><span class="line">[info] Done packaging.</span><br><span class="line">[info]  published scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span> to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>/<span class="number">0.2</span><span class="number">.20</span>/poms/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>.pom</span><br><span class="line">[info]  published scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span> to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>/<span class="number">0.2</span><span class="number">.20</span>/jars/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>.jar</span><br><span class="line">[info]  published scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span> to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>/<span class="number">0.2</span><span class="number">.20</span>/srcs/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>-sources.jar</span><br><span class="line">[info]  published scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span> to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>/<span class="number">0.2</span><span class="number">.20</span>/docs/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>-javadoc.jar</span><br><span class="line">[info]  published ivy to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/scalascript_sjs0<span class="number">.6</span>_2<span class="number">.11</span>/<span class="number">0.2</span><span class="number">.20</span>/ivys/ivy.xml</span><br><span class="line">[success] Total time: <span class="number">71</span> s, completed <span class="number">2016</span>-<span class="number">5</span>-<span class="number">16</span> <span class="number">10</span>:<span class="number">11</span>:<span class="number">20</span></span><br></pre></td></tr></table></figure>
<p><strong>编译并发布trifecta</strong></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  git clone https:<span class="comment">//github.com/ldaniels528/trifecta.git</span></span><br><span class="line">➜  cd trifecta</span><br><span class="line">➜  sbt publish-local</span><br><span class="line">[info]  published trifecta_cli_2<span class="number">.11</span> to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/trifecta_cli_2<span class="number">.11</span>/<span class="number">0.20</span><span class="number">.0</span>/poms/trifecta_cli_2<span class="number">.11</span>.pom</span><br><span class="line">[info]  published trifecta_cli_2<span class="number">.11</span> to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/trifecta_cli_2<span class="number">.11</span>/<span class="number">0.20</span><span class="number">.0</span>/jars/trifecta_cli_2<span class="number">.11</span>.jar</span><br><span class="line">[info]  published trifecta_cli_2<span class="number">.11</span> to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/trifecta_cli_2<span class="number">.11</span>/<span class="number">0.20</span><span class="number">.0</span>/srcs/trifecta_cli_2<span class="number">.11</span>-sources.jar</span><br><span class="line">[info]  published trifecta_cli_2<span class="number">.11</span> to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/trifecta_cli_2<span class="number">.11</span>/<span class="number">0.20</span><span class="number">.0</span>/docs/trifecta_cli_2<span class="number">.11</span>-javadoc.jar</span><br><span class="line">[info]  published ivy to /Users/zhengqh/.ivy2/local/com.github.ldaniels528/trifecta_cli_2<span class="number">.11</span>/<span class="number">0.20</span><span class="number">.0</span>/ivys/ivy.xml</span><br><span class="line">[success] Total time: <span class="number">75</span> s, completed <span class="number">2016</span>-<span class="number">5</span>-<span class="number">16</span> <span class="number">9</span>:<span class="number">51</span>:<span class="number">09</span></span><br></pre></td></tr></table></figure>
<p>现在已经编译好了trifecta_cli_2.11，这和release的cli.jar是一样的。 不过我们想要编译ui的话：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">➜  sbt "project trifecta_ui" dist</span><br><span class="line">[info] Loading global plugins from /Users/zhengqh/.sbt/0.13/plugins</span><br><span class="line">[info] Loading project definition from /Users/zhengqh/Soft/trifecta/project</span><br><span class="line">[info] <span class="operator"><span class="keyword">Set</span> <span class="keyword">current</span> <span class="keyword">project</span> <span class="keyword">to</span> trifecta_core (<span class="keyword">in</span> <span class="keyword">build</span> <span class="keyword">file</span>:/<span class="keyword">Users</span>/zhengqh/Soft/trifecta/)</span><br><span class="line">[info] <span class="keyword">Set</span> <span class="keyword">current</span> <span class="keyword">project</span> <span class="keyword">to</span> trifecta_cli (<span class="keyword">in</span> <span class="keyword">build</span> <span class="keyword">file</span>:/<span class="keyword">Users</span>/zhengqh/Soft/trifecta/)</span><br><span class="line">[info] <span class="keyword">Set</span> <span class="keyword">current</span> <span class="keyword">project</span> <span class="keyword">to</span> trifecta_ui (<span class="keyword">in</span> <span class="keyword">build</span> <span class="keyword">file</span>:/<span class="keyword">Users</span>/zhengqh/Soft/trifecta/)</span><br><span class="line">...</span><br><span class="line">[info] Done packaging.</span><br><span class="line">[info]</span><br><span class="line">[info] Your <span class="keyword">package</span> <span class="keyword">is</span> ready <span class="keyword">in</span> /<span class="keyword">Users</span>/zhengqh/Soft/trifecta/app-play/target/universal/trifecta_ui-<span class="number">0.20</span><span class="number">.0</span>.zip</span><br><span class="line">[info]</span><br><span class="line">[<span class="keyword">success</span>] Total <span class="keyword">time</span>: <span class="number">109</span> s, completed <span class="number">2016</span>-<span class="number">5</span>-<span class="number">16</span> <span class="number">10</span>:<span class="number">15</span>:<span class="number">01</span></span><br><span class="line"></span><br><span class="line">➜  unzip /<span class="keyword">Users</span>/zhengqh/Soft/trifecta/app-play/target/universal/trifecta_ui-<span class="number">0.20</span><span class="number">.0</span>.zip</span><br><span class="line"><span class="keyword">Archive</span>:  /<span class="keyword">Users</span>/zhengqh/Soft/trifecta/app-play/target/universal/trifecta_ui-<span class="number">0.20</span><span class="number">.0</span>.zip</span><br><span class="line">➜  cd trifecta_ui-<span class="number">0.20</span><span class="number">.0</span>/<span class="keyword">bin</span></span><br><span class="line">➜  ./trifecta_ui</span><br><span class="line">[info] <span class="keyword">p</span>.a.<span class="keyword">l</span>.<span class="keyword">c</span>.ActorSystemProvider - <span class="keyword">Starting</span> application <span class="keyword">default</span> Akka <span class="keyword">system</span>: application</span><br><span class="line">[info] application - Application has started</span><br><span class="line">[info] play.api.Play$ - Application started (Prod)</span><br><span class="line">[info] <span class="keyword">p</span>.<span class="keyword">c</span>.s.NettyServer$ - Listening <span class="keyword">for</span> <span class="keyword">HTTP</span> <span class="keyword">on</span> /<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">0</span>:<span class="number">9000</span></span><br><span class="line">[info] application - Loading Trifecta configuration...</span><br><span class="line">[info] application - <span class="keyword">Starting</span> Zookeeper <span class="keyword">client</span>...</span><br><span class="line">[info] application - created actor com.github.ldaniels528.trifecta.actors.SSEClientHandlingActor</span><br><span class="line">[info] application - Registering <span class="keyword">new</span> SSE <span class="keyword">session</span> <span class="string">'8d82b54dc125406f875c98e9f05e4a4f'</span>...</span><br><span class="line">[info] application - <span class="keyword">GET</span> /api/sse/<span class="keyword">connect</span> ~&gt; <span class="number">200</span> [<span class="number">927.0</span> ms]</span></span><br></pre></td></tr></table></figure>
<p><a href="http://localhost:9000" target="_blank" rel="external">http://localhost:9000</a></p>
<p><img src="http://img.blog.csdn.net/20160516102612129" alt="trifecta"></p>
<h3 id="Kafka_Offset_Monitor(https://github-com/quantifind/KafkaOffsetMonitor)">Kafka Offset Monitor(<a href="https://github.com/quantifind/KafkaOffsetMonitor">https://github.com/quantifind/KafkaOffsetMonitor</a>)</h3><h3 id="Kafka_Monitor()">Kafka Monitor()</h3><h2 id="Cassandra">Cassandra</h2><h3 id="Riemman">Riemman</h3><h4 id="准备工作">准备工作</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rvm install <span class="number">1.9</span><span class="number">.3</span> --with-gcc=clang</span><br><span class="line">rvm <span class="number">1.9</span><span class="number">.3</span> --<span class="keyword">default</span></span><br><span class="line">rvm <span class="built_in">list</span></span><br><span class="line">ruby -v</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//aphyr.com/riemann/riemann-0.2.11.tar.bz2</span></span><br><span class="line">tar xvfj riemann-<span class="number">0.2</span><span class="number">.11</span>.tar.bz2</span><br><span class="line">cd riemann-<span class="number">0.2</span><span class="number">.11</span></span><br><span class="line"></span><br><span class="line">➜  riemann-<span class="number">0.2</span><span class="number">.11</span> bin/riemann etc/riemann.config</span><br><span class="line">INFO [<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">11</span>:<span class="number">50</span>:<span class="number">49</span>,<span class="number">069</span>] main - riemann.bin - PID <span class="number">70661</span></span><br><span class="line">INFO [<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">11</span>:<span class="number">50</span>:<span class="number">49</span>,<span class="number">078</span>] main - riemann.bin - Loading /Users/zhengqh/Soft/riemann-<span class="number">0.2</span><span class="number">.11</span>/etc/riemann.config</span><br><span class="line">INFO [<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">11</span>:<span class="number">50</span>:<span class="number">49</span>,<span class="number">334</span>] clojure-agent-send-off-pool-<span class="number">1</span> - riemann.transport.websockets - Websockets server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">5556</span> online</span><br><span class="line">INFO [<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">11</span>:<span class="number">50</span>:<span class="number">49</span>,<span class="number">629</span>] clojure-agent-send-off-pool-<span class="number">2</span> - riemann.transport.udp - UDP server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">5555</span> <span class="number">16384</span> -<span class="number">1</span> online</span><br><span class="line">INFO [<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">11</span>:<span class="number">50</span>:<span class="number">49</span>,<span class="number">656</span>] clojure-agent-send-off-pool-<span class="number">3</span> - riemann.transport.tcp - TCP server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">5555</span> online</span><br><span class="line">INFO [<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">11</span>:<span class="number">50</span>:<span class="number">49</span>,<span class="number">659</span>] main - riemann.core - Hyperspace core online</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">gem install riemann-client riemann-tools riemann-dash</span><br><span class="line"></span><br><span class="line">➜  ~ riemann-dash</span><br><span class="line">DEPRECATION WARNING:</span><br><span class="line">Sass <span class="number">3.5</span> will no longer support Ruby <span class="number">1.9</span><span class="number">.3</span>.</span><br><span class="line">Please upgrade to Ruby <span class="number">2.0</span><span class="number">.0</span> or greater as soon as possible.</span><br><span class="line"></span><br><span class="line">No configuration loaded; <span class="keyword">using</span> defaults.</span><br><span class="line">[<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">12</span>:<span class="number">12</span>:<span class="number">35</span>] INFO  WEBrick <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">[<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">12</span>:<span class="number">12</span>:<span class="number">35</span>] INFO  ruby <span class="number">1.9</span><span class="number">.3</span> (<span class="number">2014</span>-<span class="number">11</span>-<span class="number">13</span>) [x86_64-darwin14<span class="number">.1</span><span class="number">.1</span>]</span><br><span class="line">== Sinatra (v1<span class="number">.4</span><span class="number">.7</span>) has taken the stage on <span class="number">4567</span> <span class="keyword">for</span> development with backup from WEBrick</span><br><span class="line">[<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">12</span>:<span class="number">12</span>:<span class="number">35</span>] INFO  WEBrick::HTTPServer<span class="preprocessor">#start: pid=<span class="number">20843</span> port=<span class="number">4567</span></span></span><br></pre></td></tr></table></figure>
<p>Mac下command并单击某个区域，这部分会变成深灰色</p>
<p><img src="http://img.blog.csdn.net/20160519131446630" alt="rieman1"></p>
<p>按快捷键e，出现编辑页面</p>
<p><img src="http://img.blog.csdn.net/20160519131501802" alt="rieman2"></p>
<p>点击Apply后，按Esc键，会退出编辑状态，深灰色变为正常颜色</p>
<p><img src="http://img.blog.csdn.net/20160519131513286" alt="rieman3"></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ riemann-health</span><br></pre></td></tr></table></figure>
<p>打包：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  riemann-cassandra <span class="string">git:</span>(master) ✗ mvn <span class="keyword">package</span></span><br><span class="line">[INFO] Replacing <span class="regexp">/Users/</span>zhengqh<span class="regexp">/Github/</span>riemann-cassandra<span class="regexp">/target/</span>riemann-cassandra-<span class="number">0.0</span><span class="number">.3</span>.jar with </span><br><span class="line"><span class="regexp">/Users/</span>zhengqh<span class="regexp">/Github/</span>riemann-cassandra<span class="regexp">/target/</span>riemann-cassandra-<span class="number">0.0</span><span class="number">.3</span>-shaded.jar</span><br></pre></td></tr></table></figure>
<p>启动客户端：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">java -jar target/riemann-cassandra-<span class="number">0.0</span><span class="number">.3</span>.jar \</span><br><span class="line">    -riemann_host localhost \</span><br><span class="line">    -riemann_port <span class="number">5555</span> \</span><br><span class="line">    -cassandra_host localhost \</span><br><span class="line">    -jmx_port <span class="number">7199</span> \</span><br><span class="line">    -jmx_username null \</span><br><span class="line">    -jmx_password null \</span><br><span class="line">    -interval_seconds <span class="number">5</span></span><br><span class="line"></span><br><span class="line">success start riemann-cassandra-client............@Thu May <span class="number">19</span> <span class="number">14</span>:<span class="number">50</span>:<span class="number">04</span> CST <span class="number">2016</span></span><br><span class="line">^Cclosed riemann-cassandra-client@Thu May <span class="number">19</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">28</span> CST <span class="number">2016</span></span><br></pre></td></tr></table></figure>
<p>Event的格式：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="attribute">host</span>: <span class="string">"www1"</span>, </span><br><span class="line">    <span class="attribute">service</span>: <span class="string">"http req"</span>, </span><br><span class="line">    <span class="attribute">metric</span>: <span class="number">2.53</span>, </span><br><span class="line">    <span class="attribute">state</span>: <span class="string">"critical"</span>, </span><br><span class="line">    <span class="attribute">description</span>: <span class="string">"Request took 2.53 seconds."</span>, </span><br><span class="line">    <span class="attribute">tags</span>: [<span class="string">"http"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对应的riemann后台日志：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO [<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">14</span>:<span class="number">01</span>:<span class="number">46</span>,<span class="number">512</span>] Thread-<span class="number">7</span> - riemann.config - expired </span><br><span class="line">&#123;:host www1, :service http req, :state expired, :time <span class="number">365909426627</span>/<span class="number">250</span>, :ttl <span class="number">60</span>&#125;</span><br></pre></td></tr></table></figure>
<p>riemann-cassandra中的事件格式：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="attribute">host</span>: <span class="string">"localhost"</span>, </span><br><span class="line">    <span class="attribute">service</span>: <span class="string">"cassandra.db.forseti.velocity_global.max_row_size_ob"</span>, </span><br><span class="line">    <span class="attribute">metric</span>: <span class="number">148</span>,</span><br><span class="line">    <span class="attribute">tags</span>: [<span class="string">"cassandra"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>riemann服务端后台日志：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO [<span class="number">2016</span>-<span class="number">05</span>-<span class="number">19</span> <span class="number">16</span>:<span class="number">47</span>:<span class="number">54</span>,<span class="number">195</span>] Thread-<span class="number">7</span> - riemann.config - expired </span><br><span class="line">&#123;:host <span class="number">10.57</span><span class="number">.2</span><span class="number">.36</span>, :service cassandra.db.forseti.velocity_partner.mean_row_size_kb, :state expired, :time <span class="number">292729534839</span>/<span class="number">200</span>, :ttl <span class="number">60</span>&#125;</span><br></pre></td></tr></table></figure>
<p>查询所有表的read_latency, query中支持不同的查询</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tagged <span class="string">"cassandra"</span>  <span class="keyword">and</span> service =~ <span class="string">"cassandra.db.forseti.%.read_%"</span></span><br></pre></td></tr></table></figure>
<h2 id="Tracing">Tracing</h2><ul>
<li><a href="http://htrace.incubator.apache.org/" target="_blank" rel="external">http://htrace.incubator.apache.org/</a></li>
<li><a href="https://github.com/naver/pinpoint">https://github.com/naver/pinpoint</a></li>
<li></li>
</ul>
<h3 id="zipkin">zipkin</h3><p>准备环境</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alias <span class="variable">npm=</span><span class="string">"npm --registry=https://registry.npm.taobao.org --disturl=https://npm.taobao.org/mirrors/node"</span></span><br><span class="line">yum install npm -y</span><br><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/creationix/nvm.git</span><br><span class="line">source nvm/install.sh</span><br><span class="line"><span class="keyword">node</span><span class="identifier"> </span><span class="title">-v</span> &amp;&amp; npm -v &amp;&amp; nvm -v</span><br><span class="line">nvm install v5.<span class="number">5.0</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tar zxf zipkin-<span class="number">1.40</span><span class="number">.1</span>.tar.gz</span><br><span class="line">$ cd zipkin-<span class="number">1.40</span><span class="number">.1</span></span><br><span class="line">$ bin/query</span><br></pre></td></tr></table></figure>
<p>vi zipkin-ui/webpack.config.js</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">:zipkin-ui:npmBuild</span><br><span class="line"></span><br><span class="line">&gt; zipkin-ui@<span class="number">0.0</span><span class="number">.0</span> build /home/qihuang.zheng/zipkin-<span class="number">1.40</span><span class="number">.1</span>/zipkin-ui</span><br><span class="line">&gt; node node_modules/webpack/bin/webpack.js --bail</span><br><span class="line"></span><br><span class="line">ModuleBuildError: Module build failed: Error: /home/qihuang.zheng/zipkin-<span class="number">1.40</span><span class="number">.1</span>/zipkin-ui/node_modules/node-sass/vendor/linux-x64-<span class="number">47</span>/binding.node: ELF load command past end of file</span><br><span class="line">npm ERR! Linux <span class="number">3.10</span><span class="number">.96</span>-<span class="number">1.</span>el6.elrepo.x86_64</span><br><span class="line">npm ERR! argv <span class="string">"/home/qihuang.zheng/zipkin-1.40.1/zipkin-ui/build/nodejs/node-v5.5.0-linux-x64/bin/node"</span> <span class="string">"/home/qihuang.zheng/zipkin-1.40.1/zipkin-ui/build/nodejs/node-v5.5.0-linux-x64/lib/node_modules/npm/bin/npm-cli.js"</span> <span class="string">"run-script"</span> <span class="string">"build"</span></span><br><span class="line">npm ERR! node v5<span class="number">.5</span><span class="number">.0</span></span><br><span class="line">npm ERR! npm  v3<span class="number">.3</span><span class="number">.12</span></span><br><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line">npm ERR! zipkin-ui@<span class="number">0.0</span><span class="number">.0</span> build: `node node_modules/webpack/bin/webpack.js --bail`</span><br><span class="line">npm ERR! Exit status <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="cat">cat</h3><h3 id="HTrace">HTrace</h3><h2 id="Operation">Operation</h2><h3 id="FrameGraph">FrameGraph</h3><p>git clone <a href="https://github.com/brendangregg/FlameGraph">https://github.com/brendangregg/FlameGraph</a><br>cd FlameGraph<br>sudo perf record –call-graph dwarf -p $(pgrep scylla)<br>sudo perf script | <code>pwd</code>/stackcollapse-perf.pl | <code>pwd</code>/flamegraph.pl &gt; flame.svg</p>
<p><a href="http://blog.csdn.net/justlinux2010/article/details/11520829" target="_blank" rel="external">http://blog.csdn.net/justlinux2010/article/details/11520829</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;监控工具：ZooKeeper，Kafka，Cassandra…&lt;br&gt;
    
    </summary>
    
      <category term="work" scheme="http://github.com/zqhxuyuan/categories/work/"/>
    
    
      <category term="ops" scheme="http://github.com/zqhxuyuan/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>Daily Work</title>
    <link href="http://github.com/zqhxuyuan/2016/12/31/Daily/"/>
    <id>http://github.com/zqhxuyuan/2016/12/31/Daily/</id>
    <published>2016-12-30T16:00:00.000Z</published>
    <updated>2017-07-17T10:36:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>日常工作常用命令（Linux、Mac）<br><a id="more"></a></p>
<h1 id="Linux_Daily">Linux Daily</h1><h2 id="1-_rpm简单命令">1. rpm简单命令</h2><p>查看已经安装的软件 <figure class="highlight"><figcaption><span>-qa | grep mysql```  </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#24378;&#21147;&#21368;&#36733;&#36719;&#20214; ```rpm -e --nodeps mysql```  &#10;&#23433;&#35013;&#36719;&#20214; ```rpm -ivy xxx.rpm```  &#10;&#10;## 2. yum&#19979;&#36733;&#28304;</span><br></pre></td></tr></table></figure></p>
<p>cd /etc/yum.repos.d<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="blockquote">&gt; 如果是RHEL, 则/etc/yum.repos.d下没有任何源.   </span></span><br><span class="line"><span class="blockquote">&gt; 可以通过rpm -ivh epel*.rpm安装源. 安装后会在/etc/yum.repos.d下生成repl.repo文件.   </span></span><br><span class="line"><span class="blockquote">&gt; 如果是CentOS, 则有CentOS-Base.repo. 在确保虚拟机能够ping通外网, 可以直接通过wget获取文件.   </span></span><br><span class="line"></span><br><span class="line"><span class="header">### RHEL使用163源</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">http:</span>//<span class="attribute">boris05.blog.51cto.com</span>/<span class="attribute">1073705</span>/<span class="attribute">1439865</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">删除redhat原有的yum源 <span class="code">```</span>rpm -aq|grep yum|xargs rpm -e --nodeps</span><br></pre></td></tr></table></figure></p>
<p>下载yum安装文件 163 6.5</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.163.com/centos</span><span class="regexp">/6.5/os</span><span class="regexp">/x86_64/</span><span class="constant">Packages</span>/yum-<span class="number">3.2</span>.<span class="number">29</span>-<span class="number">40</span>.el6.centos.noarch.rpm </span><br><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.163.com/centos</span><span class="regexp">/6.5/os</span><span class="regexp">/x86_64/</span><span class="constant">Packages</span>/yum-metadata-parser-<span class="number">1.1</span>.<span class="number">2</span>-<span class="number">16</span>.el6.x86_64.rpm</span><br><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.163.com/centos</span><span class="regexp">/6.5/os</span><span class="regexp">/x86_64/</span><span class="constant">Packages</span>/yum-plugin-fastestmirror-<span class="number">1.1</span>.<span class="number">30</span>-<span class="number">14</span>.el6.noarch.rpm</span><br><span class="line">wget <span class="symbol">http:</span>/<span class="regexp">/mirrors.163.com/centos</span><span class="regexp">/6.5/os</span><span class="regexp">/x86_64/</span><span class="constant">Packages</span>/python-iniparse-<span class="number">0.3</span>.<span class="number">1</span>-<span class="number">2.1</span>.el6.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>进行安装yum</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh python<span class="keyword">*</span></span><br><span class="line">rpm -ivh yum<span class="keyword">*</span></span><br></pre></td></tr></table></figure>
<p>更改yum源</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum<span class="class">.repos</span><span class="class">.d</span>/</span><br><span class="line">vim /etc/yum<span class="class">.repos</span><span class="class">.d</span>/rhel<span class="class">.repo</span> </span><br><span class="line"></span><br><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base</span><br><span class="line">baseurl=http:<span class="comment">//mirrors.163.com/centos/6.5/os/$basearch/</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=http:<span class="comment">//mirrors.163.com/centos/RPM-GPG-KEY-CentOS-6</span></span><br><span class="line"><span class="id">#released</span> updates</span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Updates</span><br><span class="line">baseurl=http:<span class="comment">//mirrors.163.com/centos/6.5/updates/$basearch/</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=http:<span class="comment">//mirrors.163.com/centos/RPM-GPG-KEY-CentOS-6</span></span><br><span class="line"><span class="id">#packages</span> used/produced <span class="keyword">in</span> the build but not released</span><br><span class="line">#[addons]</span><br><span class="line">#name=CentOS-<span class="variable">$releasever</span> - Addons</span><br><span class="line">#baseurl=http:<span class="comment">//mirrors.163.com/centos/$releasever/addons/$basearch/</span></span><br><span class="line">#gpgcheck=<span class="number">1</span></span><br><span class="line">#gpgkey=http:<span class="comment">//mirrors.163.com/centos/RPM-GPG-KEY-CentOS-6</span></span><br><span class="line"><span class="hexcolor">#add</span>itional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Extras</span><br><span class="line">baseurl=http:<span class="comment">//mirrors.163.com/centos/6.5/extras/$basearch/</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=http:<span class="comment">//mirrors.163.com/centos/RPM-GPG-KEY-CentOS-6</span></span><br><span class="line"><span class="hexcolor">#add</span>itional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Plus</span><br><span class="line">baseurl=http:<span class="comment">//mirrors.163.com/centos/6.5/centosplus/$basearch/</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">enabled=<span class="number">0</span></span><br><span class="line">gpgkey=http:<span class="comment">//mirrors.163.com/centos/RPM-GPG-KEY-CentOS-6</span></span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line">yum update</span><br></pre></td></tr></table></figure>
<h3 id="EPEL-7_下载源">EPEL-7 下载源</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># wget http:<span class="comment">//dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-1.noarch.rpm </span></span></span><br><span class="line"><span class="preprocessor"># rpm -ivh epel-release-<span class="number">7</span>-<span class="number">1.</span>noarch.rpm </span></span><br><span class="line"><span class="preprocessor"># rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-<span class="number">7</span></span></span><br></pre></td></tr></table></figure>
<h3 id="EPEL-6_下载源">EPEL-6 下载源</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># wget http:<span class="comment">//dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm   </span></span></span><br><span class="line"><span class="preprocessor"># rpm -ivh epel-release-<span class="number">6</span>-<span class="number">8.</span>noarch.rpm </span></span><br><span class="line"><span class="preprocessor"># rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-<span class="number">6</span></span></span><br></pre></td></tr></table></figure>
<p>注意如果是CentOS, 则最后的rpm –import要修改成CentOS-6 </p>
<h3 id="CentOS使用阿里云源">CentOS使用阿里云源</h3><h3 id="CentOS-163源">CentOS-163源</h3><p>对于CentOS, /etc/yum.repos.d下有CentOS-Base.repo, 可以直接用别的源替换默认的, 或者新增加源. </p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># wget http:<span class="comment">//mirrors.163.com/.help/CentOS6-Base-163.repo </span></span><br><span class="line"></span><br><span class="line">mv /etc/yum.repos.<span class="keyword">d</span>/CentOS-Base.repo /etc/yum.repos.<span class="keyword">d</span>/CentOS-Base.repo.backup</span><br><span class="line">wget -O /etc/yum.repos.<span class="keyword">d</span>/CentOS-Base.repo http:<span class="comment">//mirrors.aliyun.com/repo/Centos-6.repo</span></span><br><span class="line">mv /etc/yum.repos.<span class="keyword">d</span>/epel.repo /etc/yum.repos.<span class="keyword">d</span>/epel.repo.backup</span><br><span class="line">mv /etc/yum.repos.<span class="keyword">d</span>/epel-testing.repo /etc/yum.repos.<span class="keyword">d</span>/epel-testing.repo.backup</span><br><span class="line">wget -O /etc/yum.repos.<span class="keyword">d</span>/epel.repo http:<span class="comment">//mirrors.aliyun.com/repo/epel-6.repo</span></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>
<p>更新源 </p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># yum clean all </span></span><br><span class="line"><span class="preprocessor"># yum makecache </span></span><br><span class="line"><span class="preprocessor"># yum update </span></span><br><span class="line"><span class="preprocessor"># yum repolist</span></span><br></pre></td></tr></table></figure>
<h2 id="3-_安装基本软件">3. 安装基本软件</h2><p><strong>1. 确保能够上网, 并且yum repolist有数据, 比如先下个163的源. 当服务器稳定之后, 可以禁用源(文件后缀改下即可)</strong></p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># yum install wget</span></span><br></pre></td></tr></table></figure>
<p><strong>2.英文环境 </strong></p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># vi ~/.bashrc </span></span><br><span class="line">export LANG=en_US.UTF-<span class="number">8</span></span><br><span class="line"><span class="preprocessor"># source ~/.bashrc </span></span><br><span class="line"><span class="preprocessor"># vi /etc/sysconfig/i18n </span></span><br><span class="line">LANG=<span class="string">"en_US.UTF-8"</span></span><br></pre></td></tr></table></figure>
<p><strong>3. 安装gcc, git等</strong></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># yum group <span class="operator"><span class="keyword">install</span> <span class="string">"Development Tools"</span>     <span class="comment">--&gt; CentOS6要使用yum groupinstall中间没有空格!</span></span><br><span class="line"># yum grouplist </span><br><span class="line">Loaded plugins: fastestmirror, product-<span class="keyword">id</span>, subscription-manager </span><br><span class="line">This <span class="keyword">system</span> <span class="keyword">is</span> <span class="keyword">not</span> registered <span class="keyword">to</span> Red Hat Subscription <span class="keyword">Management</span>. You can <span class="keyword">use</span> subscription-manager <span class="keyword">to</span> <span class="keyword">register</span>. </span><br><span class="line">Setting up <span class="keyword">Group</span> Process </span><br><span class="line">Loading mirror speeds <span class="keyword">from</span> cached hostfile </span><br><span class="line">Installed <span class="keyword">Groups</span>: </span><br><span class="line">   Console internet tools </span><br><span class="line">   Development tools </span><br><span class="line">   <span class="keyword">E</span>-mail <span class="keyword">server</span> </span><br><span class="line">   Perl Support </span><br><span class="line">   <span class="keyword">Security</span> Tools</span></span><br></pre></td></tr></table></figure>
<p>这里已经安装了Development tools, 所以会显示在Installed Groups里.  注意不是yum group list<br>如果没有安装, 会显示在Available Groups里.  上一步的英文环境很重要, 否则如果是中文环境, 你就不知道要安装哪个组了. </p>
<p><strong>4.yum安装MySQL客户端和服务器</strong> </p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># yum info mysql </span><br><span class="line"># yum <span class="keyword">list</span> | <span class="keyword">grep</span> mysql </span><br><span class="line"># yum groupinfo <span class="string">"MySQL Database server"</span> </span><br><span class="line"># yum groupinfo <span class="string">"MySQL Database client"</span> </span><br><span class="line"> Mandatory Package<span class="variable">s:</span> </span><br><span class="line">   mysql </span><br><span class="line"> Default Package<span class="variable">s:</span> </span><br><span class="line">   MySQL-<span class="keyword">python</span> </span><br><span class="line">   mysql-connector-odbc </span><br><span class="line"> Optional Package<span class="variable">s:</span> </span><br><span class="line">   libdbi-dbd-mysql </span><br><span class="line">   mysql-connector-java </span><br><span class="line">   <span class="keyword">perl</span>-DBD-MySQL</span><br></pre></td></tr></table></figure>
<p>当然也可以单独一个一个安装. 同样要注意在/etc/yum.repos.d中要存在163, 或者epel等源. 否则如果没有源, 安装任何软件都没有数据.</p>
<p><a href="http://www.cnblogs.com/xiaoluo501395377/archive/2013/04/07/3003278.html" target="_blank" rel="external">http://www.cnblogs.com/xiaoluo501395377/archive/2013/04/07/3003278.html</a>  </p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># yum install mysql mysql-server mysql-devel </span></span><br><span class="line"><span class="preprocessor"># service mysqld start </span></span><br><span class="line"><span class="preprocessor"># netstat -anpt | grep 3306 </span></span><br><span class="line"><span class="preprocessor"># chkconfig --add mysqld </span></span><br><span class="line"><span class="preprocessor"># chkconfig --list | grep mysqld </span></span><br><span class="line"><span class="preprocessor"># chkconfig mysqld on </span></span><br><span class="line"><span class="preprocessor"># mysqladmin -u root password 'root' </span></span><br><span class="line"><span class="preprocessor"># mysql -u root -p </span></span><br><span class="line">&gt; show databases;</span><br></pre></td></tr></table></figure>
<p><strong>5. nginx</strong></p>
<p>源码安装方式: <a href="http://network810.blog.51cto.com/2212549/1264669" target="_blank" rel="external">http://network810.blog.51cto.com/2212549/1264669</a><br>yum源安装:  nginx默认不在源里. 需要自己去nginx官网下载repo文件. 下载完后可以删除或者备份. </p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">CentOS</span> </span><br><span class="line"><span class="comment"># vi /etc/yum.repos.d/nginx.repo </span></span><br><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=<span class="symbol">http:</span>/<span class="regexp">/nginx.org/packages</span><span class="regexp">/centos/</span><span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="constant">RHEL</span></span><br><span class="line"><span class="comment"># vi /etc/yum.repos.d/nginx.repo </span></span><br><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=<span class="symbol">http:</span>/<span class="regexp">/nginx.org/packages</span><span class="regexp">/rhel/</span><span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install nginx</span></span><br></pre></td></tr></table></figure>
<p>如果服务器开启防火墙, 则要开放80端口 </p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/sysconfig/iptables </span></span><br><span class="line">-A INPUT -m <span class="keyword">state</span> --state NEW -m    tcp -p tcp --dport <span class="number">80</span> -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>重启防火墙 </p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># service iptables restart</span></span><br></pre></td></tr></table></figure>
<p>启动nginx方法. 显然第一种方法最快 </p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># service nginx start </span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># cd /usr/local/nginx/sbin </span></span><br><span class="line"><span class="preprocessor"># ./nginx </span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span></span><br></pre></td></tr></table></figure>
<p>同mysqld加入到chkconfig的方式开机启动, 也可以把nginx加入开机启动项中.<br>如果提示没有nginx这个service, 参考 <a href="http://www.01happy.com/centos-nginx-shell-chkconfig" target="_blank" rel="external">http://www.01happy.com/centos-nginx-shell-chkconfig</a><br>可以在主机的浏览器上查看, 或者查看端口号80是否开启   </p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># netstat –na|grep 80 </span></span><br><span class="line"><span class="preprocessor"># ps -ef | grep nginx</span></span><br></pre></td></tr></table></figure>
<p>默认配置</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">user</span>  nginx;</span><br><span class="line"><span class="title">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="title">error_log</span>  /var/log/nginx/error.log <span class="built_in">warn</span>;</span><br><span class="line"><span class="title">pid</span>        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="title">events</span> &#123;</span><br><span class="line">    <span class="title">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">http</span> &#123;</span><br><span class="line">    <span class="title">include</span>       /etc/nginx/mime.types;</span><br><span class="line">    <span class="title">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="title">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line">    <span class="title">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class="line">    <span class="title">sendfile</span>        <span class="built_in">on</span>;</span><br><span class="line">    <span class="title">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">    <span class="title">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">user  www www;</span><br><span class="line">worker_processes  <span class="number">2</span>;</span><br><span class="line">error_<span class="built_in">log</span>  logs/error.log;</span><br><span class="line">pid        logs/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections  <span class="number">2048</span>;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_<span class="built_in">type</span>  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># gzip压缩功能设置</span></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length <span class="number">1</span>k;</span><br><span class="line">    gzip_buffers    <span class="number">4</span> <span class="number">16</span>k;</span><br><span class="line">    gzip_http_version <span class="number">1.0</span>;</span><br><span class="line">    gzip_comp_level <span class="number">6</span>;</span><br><span class="line">    gzip_types text/html text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;</span><br><span class="line">    gzip_vary on;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># http_proxy 设置</span></span><br><span class="line">    client_max_body_size   <span class="number">10</span>m;</span><br><span class="line">    client_body_buffer_size   <span class="number">128</span>k;</span><br><span class="line">    proxy_connect_timeout   <span class="number">75</span>;</span><br><span class="line">    proxy_send_timeout   <span class="number">75</span>;</span><br><span class="line">    proxy_<span class="built_in">read</span>_timeout   <span class="number">75</span>;</span><br><span class="line">    proxy_buffer_size   <span class="number">4</span>k;</span><br><span class="line">    proxy_buffers   <span class="number">4</span> <span class="number">32</span>k;</span><br><span class="line">    proxy_busy_buffers_size   <span class="number">64</span>k;</span><br><span class="line">    proxy_temp_file_write_size  <span class="number">64</span>k;</span><br><span class="line">    proxy_temp_path   /usr/<span class="built_in">local</span>/nginx/proxy_temp <span class="number">1</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设定负载均衡后台服务器列表 </span></span><br><span class="line">    upstream  backend  &#123; </span><br><span class="line">        server   <span class="number">192.168</span>.<span class="number">10.100</span>:<span class="number">8080</span> max_fails=<span class="number">2</span> fail_timeout=<span class="number">30</span>s ;  </span><br><span class="line">        server   <span class="number">192.168</span>.<span class="number">10.101</span>:<span class="number">8080</span> max_fails=<span class="number">2</span> fail_timeout=<span class="number">30</span>s ;  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 很重要的虚拟主机配置</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  itoatest.example.com;</span><br><span class="line">        root   /apps/oaapp;</span><br><span class="line">        charset utf-<span class="number">8</span>;</span><br><span class="line">        access_<span class="built_in">log</span>  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#对 / 所有做负载均衡+反向代理</span></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /apps/oaapp;</span><br><span class="line">            index  index.jsp index.html index.htm;</span><br><span class="line"></span><br><span class="line">            proxy_pass        http://backend;  </span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            <span class="comment"># 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">            proxy_<span class="built_in">set</span>_header  Host  <span class="variable">$host</span>;</span><br><span class="line">            proxy_<span class="built_in">set</span>_header  X-Real-IP  <span class="variable">$remote_addr</span>;  </span><br><span class="line">            proxy_<span class="built_in">set</span>_header  X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#静态文件，nginx自己处理，不去backend请求tomcat</span></span><br><span class="line">        location  ~* /download/ &#123;  </span><br><span class="line">            root /apps/oa/fs;  </span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|bmp|png|ico|txt|js|css)$   </span><br><span class="line">        &#123;   </span><br><span class="line">            root /apps/oaapp;   </span><br><span class="line">            expires      <span class="number">7</span>d; </span><br><span class="line">        &#125;</span><br><span class="line">        location /nginx_status &#123;</span><br><span class="line">            stub_status on;</span><br><span class="line">            access_<span class="built_in">log</span> off;</span><br><span class="line">            allow <span class="number">192.168</span>.<span class="number">10.0</span>/<span class="number">24</span>;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ ^/(WEB-INF)/ &#123;   </span><br><span class="line">            deny all;   </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">        location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">## 其它虚拟主机，server 指令开始</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>6. scp文件拷贝</strong></p>
<p>在主机中要拷贝文件到虚拟机中 </p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[主机]<span class="comment"># scp xxx root<span class="doctag">@h</span>101:~/ </span></span><br><span class="line"><span class="symbol">bash:</span> <span class="symbol">scp:</span> command <span class="keyword">not</span> found </span><br><span class="line">lost connection </span><br><span class="line">[虚机]<span class="comment"># yum install openssh-clients</span></span><br></pre></td></tr></table></figure>
<p><strong>7. http虚拟机yum源</strong></p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># yum install -y httpd</span></span><br></pre></td></tr></table></figure>
<p>将主机上的iso文件拷贝到虚拟机中 </p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[主机]</span><span class="comment"># scp **.iso root@h101:~/ </span></span><br><span class="line"><span class="title">[虚机]</span><span class="comment"># mount -o loop CentOS*.iso /var/www/html</span></span><br></pre></td></tr></table></figure>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/yum.repos.d/http-local.repo </span></span><br><span class="line"><span class="title">[http-local]</span></span><br><span class="line"><span class="setting">name=<span class="value">http-local-<span class="keyword">on</span></span></span></span><br><span class="line"><span class="setting">baseurl=<span class="value">http://<span class="number">192.168</span>.<span class="number">56.101</span>/CentOS_6.<span class="number">5</span>_Final</span></span></span><br><span class="line"><span class="setting">enabled=<span class="value"><span class="number">1</span></span></span></span><br><span class="line"><span class="setting">gpgcheck=<span class="value"><span class="number">1</span></span></span></span><br><span class="line"><span class="setting">gpgkey=<span class="value">file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-<span class="number">6</span></span></span></span><br></pre></td></tr></table></figure>
<p><strong>8. http主机yum源</strong></p>
<p>上面的方式会将iso文件拷贝到虚拟机中, 占用本来空间就不多的虚拟机.<br>可以不用这种方式, 而是在主机中安装httpd服务器(或者nginx), 在虚拟机中直接能访问也可以.   </p>
<p><strong>9. 虚拟机ftp客户端</strong></p>
<p>◇ 主机中开启vsftpd服务, 虚拟机中安装ftp客户端, </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># yum install ftp </span></span><br><span class="line"><span class="preprocessor"># ftp <span class="number">192.168</span><span class="number">.56</span><span class="number">.1</span> </span></span><br><span class="line">Connected to <span class="number">192.168</span><span class="number">.56</span><span class="number">.1</span> (<span class="number">192.168</span><span class="number">.56</span><span class="number">.1</span>). </span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span><span class="number">.2</span>) </span><br><span class="line">Name (<span class="number">192.168</span><span class="number">.56</span><span class="number">.1</span>:root): anonymous </span><br><span class="line"><span class="number">331</span> Please specify the password. </span><br><span class="line">Password: </span><br><span class="line"><span class="number">230</span> Login successful. </span><br><span class="line">Remote system type is UNIX. </span><br><span class="line">Using binary mode to transfer files. </span><br><span class="line">ftp&gt;ls      ftp服务器当前位置的文件列表</span><br><span class="line">ftp&gt;!Ls     ftp客户端当前位置的文件列表</span><br></pre></td></tr></table></figure>
<p><strong>10. SVN</strong></p>
<p>1). 查看服务器系统是否已经安装SVN</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@datanode01 svn]<span class="preprocessor"># svn --version</span></span><br><span class="line">svn，版本 <span class="number">1.6</span><span class="number">.11</span> (r934486)   编译于 Apr <span class="number">12</span> <span class="number">2012</span>，<span class="number">11</span>:<span class="number">09</span>:<span class="number">11</span></span><br><span class="line">可使用以下的版本库访问模块: </span><br><span class="line">* ra_neon : 通过 WebDAV 协议使用 neon 访问版本库的模块。</span><br><span class="line">  - 处理“http”方案</span><br><span class="line">  - 处理“https”方案</span><br><span class="line">* ra_svn : 使用 svn 网络协议访问版本库的模块。  - 使用 Cyrus SASL 认证</span><br><span class="line">  - 处理“svn”方案</span><br><span class="line">* ra_local : 访问本地磁盘的版本库模块。</span><br><span class="line">  - 处理“file”方案</span><br></pre></td></tr></table></figure>
<p>说明svn已经安装, 并且支持http访问方式. </p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@datanode01 svn]# whereis httpd</span><br><span class="line">httpd: <span class="regexp">/usr/</span>sbin<span class="regexp">/httpd.event /u</span>sr<span class="regexp">/sbin/</span>httpd <span class="regexp">/usr/</span>sbin<span class="regexp">/httpd.worker /</span>etc<span class="regexp">/httpd /u</span>sr<span class="regexp">/lib64/</span>httpd <span class="regexp">/usr/i</span>nclude<span class="regexp">/httpd /u</span>sr<span class="regexp">/share/m</span>an<span class="regexp">/man8/</span>httpd.<span class="number">8</span>.gz</span><br><span class="line">[root@datanode01 svn]# whereis svn</span><br><span class="line">svn: <span class="regexp">/usr/</span>bin<span class="regexp">/svn /u</span>sr<span class="regexp">/share/m</span>an<span class="regexp">/man1/</span>svn.<span class="number">1</span>.gz</span><br><span class="line">[root@datanode01 svn]# whereis svnserve</span><br><span class="line">svnserve: <span class="regexp">/usr/</span>bin<span class="regexp">/svnserve /u</span>sr<span class="regexp">/share/m</span>an<span class="regexp">/man8/</span>svnserve.<span class="number">8</span>.gz</span><br></pre></td></tr></table></figure>
<p>2). 创建版本仓库  </p>
<p>◆ 新建一个目录用于存储SVN所有文件<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> /<span class="typedef"><span class="keyword">data</span>/data8/svn</span></span><br></pre></td></tr></table></figure></p>
<p>◆ 新建一个版本仓库<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span><span class="keyword">project</span></span><br></pre></td></tr></table></figure></p>
<p>◆ 修改 vi /data/data8/svn/project/conf/passwd 添加用户  </p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[users]</span>  </span><br><span class="line"><span class="comment"># harry = harryssecret</span></span><br><span class="line"><span class="comment"># sally = sallyssecret</span></span><br><span class="line"><span class="setting">admin = <span class="value">admin123</span></span></span><br><span class="line"><span class="setting">zhengqh = <span class="value">zhengqh</span></span></span><br></pre></td></tr></table></figure>
<p>◆ 修改 vi /data/data8/svn/project/conf/authz 修改用户访问策略  </p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[groups]</span><br><span class="line"><span class="preprocessor"># harry_and_sally = harry,sally</span></span><br><span class="line"><span class="preprocessor"># harry_sally_and_joe = harry,sally,&amp;joe</span></span><br><span class="line">group1 = admin,zhengqh</span><br><span class="line"></span><br><span class="line">[/]</span><br><span class="line">@group1 = rw</span><br></pre></td></tr></table></figure>
<p>◆ 修改 vi /data/data8/svn/project/conf/svnserve.conf文件,让用户和策略配置升效.  </p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[general]  </span><br><span class="line">anon-access = none</span><br><span class="line">auth-access = <span class="keyword">write</span></span><br><span class="line">password-db = <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span><span class="keyword">project</span><span class="regexp">/conf/</span>passwd</span><br><span class="line">authz-db = <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span><span class="keyword">project</span><span class="regexp">/conf/</span>authz</span><br></pre></td></tr></table></figure>
<p>◆ 启动服务器<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">svnserve</span> -d -r /<span class="typedef"><span class="keyword">data</span>/data8/svn</span></span><br></pre></td></tr></table></figure></p>
<p>◆ 测试checkout代码库</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">svn co <span class="string">svn:</span><span class="comment">//172.17.212.69/project</span></span><br></pre></td></tr></table></figure>
<p>显示如下就表示成功了:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Authentication <span class="string">realm:</span> &lt;<span class="string">svn:</span><span class="comment">//172.17.212.69:3690&gt; e296f93b-eec2-43dd-92b5-cc10ee55c901</span></span><br><span class="line">Password <span class="keyword">for</span> <span class="string">'root'</span>:</span><br><span class="line">Authentication <span class="string">realm:</span> &lt;<span class="string">svn:</span><span class="comment">//172.17.212.69:3690&gt; e296f93b-eec2-43dd-92b5-cc10ee55c901</span></span><br><span class="line"><span class="string">Username:</span> admin</span><br><span class="line">Password <span class="keyword">for</span> <span class="string">'admin'</span>: ***</span><br></pre></td></tr></table></figure>
<p>3). 配置支持使用http访问</p>
<p>◆ 创建svn帐号或修改密码：</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="keyword">bin/htpasswd </span>-<span class="keyword">b </span>-c /<span class="preprocessor">data</span>/data8/svn/svn-auth-file admin admin123</span><br><span class="line">/usr/<span class="keyword">bin/htpasswd </span>-<span class="keyword">b </span>/<span class="preprocessor">data</span>/data8/svn/svn-auth-file zhengqh zhengqh</span><br></pre></td></tr></table></figure>
<p>-c表示不存在这个文件时创建它. 注意第一行加-c, 后面添加用户不能加-c, 否则会发生覆盖.</p>
<p>◆ 修改svn用户访问策略 </p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /<span class="type">data</span>/data8/svn/svn-<span class="keyword">access</span>-<span class="keyword">file</span></span><br><span class="line">[project:/]</span><br><span class="line">admin = rw</span><br><span class="line">zhengqh = rw</span><br></pre></td></tr></table></figure>
<p>◆ 修改svn目录权限<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R <span class="number">777</span> <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span><span class="keyword">project</span></span><br></pre></td></tr></table></figure></p>
<p>◆ 查看svn和httpd依赖的文件:</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">cd</span> /etc/httpd/modules</span><br><span class="line"># <span class="keyword">ls</span> | <span class="keyword">grep</span> svn</span><br><span class="line">mod_authz_svn.<span class="keyword">so</span></span><br><span class="line">mod_dav_svn.<span class="keyword">so</span></span><br></pre></td></tr></table></figure>
<p>◆ 修改 vi /etc/httpd/conf/httpd.conf 增加</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">LoadModule dav_svn_module     <span class="regexp">/etc/</span>httpd<span class="regexp">/modules/</span>mod_dav_svn.so</span><br><span class="line">LoadModule authz_svn_module   <span class="regexp">/etc/</span>httpd<span class="regexp">/modules/</span>mod_authz_svn.so</span><br><span class="line"></span><br><span class="line">&lt;Location /svn&gt;</span><br><span class="line">    DAV svn</span><br><span class="line">    SVNParentPath <span class="regexp">/data/</span>data8/svn</span><br><span class="line">    AuthType Basic</span><br><span class="line">    AuthName <span class="string">"Subversion repository"</span></span><br><span class="line">    AuthUserFile <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span>svn-auth-file</span><br><span class="line">    Require valid-user</span><br><span class="line">    AuthzSVNAccessFile <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span>svn-access-file</span><br><span class="line">&lt;/Location&gt;</span><br></pre></td></tr></table></figure>
<p>◆ 启动apache httpd服务</p>
<p>下面几个命令只要执行其中一个即可(最后一个/usr/local一般用于自定义安装httpd才使用)</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># /usr/sbin/apachectl <span class="operator"><span class="keyword">start</span></span><br><span class="line"># /etc/init.<span class="keyword">d</span>/httpd <span class="keyword">start</span></span><br><span class="line"># /usr/<span class="keyword">local</span>/apache2/<span class="keyword">bin</span>/apachectl <span class="keyword">start</span></span></span><br></pre></td></tr></table></figure>
<p>◆ 重启svn服务</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ps -ef | grep svn</span></span><br><span class="line">root     <span class="number">41348</span>     <span class="number">1</span>  <span class="number">0</span> <span class="number">11</span>:<span class="number">22</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> svnserve -d -r /data/data8/svn</span><br><span class="line">root     <span class="number">41971</span> <span class="number">40812</span>  <span class="number">0</span> <span class="number">11</span>:<span class="number">39</span> pts/<span class="number">2</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep svn</span><br><span class="line"><span class="preprocessor"># kill -<span class="number">9</span>  <span class="number">41348</span></span></span><br><span class="line"><span class="preprocessor"># svnserve -d -r /data/data8/svn</span></span><br></pre></td></tr></table></figure>
<p>4). 用户维护</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span>project<span class="regexp">/conf/</span>passwd</span><br><span class="line">添加用户名 = 密码</span><br><span class="line">vi <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span>project<span class="regexp">/conf/</span>authz</span><br><span class="line">添加用户名到group1中</span><br><span class="line">执行命令:   <span class="regexp">/usr/</span>bin<span class="regexp">/htpasswd -b /</span>data<span class="regexp">/data8/</span>svn/svn-auth-file 用户名 密码</span><br><span class="line">添加用户的访问策略</span><br><span class="line">vi <span class="regexp">/data/</span>data8<span class="regexp">/svn/</span>svn-access-file</span><br><span class="line">用户名 = rw</span><br></pre></td></tr></table></figure>
<h2 id="4-_磁盘">4. 磁盘</h2><h3 id="查看文件大小">查看文件大小</h3><p><code>ll -h</code>只能查看文件的大小. 不能查看文件夹占用的大小. </p>
<p>查看某个目录总的大小</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="keyword">dir</span></span><br><span class="line">du -<span class="keyword">h</span> ./</span><br><span class="line">du -<span class="keyword">sh</span> *</span><br></pre></td></tr></table></figure>
<p>在最后会列出这个文件夹占用的大小.  或者不用cd, 直接du -h dir</p>
<h3 id="扩容操作">扩容操作</h3><p>查看磁盘使用量: <code>df -mh</code><br>根目录/达到了100% :  /dev/mapper/vg_datanode01-LogVol00</p>
<p>查看卷: vgdisplan:  </p>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">Volume</span> <span class="comment">group</span> <span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">VG</span> <span class="comment">Name</span>    <span class="comment">vg_datanode01</span></span><br><span class="line"></span><br><span class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span> <span class="comment">Logical</span> <span class="comment">volume</span> <span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">LV</span> <span class="comment">Path</span>      <span class="comment">/dev/vg_datanode01/LogVol00</span></span><br></pre></td></tr></table></figure>
<p>扩容: </p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lvextend -L +<span class="number">10</span>G  <span class="regexp">/dev/</span>mapper/vg_datanode01-LogVol00</span><br><span class="line">resize2fs <span class="regexp">/dev/</span>mapper/vg_datanode01-LogVol00</span><br></pre></td></tr></table></figure>
<h2 id="5-_系统">5. 系统</h2><h3 id="文件数和进程数">文件数和进程数</h3><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">midd@datanode01</span> ~]$ ulimit -a</span><br><span class="line">core file size          <span class="list">(<span class="keyword">blocks</span>, -c)</span> <span class="number">0</span></span><br><span class="line">data seg size           <span class="list">(<span class="keyword">kbytes</span>, -d)</span> unlimited</span><br><span class="line">scheduling priority             <span class="list">(<span class="keyword">-e</span>)</span> <span class="number">0</span></span><br><span class="line">file size               <span class="list">(<span class="keyword">blocks</span>, -f)</span> unlimited</span><br><span class="line">pending signals                 <span class="list">(<span class="keyword">-i</span>)</span> <span class="number">62700</span></span><br><span class="line">max locked memory       <span class="list">(<span class="keyword">kbytes</span>, -l)</span> <span class="number">64</span></span><br><span class="line">max memory size         <span class="list">(<span class="keyword">kbytes</span>, -m)</span> unlimited</span><br><span class="line">open files                      <span class="list">(<span class="keyword">-n</span>)</span> <span class="number">1024</span></span><br><span class="line">pipe size            <span class="list">(<span class="keyword">512</span> bytes, -p)</span> <span class="number">8</span></span><br><span class="line">POSIX message queues     <span class="list">(<span class="keyword">bytes</span>, -q)</span> <span class="number">819200</span></span><br><span class="line">real-time priority              <span class="list">(<span class="keyword">-r</span>)</span> <span class="number">0</span></span><br><span class="line">stack size              <span class="list">(<span class="keyword">kbytes</span>, -s)</span> <span class="number">10240</span></span><br><span class="line">cpu time               <span class="list">(<span class="keyword">seconds</span>, -t)</span> unlimited</span><br><span class="line">max user processes              <span class="list">(<span class="keyword">-u</span>)</span> <span class="number">1024</span></span><br><span class="line">virtual memory          <span class="list">(<span class="keyword">kbytes</span>, -v)</span> unlimited</span><br><span class="line">file locks                      <span class="list">(<span class="keyword">-x</span>)</span> unlimited</span><br><span class="line"><span class="list">[<span class="keyword">midd@datanode01</span> ~]$ ps -ef | grep ETL</span><br><span class="line">midd     <span class="number">14369</span>     <span class="number">1</span>  <span class="number">0</span> Mar29 ?        <span class="number">00</span>:00:00 ETL_ScheduleCenter     </span><br><span class="line">midd     <span class="number">14370</span> <span class="number">14369</span> <span class="number">99</span> Mar29 ?        <span class="number">5</span><span class="number">-06</span>:14:46 ETL_ScheduleServer     </span><br><span class="line">midd     <span class="number">14442</span> <span class="number">14369</span>  <span class="number">6</span> Mar29 ?        <span class="number">02</span>:33:41 ETL_ServerManger       </span><br><span class="line">midd     <span class="number">41892</span> <span class="number">41839</span>  <span class="number">0</span> <span class="number">10</span>:19 pts/3    <span class="number">00</span>:00:00 grep ETL</span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">midd@datanode01</span> ~]$ lsof -p <span class="number">14369</span> | wc -l</span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="list">[<span class="keyword">midd@datanode01</span> ~]$ lsof -p <span class="number">14370</span> | wc -l</span><br><span class="line"><span class="number">928</span></span><br><span class="line"><span class="list">[<span class="keyword">midd@datanode01</span> ~]$ lsof -p <span class="number">14442</span> | wc -l</span><br><span class="line"><span class="number">4169</span></span><br><span class="line"><span class="list">[<span class="keyword">midd@datanode01</span> ~]$ cat /proc/sys/fs/file-max</span><br><span class="line"><span class="number">792049</span></span><br><span class="line"></span><br><span class="line"><span class="list">[<span class="keyword">midd@datanode01</span> ~]$ su - </span><br><span class="line"><span class="list">[<span class="keyword">root@datanode01</span> ~]# vi /etc/security/limits.conf</span><br><span class="line">* soft nofile <span class="number">65536</span> * hard nofile <span class="number">65536</span></span><br><span class="line">添加以上, 其中*表示任何用户.  注意要用root用户执行.</span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
<p>或者使用root用户添加指定用户的文件数和进程数: </p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'########################for ETL 4.1.0'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br><span class="line">echo <span class="string">'midd soft nofile 65536'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br><span class="line">echo <span class="string">'midd hard nofile 65536'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br><span class="line">echo <span class="string">'midd soft nproc 131072'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br><span class="line">echo <span class="string">'midd hard nproc 131072'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br><span class="line">echo <span class="string">'midd soft nofile 65536'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br><span class="line">echo <span class="string">'midd hard nofile 65536'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br><span class="line">echo <span class="string">'midd soft nproc 131072'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br><span class="line">echo <span class="string">'midd hard nproc 131072'</span> <span class="prompt">&gt;&gt; </span>/etc/security/limits.conf</span><br></pre></td></tr></table></figure>
<p>然后使用midd用户验证ulimit</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">[<span class="keyword">midd@datanode01</span> ~]$ ulimit -a</span><br><span class="line">core file size          <span class="list">(<span class="keyword">blocks</span>, -c)</span> <span class="number">0</span></span><br><span class="line">data seg size           <span class="list">(<span class="keyword">kbytes</span>, -d)</span> unlimited</span><br><span class="line">scheduling priority             <span class="list">(<span class="keyword">-e</span>)</span> <span class="number">0</span></span><br><span class="line">file size               <span class="list">(<span class="keyword">blocks</span>, -f)</span> unlimited</span><br><span class="line">pending signals                 <span class="list">(<span class="keyword">-i</span>)</span> <span class="number">62700</span></span><br><span class="line">max locked memory       <span class="list">(<span class="keyword">kbytes</span>, -l)</span> <span class="number">64</span></span><br><span class="line">max memory size         <span class="list">(<span class="keyword">kbytes</span>, -m)</span> unlimited</span><br><span class="line">open files                      <span class="list">(<span class="keyword">-n</span>)</span> <span class="number">65536</span></span><br><span class="line">pipe size            <span class="list">(<span class="keyword">512</span> bytes, -p)</span> <span class="number">8</span></span><br><span class="line">POSIX message queues     <span class="list">(<span class="keyword">bytes</span>, -q)</span> <span class="number">819200</span></span><br><span class="line">real-time priority              <span class="list">(<span class="keyword">-r</span>)</span> <span class="number">0</span></span><br><span class="line">stack size              <span class="list">(<span class="keyword">kbytes</span>, -s)</span> <span class="number">10240</span></span><br><span class="line">cpu time               <span class="list">(<span class="keyword">seconds</span>, -t)</span> unlimited</span><br><span class="line">max user processes              <span class="list">(<span class="keyword">-u</span>)</span> <span class="number">131072</span></span><br><span class="line">virtual memory          <span class="list">(<span class="keyword">kbytes</span>, -v)</span> unlimited</span><br><span class="line">file locks                      <span class="list">(<span class="keyword">-x</span>)</span> unlimited</span></span><br></pre></td></tr></table></figure>
<p>另外方法：<a href="http://gaozzsoft.iteye.com/blog/1824824" target="_blank" rel="external">http://gaozzsoft.iteye.com/blog/1824824</a> </p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.使用ps -ef |grep java   (java代表你程序，查看你程序进程) 查看你的进程ID，记录ID号，假设进程ID为122.使用：lsof -p 12 | wc -<span class="keyword">l</span>    查看当前进程id为12的 文件操作状况    执行该命令出现文件使用情况为 10523.使用命令：ulimit -a   查看每个用户允许打开的最大文件数    发现系统默认的是<span class="keyword">open</span> files (-<span class="keyword">n</span>) 1024，问题就出现在这里。4.然后执行：ulimit -<span class="keyword">n</span> 4096</span><br><span class="line">     将<span class="keyword">open</span> files (-<span class="keyword">n</span>) 1024 设置成<span class="keyword">open</span> files (-<span class="keyword">n</span>) 4096</span><br><span class="line">这样就增大了用户允许打开的最大文件数</span><br></pre></td></tr></table></figure>
<h3 id="内存">内存</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">free</span><br><span class="line">free -<span class="keyword">m</span>   以MB为单位</span><br><span class="line">free -<span class="keyword">g</span>   以GB为单位</span><br><span class="line"></span><br><span class="line">df</span><br><span class="line">df -<span class="keyword">m</span>   以MB</span><br><span class="line">df -<span class="keyword">h</span>   以人类(human)可读的, 即GB</span><br><span class="line"></span><br><span class="line">pstree -p | wc -<span class="keyword">l</span></span><br></pre></td></tr></table></figure>
<h3 id="自动重启(jstat)">自动重启(jstat)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">c=`/usr/install/jdk1.<span class="number">8.0</span>_60/bin/jps -lm | grep CassandraDaemon | awk <span class="string">'&#123;print $1&#125;'</span>`</span><br><span class="line">old=`/usr/install/jdk1.<span class="number">8.0</span>_60/bin/jstat -gc <span class="variable">$c</span> |tail -<span class="number">1</span>  |awk <span class="string">'&#123;print $8&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;old%.*&#125;</span> <span class="operator">-gt</span> <span class="number">8388608</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"error: <span class="variable">$old</span>"</span></span><br><span class="line">  /usr/install/cassandra/bin/nodetool flush</span><br><span class="line">  /usr/install/cassandra/bin/nodetool stopdaemon</span><br><span class="line">  sleep <span class="number">15</span>s</span><br><span class="line">  /usr/install/cassandra/bin/cassandra</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"normal: <span class="variable">$old</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#crontab -e</span></span><br><span class="line"><span class="comment">#*/1 * * * * sh gc_old.sh &gt; gc_old.log 2&gt;&amp;1 &amp;</span></span><br></pre></td></tr></table></figure>
<h3 id="用户和权限">用户和权限</h3><p>添加用户, 设置密码</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd <span class="operator">-d</span> /home/postgres postgres </span><br><span class="line">passwd postgres</span><br></pre></td></tr></table></figure>
<p>更改读写权限, 地柜目录使用大写的R. (注意scp时用的是小写的r) </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">755</span> file</span><br><span class="line">chmod -R <span class="number">755</span> folder</span><br></pre></td></tr></table></figure>
<p>更改用户名:组</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">chown</span> <span class="tag">hadoop</span><span class="pseudo">:hadoop</span> <span class="tag">-R</span> <span class="tag">folder</span></span><br></pre></td></tr></table></figure>
<h3 id="定时任务cron">定时任务cron</h3><p>1.编写脚本</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /usr/lib/zookeeper/bin/cron.day </span></span><br><span class="line"><span class="comment">#bin/sh</span></span><br><span class="line">cd /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">zookeeper</span>/<span class="title">bin</span></span></span><br><span class="line">./zkCleanup.sh /opt/hadoop/zookeeper/version-<span class="number">2</span> <span class="number">5</span></span><br><span class="line">echo <span class="string">'clean up end...'</span></span><br></pre></td></tr></table></figure>
<p>2.更改脚本权限</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># chmod <span class="number">755</span> /usr/lib/zookeeper/bin/cron.day</span></span><br></pre></td></tr></table></figure>
<p>3.定时调度策略</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /etc/cron.d</span></span><br><span class="line"><span class="comment"># vi /etc/cron.d/zk.cron </span></span><br><span class="line"><span class="number">0</span> <span class="number">13</span> * * * root run-parts /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">zookeeper</span>/<span class="title">bin</span>/<span class="title">cron</span>.<span class="title">day</span></span></span><br></pre></td></tr></table></figure>
<p>4.导入调度配置</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># crontab zk.cron</span></span><br></pre></td></tr></table></figure>
<p>5.查看调度列表</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -l</span></span><br><span class="line"><span class="number">0</span> <span class="number">13</span> * * * root run-parts /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">zookeeper</span>/<span class="title">bin</span>/<span class="title">cron</span>.<span class="title">day</span></span></span><br></pre></td></tr></table></figure>
<p>6.查看是否调度的日志 </p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tail -f /var/log/cron</span></span><br><span class="line"><span class="constant">Apr</span>  <span class="number">1</span> <span class="number">13</span>:<span class="number">00</span>:<span class="number">01</span> namenode02 <span class="constant">CROND</span>[<span class="number">41859</span>]: (root) <span class="constant">CMD</span> (root run-parts /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">zookeeper</span>/<span class="title">bin</span>/<span class="title">cron</span>.<span class="title">day</span>)</span></span><br></pre></td></tr></table></figure>
<p>2.定时任务 <code>sudo -u admin crontab -e</code>:<br>20 11 <em> </em> * /usr/install/sh/activity.sh &gt;&gt; /home/admin/output/cronlogs/do_activity.log 2&gt;&amp;1</p>
<p>3.创建日志重定向文件:<br>sudu -u admin touch /home/admin/output/cronlogs/do_activity.log</p>
<p>4.查看任务运行日志:<br>$ sudo tail -f /var/log/cron<br>Sep  9 11:20:02 spark047214 CROND[9191]: (admin) CMD (/usr/install/sh/activity.sh &gt;&gt; /home/admin/output/cronlogs/do_activity.log 2&gt;&amp;1)</p>
<p>如果没有使用日志重定向, 则默认定时任务输出到mail中:<br>$ sudo -u admin tail -200f /var/spool/mail/admin</p>
<p>其他知识点: </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># vi /etc/crontab</span></span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line">HOME=/</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># For details see man <span class="number">4</span> crontabs</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Example of job definition:</span></span><br><span class="line"><span class="preprocessor"># .---------------- minute (<span class="number">0</span> - <span class="number">59</span>)</span></span><br><span class="line"><span class="preprocessor"># |  .------------- hour (<span class="number">0</span> - <span class="number">23</span>)</span></span><br><span class="line"><span class="preprocessor"># |  |  .---------- day of month (<span class="number">1</span> - <span class="number">31</span>)</span></span><br><span class="line"><span class="preprocessor"># |  |  |  .------- month (<span class="number">1</span> - <span class="number">12</span>) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="preprocessor"># |  |  |  |  .---- day of week (<span class="number">0</span> - <span class="number">6</span>) (Sunday=<span class="number">0</span> or <span class="number">7</span>) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="preprocessor"># |  |  |  |  |</span></span><br><span class="line"><span class="preprocessor"># *  *  *  *  * user-name command to be executed</span></span><br></pre></td></tr></table></figure>
<h2 id="6-_进程">6. 进程</h2><h3 id="进程和端口">进程和端口</h3><p>根据端口号查询进程名字</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -Pnl +M -i4[i6] <span class="string">| grep 20880</span></span><br></pre></td></tr></table></figure>
<h3 id="top">top</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">按M可以按照Memory排序, 按P按照CPU排序</span><br><span class="line">按u可以选择指定的user, 只显示该用户的进程</span><br><span class="line">top -p $(pidof mongod)    只显示指定的进程</span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                                                                                      </span><br><span class="line"> <span class="number">4735</span> midd      <span class="number">20</span>   <span class="number">0</span> <span class="number">30.1</span>g <span class="number">748</span>m <span class="number">4944</span> S  <span class="number">2.0</span>  <span class="number">9.5</span> <span class="number">102</span>:<span class="number">39.94</span> mongod</span><br></pre></td></tr></table></figure>
<h3 id="telnet">telnet</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="atom">telnet</span> <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span> <span class="number">80</span></span><br><span class="line"><span class="name">Trying</span> <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>...</span><br><span class="line"><span class="name">Connected</span> <span class="atom">to</span> <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>.</span><br><span class="line"><span class="name">Escape</span> <span class="atom">character</span> <span class="atom">is</span> <span class="string">'^]'</span>.</span><br><span class="line">^]             ⬅️ <span class="name">MAC</span>下同时按下<span class="name">Control</span>和]两个键</span><br><span class="line"><span class="atom">telnet</span>&gt; <span class="atom">quit</span>   ⬅️ 出现这个，键入<span class="atom">quit</span>，成功退出</span><br><span class="line"><span class="name">Connection</span> <span class="atom">closed</span>.</span><br></pre></td></tr></table></figure>
<h3 id="kill">kill</h3><p><strong>killall</strong> 命令可以杀死同一个进程的所有子进程.<br>如果用ps -ef | grep 则要一个一个杀.<br>比如ps -ef | grep ETL 显示一共由三个相关进程   </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[midd@datanode01 bin]$ ps -ef | grep ETL</span><br><span class="line">midd      <span class="number">4812</span> <span class="number">41955</span>  <span class="number">0</span> <span class="number">16</span>:<span class="number">01</span> pts/<span class="number">3</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep ETL</span><br><span class="line">midd     <span class="number">42276</span>     <span class="number">1</span>  <span class="number">0</span> <span class="number">15</span>:<span class="number">52</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> ETL_ScheduleCenter     </span><br><span class="line">midd     <span class="number">42277</span> <span class="number">42276</span> <span class="number">99</span> <span class="number">15</span>:<span class="number">52</span> ?        <span class="number">00</span>:<span class="number">15</span>:<span class="number">35</span> ETL_ScheduleServer     </span><br><span class="line">midd     <span class="number">42345</span> <span class="number">42276</span>  <span class="number">7</span> <span class="number">15</span>:<span class="number">53</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">34</span> ETL_ServerManger</span><br></pre></td></tr></table></figure>
<p>而用killall 只需要一行: <code>killall ScheduleCenter</code></p>
<p>批量杀进程</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">process=<span class="string">"cross-partner"</span></span><br><span class="line">ps aux|<span class="keyword">grep</span> <span class="variable">$process</span>|<span class="keyword">grep</span> -v <span class="keyword">grep</span>|awk <span class="string">'&#123;print $2&#125;'</span>|xargs <span class="keyword">kill</span> -<span class="number">9</span></span><br></pre></td></tr></table></figure>
<p>或者更简单的：（类似ssh-&gt;pssh, kill-&gt;pkill）</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill -<span class="number">9</span> $(pgrep amarok)</span><br><span class="line">pkill -<span class="number">9</span> amarok</span><br></pre></td></tr></table></figure>
<h3 id="screen">screen</h3><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">screen</span><br><span class="line"></span><br><span class="line">dstat -tlrvn <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">Ctrl+a+d  退出screen</span><br><span class="line"></span><br><span class="line">screen -ls 列表</span><br><span class="line">screen -r  恢复</span><br><span class="line"></span><br><span class="line">kill screen: screen -X -S <span class="variable">$session</span> quit</span><br></pre></td></tr></table></figure>
<h3 id="nohup">nohup</h3><p><a href="http://ora12c.blogspot.com/2012/04/how-to-put-scp-in-background.html" target="_blank" rel="external">http://ora12c.blogspot.com/2012/04/how-to-put-scp-in-background.html</a></p>
<p>scp命令需要输入密码, 结合nohup, 而nohup是在后台执行, 因此密码没办法输入.  </p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng<span class="variable">@cass047224</span> ~]<span class="variable">$ </span>nohup scp -l <span class="number">100000</span> -r <span class="number">1447314738524</span> <span class="number">192.168</span>.<span class="number">47.219</span><span class="symbol">:~/snapshot/</span><span class="number">224_1114</span>/ &amp;</span><br><span class="line">[<span class="number">1</span>] <span class="number">16169</span></span><br><span class="line"><span class="symbol">nohup:</span> 忽略输入并把输出追加到<span class="string">"nohup.out"</span></span><br><span class="line">[qihuang.zheng<span class="variable">@cass047224</span> ~]<span class="variable">$ </span>qihuang.zheng<span class="variable">@192</span>.<span class="number">168.47</span>.<span class="number">219</span><span class="string">'s password:</span><br><span class="line"></span><br><span class="line">[1]+  Stopped                 nohup scp -l 100000 -r 1447314738524 192.168.47.219:~/snapshot/224_1114/</span></span><br></pre></td></tr></table></figure>
<p>按这里: <a href="http://unix.stackexchange.com/questions/91065/nohup-sudo-does-not-prompt-for-passwd-and-does-nothing" target="_blank" rel="external">http://unix.stackexchange.com/questions/91065/nohup-sudo-does-not-prompt-for-passwd-and-does-nothing</a><br>和这里: <a href="http://stackoverflow.com/questions/13147861/run-scp-in-background-and-monitor-the-progress" target="_blank" rel="external">http://stackoverflow.com/questions/13147861/run-scp-in-background-and-monitor-the-progress</a><br>不要加&amp;, 可以输入密码, Ctrl+Z暂停任务, bg恢复任务  </p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@cass047224 ~]$ nohup scp -l 100000 -r <span class="number">144731473852</span><span class="number">4 192.168.47</span>.219:~/snapshot/<span class="number">224_1114</span>/</span><br><span class="line">nohup: 忽略输入并把输出追加到"nohup.out"</span><br><span class="line">qihuang.zheng@<span class="number">192.168.47.219</span>'s password:   在这里输入密码, 注意必须等输入密码之后,再暂停任务,还没有出现时,不能暂停!!!</span><br><span class="line">^Z</span><br><span class="line">[2]+  Stopped                 nohup scp -l 100000 -r <span class="number">144731473852</span><span class="number">4 192.168.47</span>.219:~/snapshot/<span class="number">224_1114</span>/</span><br><span class="line">[qihuang.zheng@cass047224 ~]$</span><br><span class="line">[qihuang.zheng@cass047224 ~]$ ps -ef|grep scp</span><br><span class="line">501      <span class="number">16169 11856</span>  0 12:29 pts/0    00:00:00 scp -l 100000 -r <span class="number">144731473852</span><span class="number">4 192.168.47</span>.219:~/snapshot/<span class="number">224_1114</span>/</span><br><span class="line">501      <span class="number">16183 16169</span>  0 12:29 pts/0    00:00:00 /usr/bin/ssh -x -oForwardAgent no -oPermitLocalCommand no -oClearAllForwardings yes <span class="number">192.168.47.219</span> scp -r -t ~/snapshot/<span class="number">224_1114</span>/</span><br><span class="line">501      <span class="number">17492 11856</span>  0 12:33 pts/0    00:00:00 scp -l 100000 -r <span class="number">144731473852</span><span class="number">4 192.168.47</span>.219:~/snapshot/<span class="number">224_1114</span>/</span><br><span class="line">501      <span class="number">17493 17492</span>  0 12:33 pts/0    00:00:00 /usr/bin/ssh -x -oForwardAgent no -oPermitLocalCommand no -oClearAllForwardings yes <span class="number">192.168.47.219</span> scp -r -t ~/snapshot/<span class="number">224_1114</span>/</span><br><span class="line">501      <span class="number">17718 11856</span>  0 12:33 pts/0    00:00:00 grep scp</span><br><span class="line">[qihuang.zheng@cass047224 ~]$ bg</span><br><span class="line">[2]+ nohup scp -l 100000 -r <span class="number">144731473852</span><span class="number">4 192.168.47</span>.219:~/snapshot/<span class="number">224_1114</span>/ &amp;    出现这个表示后台开始运行任务了!!!</span><br><span class="line">[qihuang.zheng@cass047224 ~]$ bg</span><br><span class="line">[1]+ nohup scp -l 100000 -r <span class="number">144731473852</span><span class="number">4 192.168.47</span>.219:~/snapshot/<span class="number">224_1114</span>/ &amp;</span><br></pre></td></tr></table></figure>
<p>如果敲入多次bg, 是不是多次执行?  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[qihuang.zheng@cass047224 ~]$ jobs</span><br><span class="line">[<span class="number">1</span>]+  Stopped                 nohup scp -l <span class="number">100000</span> -r <span class="number">1447314738524</span> <span class="number">192.168</span><span class="number">.47</span><span class="number">.219</span>:~/snapshot/<span class="number">224</span>_1114/</span><br><span class="line">[<span class="number">2</span>]-  Running                 nohup scp -l <span class="number">100000</span> -r <span class="number">1447314738524</span> <span class="number">192.168</span><span class="number">.47</span><span class="number">.219</span>:~/snapshot/<span class="number">224</span>_1114/ &amp;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20151114125939707" alt="scp-l"></p>
<p>Linux中&amp;、jobs、fg、bg等命令的使用方法: <a href="http://blog.sina.com.cn/s/blog_673ee2b50100iywr.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_673ee2b50100iywr.html</a>  </p>
<h3 id="disown">disown</h3><p>disown 示例1（如果提交命令时已经用“&amp;”将命令放入后台运行，则可以直接使用“disown”）</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@pvcent107 build]<span class="preprocessor"># cp -r testLargeFile largeFile &amp;</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">4825</span></span><br><span class="line">[root@pvcent107 build]<span class="preprocessor"># jobs</span></span><br><span class="line">[<span class="number">1</span>]+  Running                 cp -i -r testLargeFile largeFile &amp;</span><br><span class="line">[root@pvcent107 build]<span class="preprocessor"># disown -h %<span class="number">1</span></span></span><br><span class="line">[root@pvcent107 build]<span class="preprocessor"># ps -ef |grep largeFile</span></span><br><span class="line">root      <span class="number">4825</span>   <span class="number">968</span>  <span class="number">1</span> <span class="number">09</span>:<span class="number">46</span> pts/<span class="number">4</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> cp -i -r testLargeFile largeFile</span><br><span class="line">root      <span class="number">4853</span>   <span class="number">968</span>  <span class="number">0</span> <span class="number">09</span>:<span class="number">46</span> pts/<span class="number">4</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep largeFile</span><br><span class="line">[root@pvcent107 build]<span class="preprocessor"># logout</span></span><br></pre></td></tr></table></figure>
<p>disown 示例2（如果提交命令时未使用“&amp;”将命令放入后台运行，可使用 CTRL-z 和“bg”将其放入后台，再使用“disown”）</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@pvcent107 build]<span class="preprocessor"># cp -r testLargeFile largeFile2</span></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>]+  Stopped                 cp -i -r testLargeFile largeFile2</span><br><span class="line">[root@pvcent107 build]<span class="preprocessor"># bg %<span class="number">1</span></span></span><br><span class="line">[<span class="number">1</span>]+ cp -i -r testLargeFile largeFile2 &amp;</span><br><span class="line">[root@pvcent107 build]<span class="preprocessor"># jobs</span></span><br><span class="line">[<span class="number">1</span>]+  Running                 cp -i -r testLargeFile largeFile2 &amp;</span><br><span class="line">[root@pvcent107 build]<span class="preprocessor"># disown -h %<span class="number">1</span></span></span><br><span class="line">[root@pvcent107 build]<span class="preprocessor"># ps -ef |grep largeFile2</span></span><br><span class="line">root      <span class="number">5790</span>  <span class="number">5577</span>  <span class="number">1</span> <span class="number">10</span>:<span class="number">04</span> pts/<span class="number">3</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> cp -i -r testLargeFile largeFile2</span><br><span class="line">root      <span class="number">5824</span>  <span class="number">5577</span>  <span class="number">0</span> <span class="number">10</span>:<span class="number">05</span> pts/<span class="number">3</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep largeFile2</span><br><span class="line">[root@pvcent107 build]<span class="preprocessor">#</span></span><br></pre></td></tr></table></figure>
<h2 id="7-_文件">7. 文件</h2><h3 id="查看文件编码格式">查看文件编码格式</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># vi .vimrc</span></span><br><span class="line">:<span class="built_in">set</span> fileencoding</span><br><span class="line">  fileencoding=utf8</span><br><span class="line"><span class="built_in">set</span> fileencodings=ucs-bom,utf-<span class="number">8</span>,cp936,gb18030,big5,latin1</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># vi XXX.file</span></span><br><span class="line">:<span class="built_in">set</span> fencs?</span><br><span class="line">  fileencodings=ucs-bom,utf-<span class="number">8</span>,cp936,gb18030,big5,latin1</span><br><span class="line">:<span class="built_in">set</span> fenc?</span><br><span class="line">  fileencoding=cp936</span><br><span class="line">:<span class="built_in">set</span> enc?</span><br><span class="line">  encoding=utf-<span class="number">8</span></span><br></pre></td></tr></table></figure>
<h3 id="cat文件乱码">cat文件乱码</h3><p>Windows下生成的纯文本文件，其中文编码为GBK，在Ubuntu下显示为乱码，可以使用iconv命令进行转换：</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># iconv -f gbk -t utf8 source_file &gt; target_file</span></span><br><span class="line"><span class="label">iconv:</span> 未知 <span class="number">5</span> 处的非法输入序列</span><br></pre></td></tr></table></figure>
<h3 id="GBK转码实践">GBK转码实践</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> != <span class="string">"2"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Usage: `basename <span class="variable">$0</span>` dir filter"</span></span><br><span class="line">  <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">dir=<span class="variable">$1</span></span><br><span class="line">filter=<span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `find <span class="variable">$dir</span> -name <span class="string">"<span class="variable">$2</span>"</span>`; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$file</span>"</span></span><br><span class="line">  iconv <span class="operator">-f</span> gbk -t utf8 -o <span class="variable">$file</span> <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>执行方式: 第一个参数是目录, 第二个是文件选择</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~<span class="regexp">/ftp/GBK2UTF-8_batch.sh ./</span>  M_EP_PD_AQI*</span><br><span class="line">~<span class="regexp">/ftp/GBK2UTF-8_batch.sh ./</span>  M_EP_PH_AQI*</span><br><span class="line">~<span class="regexp">/ftp/GBK2UTF-8_batch.sh ./</span>  M_METE_CITY_PRED*</span><br><span class="line">~<span class="regexp">/ftp/GBK2UTF-8_batch.sh ./</span>  M_METE_WEATHER_LIVE*</span><br></pre></td></tr></table></figure>
<p>执行最后一个, 文件&gt;32kb, 报错:</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4361</span> 总线错误 (core dumped) iconv -c -f gbk -t utf8 -o <span class="variable">$file</span> <span class="variable">$file</span></span><br></pre></td></tr></table></figure>
<p>解决方式: <a href="http://myotragusbalearicus.wordpress.com/2010/03/10/batch-convert-files-to-utf-8/" target="_blank" rel="external">http://myotragusbalearicus.wordpress.com/2010/03/10/batch-convert-files-to-utf-8/</a><br>还是不行: <a href="http://www.path8.net/tn/archives/3448" target="_blank" rel="external">http://www.path8.net/tn/archives/3448</a><br>使用//IGNORE, 成功!  </p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f gbk//IGNORE -t utf8//IGNORE <span class="variable">$file</span> -o <span class="variable">$file</span>.tmp</span><br></pre></td></tr></table></figure>
<p>注意原始文件必须是和-f对应,如果原始文件是utf8, 要再次转换成utf8, 也会报错.</p>
<p>GBK2UTF8.sh </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> != <span class="string">"2"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Usage: `basename <span class="variable">$0</span>` dir filter"</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"sample: ./GBK2UTF8.sh /home/midd/ftp/fz12345/back/2015-03 fz12345_*.txt"</span></span><br><span class="line">  <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">dir=<span class="variable">$1</span></span><br><span class="line">filter=<span class="variable">$2</span></span><br><span class="line">tmp=<span class="string">'T'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `find <span class="variable">$dir</span> -name <span class="string">"<span class="variable">$2</span>"</span>`; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$file</span>"</span></span><br><span class="line">  <span class="comment">#iconv -f gbk -t utf8 -o $file $file</span></span><br><span class="line">  <span class="comment">#Notic, the Source File should not utf8 format. or u 'll get error</span></span><br><span class="line">  iconv <span class="operator">-f</span> gbk//IGNORE -t utf8//IGNORE <span class="variable">$file</span> -o <span class="variable">$tmp</span><span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<h3 id="wordcount计数">wordcount计数</h3><p>计算文件的行数: <code>wc -l file.txt</code><br>要统计单词数量, 加上w选项. L选项表示最长行的长度. 注意这是一整行.不能按照列计算最长长度. </p>
<p>帮助信息: $ wc –help.  如果不知道一个命令, 最好看看–help</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">用法：wc [选项]... [文件]...</span><br><span class="line">　或：wc [选项]... --files0-from=F</span><br><span class="line">  -<span class="ruby">c, --bytes            print the byte counts</span><br><span class="line"></span>  -<span class="ruby">m, --chars            print the character counts</span><br><span class="line"></span>  -<span class="ruby">l, --lines            print the newline counts</span><br><span class="line"></span>  -<span class="ruby"><span class="constant">L</span>, --max-line-length 显示最长行的长度</span><br><span class="line"></span>  -<span class="ruby">w, --words     显示单词计数</span><br><span class="line"></span>      -<span class="ruby">-help    显示此帮助信息并退出</span><br><span class="line"></span>      -<span class="ruby">-version   显示版本信息并退出</span></span><br></pre></td></tr></table></figure>
<h3 id="grep查找">grep查找</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ps</span> -ef | <span class="keyword">grep</span> ETL  查看进程</span><br><span class="line"><span class="keyword">cat</span> fz12345_original.txt | <span class="keyword">grep</span> FZ15032700599 查找一个文件里的字符串</span><br></pre></td></tr></table></figure>
<p>查找目录下的文件里的内容</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> foder/*.* | <span class="keyword">grep</span> XXX</span><br><span class="line"><span class="keyword">find</span> /etc/ -name <span class="string">"*"</span> | xargs <span class="keyword">grep</span> XXX</span><br><span class="line"></span><br><span class="line"><span class="keyword">find</span> ./ -name <span class="string">"*"</span> | xargs <span class="keyword">grep</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>
<p>注意: 第一个cat命令无法用于递归子目录, 第二个命令/etc后面必须跟上/, 而且name是*</p>
<p>grep ‘your-search-word’ . -rn </p>
<h3 id="大文件定位到某一行">大文件定位到某一行</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'111,112p'</span> <span class="keyword">file</span>.txt</span><br></pre></td></tr></table></figure>
<p>截取文件：</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016-05-13</span>T00:00   406465</span><br><span class="line"><span class="number">2016-05-14</span>T00:00   <span class="number">1348308</span></span><br><span class="line"></span><br><span class="line">错误的方式： head -<span class="number">1348308</span> gc.log.0 | tail -406465 &gt; tongdun_cassandra_<span class="number">20160513</span>.log</span><br><span class="line">正确的方式： sed -n '<span class="number">406465,134</span>8308p' gc.log.0 &gt; tongdun_cassandra_<span class="number">20160513</span>.log</span><br></pre></td></tr></table></figure>
<h3 id="find文件名">find文件名</h3><p>在指定目录查找文件名: <code>find ~/repo -name *tmp*</code>  </p>
<p>使用管道, xargs表示递归找到的每个值. 如果是文件, 使用rm. 如果是文件夹, 用rm -rf.<br>递归删除svn文件夹:   <code>find SVNFOLDER -name .svn | xargs rm -rf</code><br>递归删除文件:     <code>find ~/repo -name *tmp* | xargs rm</code>  </p>
<p>find -name ‘<em>0456’ -print<br>cat </em> |grep XXX</p>
<h3 id="文件内容替换">文件内容替换</h3><p>\n替换为,  <code>:%s/\n/,/</code></p>
<p>ORACLE类型转换为hive类型:</p>
<figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="perl"><span class="variable">%s</span>/STRING(.*)/STRING/</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/VARCHAR2(.*)/STRING/</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/CHAR(.*)/STRING/</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/DATE,<span class="regexp">/STRING,/</span></span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/date,<span class="regexp">/STRING,/</span></span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/INTEGER/INT/</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/NUMBER(..)/BIGINT/</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/NUMBER(.)/INT/</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/NUMBER(.*)/DOUBLE/</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span>/.<span class="keyword">not</span> null//</span><span class="xml"></span></span><br></pre></td></tr></table></figure>
<p>find . -name “*” | xargs sed -i -e ‘s%cn.fraudmetrix.pontus%com.spark.connectors%g’</p>
<h3 id="rename批量修改文件名">rename批量修改文件名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">rename</span> .XLS .xlsx *.XLS   把文件名=.XLS的替换成.xlsx</span><br><span class="line"><span class="keyword">rename</span> \_linux <span class="string">''</span> *.txt     把文件名=_linux的替换成空, 注意_要用转义, 即去掉文件名包含_linux的</span><br><span class="line"><span class="keyword">rename</span> -Unlicensed- <span class="string">''</span> *.xlsx</span><br><span class="line"><span class="keyword">rename</span> fun2 fun *</span><br><span class="line"></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">data</span> <span class="keyword">md5</span> *   # <span class="keyword">rename</span> 原文件要替换  替换后  要替换的文件</span></span><br></pre></td></tr></table></figure>
<h3 id="ftp文件夹下载">ftp文件夹下载</h3><p>wget ftp://172.17.227.236/ctos_analyze/data/tmp/<em> –ftp-user=ftpd –ftp-password=ftpd123 -r  
</em>必须要有, 最后的-r表示目录下载</p>
<p>wget -r -l 1 <a href="http://www.baidu.com/dir/" target="_blank" rel="external">http://www.baidu.com/dir/</a>   </p>
<p>文件续传:  <code>wget -c xxx.file</code></p>
<p>下载网站的所有文件： wget -r -l 1 <a href="http://atlarge.ewi.tudelft.nl/graphalytics/" target="_blank" rel="external">http://atlarge.ewi.tudelft.nl/graphalytics/</a></p>
<h3 id="文件按行数分割">文件按行数分割</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ wc -l dispatch2012.csv </span><br><span class="line"><span class="number">231272</span> dispatch2012.csv</span><br><span class="line"></span><br><span class="line">$ split -l <span class="number">60000</span> dispatch2012.csv dispatch2012_new.csv </span><br><span class="line">$ ll</span><br><span class="line">-rw-r--r-- <span class="number">1</span> hadoop hadoop <span class="number">27649615</span>  <span class="number">9</span>月 <span class="number">27</span>  <span class="number">2014</span> dispatch2012.csv</span><br><span class="line">-rw-rw-r-- <span class="number">1</span> hadoop hadoop  <span class="number">7115577</span>  <span class="number">4</span>月 <span class="number">14</span> <span class="number">19</span>:<span class="number">08</span> dispatch2012_new.csvaa</span><br><span class="line">-rw-rw-r-- <span class="number">1</span> hadoop hadoop  <span class="number">7188497</span>  <span class="number">4</span>月 <span class="number">14</span> <span class="number">19</span>:<span class="number">08</span> dispatch2012_new.csvab</span><br><span class="line">-rw-rw-r-- <span class="number">1</span> hadoop hadoop  <span class="number">7208496</span>  <span class="number">4</span>月 <span class="number">14</span> <span class="number">19</span>:<span class="number">08</span> dispatch2012_new.csvac</span><br><span class="line">-rw-rw-r-- <span class="number">1</span> hadoop hadoop  <span class="number">6137045</span>  <span class="number">4</span>月 <span class="number">14</span> <span class="number">19</span>:<span class="number">08</span> dispatch2012_new.csvad</span><br><span class="line">$ wc -l dispatch2012_new.csv*</span><br><span class="line">   <span class="number">60000</span> dispatch2012_new.csvaa</span><br><span class="line">   <span class="number">60000</span> dispatch2012_new.csvab</span><br><span class="line">   <span class="number">60000</span> dispatch2012_new.csvac</span><br><span class="line">   <span class="number">51272</span> dispatch2012_new.csvad</span><br><span class="line">  <span class="number">231272</span> 总用量</span><br></pre></td></tr></table></figure>
<h3 id="nc">nc</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">scp复制方式： scp influxdb-<span class="number">0.13</span><span class="number">.0</span>_linux_amd64.tar.gz qihuang.zheng@<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:~/</span><br><span class="line"></span><br><span class="line">用nc需要先在接收端开启一个端口， 然后在发送端把数据发送到接收端的端口</span><br><span class="line"></span><br><span class="line">远程：nc -l <span class="number">1234</span> &gt; influxdb-<span class="number">0.13</span><span class="number">.0</span>_linux_amd64.tar.gz</span><br><span class="line">本地：nc -w  <span class="number">1</span> <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span> <span class="number">1234</span>  &lt; influxdb-<span class="number">0.13</span><span class="number">.0</span>_linux_amd64.tar.gz</span><br><span class="line"></span><br><span class="line">复制文件夹：</span><br><span class="line">scp方式：scp -r influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span> qihuang.zheng@<span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span>:~/</span><br><span class="line"></span><br><span class="line">(注意不要在|之间加空格！默认远程的文件夹和本地的一样)</span><br><span class="line">远程：$ nc -l <span class="number">1234</span>|tar zxvf -</span><br><span class="line">influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span>/</span><br><span class="line">influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span>/etc/</span><br><span class="line">influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span>/usr/</span><br><span class="line">...</span><br><span class="line">influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span>/etc/influxdb/influxdb.conf</span><br><span class="line"></span><br><span class="line">本地：$ tar -cvzf - influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span>|nc <span class="number">192.168</span><span class="number">.6</span><span class="number">.52</span> <span class="number">1234</span></span><br><span class="line">a influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span></span><br><span class="line">a influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span>/etc</span><br><span class="line">a influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span>/usr</span><br><span class="line">...</span><br><span class="line">a influxdb-<span class="number">0.13</span><span class="number">.0</span>-<span class="number">1</span>/etc/influxdb/influxdb.conf</span><br><span class="line"></span><br><span class="line">tar -cvzf - android_device_session|nc <span class="number">192.168</span><span class="number">.50</span><span class="number">.20</span> <span class="number">1234</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -l <span class="number">1234</span>|tar xvf -</span><br><span class="line">tar -cvf - android_device_session|nc <span class="number">192.168</span><span class="number">.50</span><span class="number">.20</span> <span class="number">1234</span></span><br></pre></td></tr></table></figure>
<p>nohup 结合 nc报错：  </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gzip: stdin: unexpected <span class="operator"><span class="keyword">end</span> <span class="keyword">of</span> <span class="keyword">file</span></span><br><span class="line">tar: <span class="keyword">Child</span> returned <span class="keyword">status</span> <span class="number">1</span></span><br><span class="line">tar: <span class="keyword">Error</span> <span class="keyword">is</span> <span class="keyword">not</span> recoverable: exiting <span class="keyword">now</span></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>]+  <span class="keyword">Exit</span> <span class="number">2</span>                  nohup nc -<span class="keyword">l</span> <span class="number">1234</span> | tar zxvf -</span></span><br></pre></td></tr></table></figure>
<p>screen:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen -S fp_android_device_session_159 nc -l <span class="number">1234</span>|tar xvf -</span><br><span class="line">screen -S fp_android_device_session_159 tar -cvf - android_device_session|nc <span class="number">192.168</span><span class="number">.50</span><span class="number">.20</span> <span class="number">1234</span></span><br></pre></td></tr></table></figure>
<p>disown:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nc <span class="operator">-l</span> <span class="number">1234</span>|tar xvf - &amp;</span><br><span class="line"><span class="built_in">jobs</span></span><br><span class="line"><span class="built_in">disown</span> -h %<span class="number">1</span></span><br><span class="line"><span class="built_in">jobs</span></span><br><span class="line"><span class="built_in">logout</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[admin@spark015010 ~]$ nc -d -l <span class="number">1234</span>|tar xvf - &amp;</span><br><span class="line">[<span class="number">2</span>] <span class="number">13672</span></span><br><span class="line">[admin@spark015010 ~]$ jobs</span><br><span class="line">[<span class="number">1</span>]+  Stopped                 nc -l <span class="number">1234</span> | tar xvf -</span><br><span class="line">[<span class="number">2</span>]-  Running                 nc -l <span class="number">1234</span> | tar xvf - &amp;</span><br><span class="line">[admin@spark015010 ~]$ disown -h %<span class="number">1</span></span><br><span class="line">[admin@spark015010 ~]$ ps -ef |grep <span class="number">1234</span></span><br><span class="line">admin    <span class="number">13671</span>  <span class="number">7993</span>  <span class="number">0</span> <span class="number">13</span>:<span class="number">38</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> nc -l <span class="number">1234</span></span><br><span class="line">admin    <span class="number">13713</span>  <span class="number">7993</span>  <span class="number">0</span> <span class="number">13</span>:<span class="number">38</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep <span class="number">1234</span></span><br><span class="line">[admin@spark015010 ~]$ logout</span><br><span class="line">There are stopped jobs.</span><br><span class="line">[admin@spark015010 ~]$ jobs</span><br><span class="line">[<span class="number">1</span>]+  Stopped                 nc -l <span class="number">1234</span> | tar xvf -</span><br><span class="line">[<span class="number">2</span>]-  Running                 nc -l <span class="number">1234</span> | tar xvf - &amp;</span><br><span class="line">[admin@spark015010 ~]$ jobs -p</span><br><span class="line"><span class="number">11590</span></span><br><span class="line"><span class="number">13671</span></span><br></pre></td></tr></table></figure>
<h2 id="8-_VI">8. VI</h2><p>显示行号: :set number<br>复制模式：:set paste<br>打开文件定位到最后一行: vi + file.txt ，或者<strong>G</strong><br>第一行：:0回车<br>从指定行删除到最后一行</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">方法<span class="number">1</span>： </span><br><span class="line">使用<span class="built_in">set</span> number计算当前行和最后一行的差比如<span class="number">100</span></span><br><span class="line">输入<span class="number">100</span>dd</span><br></pre></td></tr></table></figure>
<p>清空文件内容：先跳转到文件最后一行：<strong>G</strong>，<strong>:1,.d</strong>  </p>
<h2 id="9-_Awk/sed">9. Awk/sed</h2><h3 id="列编辑">列编辑</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">replace</span>(<span class="keyword">replace</span>(DISPATCHMEMO,chr(10),''),chr(9),'')</span><br><span class="line"></span><br><span class="line">awk '&#123;<span class="keyword">print</span> <span class="string">"&lt;"</span> <span class="label">$0</span> <span class="string">"&gt; "</span>&#125;' O_FZ12345_CALLINFO&gt;O_FZ12345_CALLINFO2</span><br><span class="line">awk '&#123;<span class="keyword">print</span> <span class="string">"select count(*) from "</span> <span class="label">$0</span> <span class="string">" union all \n"</span>&#125;' <span class="keyword">cl</span>&gt;cl2</span><br><span class="line"></span><br><span class="line">awk '&#123;<span class="keyword">print</span> <span class="string">"replace(replace("</span> <span class="label">$0</span> <span class="string">",chr(10),''),chr(9),'')"</span>&#125;' O_FZ12345_CALLINFO&gt;O_FZ12345_CALLINFO2</span><br><span class="line"></span><br><span class="line">awk '&#123;<span class="keyword">print</span> <span class="string">"replace(replace("</span> <span class="label">$0</span> <span class="string">",chr(10),''),chr(9),'')"</span>&#125;' c3&gt;c4</span><br><span class="line"></span><br><span class="line">%s/,)/,'')/</span><br><span class="line"></span><br><span class="line">alter <span class="keyword">table</span> owner to etl;</span><br><span class="line">awk '&#123;<span class="keyword">print</span> <span class="string">"alter table "</span> <span class="label">$0</span> <span class="string">" owner to etl;"</span>&#125;' <span class="keyword">test</span>&gt;test2</span><br></pre></td></tr></table></figure>
<h3 id="列的最大长度">列的最大长度</h3><p>下面2个语句执行的结果不同??<br>打印结果时,用双引号<br>awk ‘{if (length($NF)&gt;maxlength) maxlength=length($NF)} END {print maxlength” “$1” “$2” “$NF}’ fz12345_original.txt   </p>
<p>awk ‘{s[$1] += $2}END{ for(i in s){  print i, s[i] } }’ file1 &gt; file2</p>
<p>awk ‘{s[$1” “$2] += $3}END{ for(i in s){print i, s[i] } }’  file1 &gt; file2</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">找出最后一列的最大长度  </span><br><span class="line">awk '&#123;<span class="keyword">if</span> (<span class="literal">length</span>(<span class="label">$NF</span>)&gt;maxlength) maxlength=<span class="literal">length</span>(<span class="label">$NF</span>)&#125; END &#123;<span class="keyword">print</span> maxlength &#125;' fz12345_original.txt   </span><br><span class="line"></span><br><span class="line">找出最大长度的那一条记录  </span><br><span class="line">awk '<span class="literal">length</span>(<span class="label">$NF</span>)==2016 &#123;<span class="keyword">print</span> <span class="label">$1</span><span class="string">" "</span><span class="label">$2</span><span class="string">" "</span><span class="label">$NF&#125;</span>' fz12345_original.txt  </span><br><span class="line"></span><br><span class="line">最后一列为空  </span><br><span class="line">awk '&#123;<span class="label">$NF</span>=<span class="string">""</span> ;<span class="keyword">print</span> <span class="label">$0&#125;</span>' fz12345_original.txt  | head  </span><br><span class="line"></span><br><span class="line">截取最后一列:  </span><br><span class="line">awk '&#123;<span class="keyword">print</span> <span class="literal">substr</span>(<span class="label">$NF</span>, 0, 900)&#125;' fz12345_original.txt  </span><br><span class="line"></span><br><span class="line">打印一整行:  </span><br><span class="line">awk '&#123;<span class="keyword">print</span> <span class="label">$0&#125;</span>' fz12345_original.txt  </span><br><span class="line"></span><br><span class="line">打印第一列和最后一列, 最后一列被截取, 以\t分割  </span><br><span class="line">awk '&#123;<span class="label">$NF</span>=<span class="literal">substr</span>(<span class="label">$NF</span>, 0, 900) ;<span class="keyword">print</span> <span class="label">$1</span><span class="string">"\t"</span><span class="label">$NF&#125;</span>' fz12345_original.txt  | head  </span><br><span class="line"></span><br><span class="line">截取最后一列, 并打印整行. 但是分隔符变成空格. 如果原先内容有空格,则无法正确解析  </span><br><span class="line">awk '&#123;<span class="label">$NF</span>=<span class="literal">substr</span>(<span class="label">$NF</span>, 0, 900) ;<span class="keyword">print</span> <span class="label">$0&#125;</span>' fz12345_original.txt  | head  </span><br><span class="line"></span><br><span class="line">截取最后一列, 打印整行, 分隔符为\t  </span><br><span class="line">awk 'BEGIN &#123;OFS=<span class="string">"\t"</span>&#125;&#123;<span class="label">$NF</span>=<span class="literal">substr</span>(<span class="label">$NF</span>, 0, 900) ;<span class="keyword">print</span> <span class="label">$0&#125;</span>' fz12345_original.txt | head  </span><br><span class="line"></span><br><span class="line">行的字段数不一样. 是因为如果有些字段值为空: 如果是空值,则不会被计算为一列!  </span><br><span class="line">awk '&#123;<span class="keyword">print</span> NF&#125;' fz12345.txt | head  </span><br><span class="line">awk '&#123;<span class="keyword">print</span> NF&#125;' fz12345_original.txt | head  </span><br><span class="line"></span><br><span class="line">输出字段分隔符:  </span><br><span class="line">awk 'BEGIN &#123;OFS=<span class="string">"\t"</span>&#125;&#123;<span class="label">$NF</span>=<span class="literal">substr</span>(<span class="label">$NF</span>, 0, 900) ;<span class="keyword">print</span> <span class="label">$0&#125;</span>' fz12345_original.txt &gt; fz12345.txt  </span><br><span class="line">输入字段分隔符,输出字段分隔符:  </span><br><span class="line">awk 'BEGIN &#123;FS=<span class="string">"\t"</span>;OFS=<span class="string">"\t"</span>&#125;&#123;<span class="label">$NF</span>=<span class="literal">substr</span>(<span class="label">$NF</span>, 0, 900) ;<span class="keyword">print</span> <span class="label">$0&#125;</span>' fz12345_original.txt &gt; fz12345.txt  </span><br><span class="line">输入字段,输入行,输出字段,输出行分隔符:  </span><br><span class="line">awk 'BEGIN &#123;FS=<span class="string">"\t"</span>;RS=<span class="string">"\n"</span>;OFS=<span class="string">"\t"</span>;ORS=<span class="string">"\n"</span>;&#125;&#123;<span class="label">$NF</span>=<span class="literal">substr</span>(<span class="label">$NF</span>, 0, 900) ;<span class="keyword">print</span> <span class="label">$0&#125;</span>' fz12345_original.txt &gt; fz12345.txt  </span><br><span class="line"></span><br><span class="line">awk FS=<span class="string">"\t"</span> '&#123;<span class="label">$NF</span>=<span class="literal">substr</span>(<span class="label">$NF</span>, 0, 900) ;<span class="keyword">print</span> <span class="label">$0&#125;</span>' OFS=<span class="string">"\t"</span> fz12345_original.txt &gt; fz12345.txt  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;http:<span class="comment">//coolshell.cn/articles/9070.html&gt;  </span></span><br><span class="line">awk  -F:'&#123;<span class="keyword">print</span> <span class="label">$1</span>,<span class="label">$3</span>,<span class="label">$6&#125;</span>' OFS=<span class="string">"\t"</span> /etc/passwd  </span><br><span class="line">/etc/passwd文件是以:为分隔符的. 取出第1,3,6列. 以\t分割!</span><br></pre></td></tr></table></figure>
<h3 id="一列转多行">一列转多行</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">hadoop@hadoop:~$ echo 'A|B|C|aa,bb|DD' | awk -F\| 'BEGIN&#123;OFS=<span class="string">"|"</span>&#125;&#123;<span class="keyword">split</span>(<span class="label">$4</span>,a,<span class="string">","</span>);<span class="keyword">for</span>(i <span class="keyword">in</span> a)&#123;<span class="label">$4</span>=a[i];<span class="keyword">print</span> <span class="label">$0&#125;</span>&#125;'</span><br><span class="line">A|B|C|aa|DD</span><br><span class="line">A|B|C|bb|DD</span><br><span class="line">hadoop@hadoop:~$ echo 'A|B|C|aa|DD' | awk -F\| 'BEGIN&#123;OFS=<span class="string">"|"</span>&#125;&#123;<span class="keyword">split</span>(<span class="label">$4</span>,a,<span class="string">","</span>);<span class="keyword">for</span>(i <span class="keyword">in</span> a)&#123;<span class="label">$4</span>=a[i];<span class="keyword">print</span> <span class="label">$0&#125;</span>&#125;'</span><br><span class="line">A|B|C|aa|DD</span><br><span class="line"></span><br><span class="line">awk 'BEGIN&#123;FS=<span class="string">"\t"</span>;OFS=<span class="string">"\t"</span>&#125;&#123;<span class="keyword">split</span>(<span class="label">$5</span>,a,<span class="string">","</span>);<span class="keyword">for</span>(i <span class="keyword">in</span> a)&#123;<span class="label">$5</span>=a[i];<span class="keyword">print</span> <span class="label">$0&#125;</span>&#125;' \</span><br><span class="line">fz12345_dispatch_2014.txt &gt; fz12345_dispatch_2014_2.txt</span><br><span class="line"></span><br><span class="line">转换前文件:</span><br><span class="line">2251562 FZ15032600537   福州市信访局    2015-03-26 16:29:50     福州市城乡建设委员会,福州市交通运输委员会       0       1       10      2015-04-10 16:29:50</span><br><span class="line"></span><br><span class="line">转换后文件:</span><br><span class="line">2251562 FZ15032600537   福州市信访局    2015-03-26 16:29:50     福州市城乡建设委员会    0       1       10      2015-04-10 16:29:50</span><br><span class="line">2251562 FZ15032600537   福州市信访局    2015-03-26 16:29:50     福州市交通运输委员会    0       1       10      2015-04-10 16:29:50</span><br></pre></td></tr></table></figure>
<p>去掉文件中的所有双引号: sed -i ‘s/“//g’ dispatch2012.csv  </p>
<h3 id="将^M删除">将^M删除</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed -<span class="tag">i</span> <span class="string">'s/"//g'</span> dispatch2012<span class="class">.csv</span>            ×</span><br><span class="line"><span class="tag">tr</span> -d <span class="string">'^M'</span> &lt; dispatch2012_2<span class="class">.csv</span>           ×</span><br><span class="line"></span><br><span class="line">alias dos2unix=<span class="string">"sed -i -e 's/'\"\$(printf '\015')\"'//g' "</span>    √</span><br><span class="line">dos2unix dispatch2012_2<span class="class">.csv</span>             </span><br><span class="line">sed -<span class="tag">i</span> -e <span class="string">'s/'</span>\<span class="string">"\$(printf '\015')\"'//g' dispatch2012_2.csv   报错: bash: 未预期的符号 `(' 附近有语法错误</span></span><br></pre></td></tr></table></figure>
<p>删除第一行: sed -i ‘1d;$d’ dispatch2012_2.csv</p>
<p>第五列因为乱码直接改为空字符串!<br>awk ‘BEGIN {FS=”,”;RS=”\n”;OFS=”\t”;ORS=”\n”;}{$5=””;print $0}’ dispatch2012.csv &gt; dispatch2012_2.csv</p>
<h3 id="指定行前/后插入内容">指定行前/后插入内容</h3><p>i表示在之前匹配Regex之前插入，a表示在之后插入</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -<span class="tag">i</span> <span class="string">'N;/Regex/i\插入的内容'</span> file</span><br><span class="line">sed -<span class="tag">i</span> <span class="string">'N;/Regex/a\插入的内容'</span> file</span><br></pre></td></tr></table></figure>
<p>比如</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JVM_OPTS=<span class="string">"$JVM_OPTS -Djava.net.preferIPv4Stack=true"</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># JVM_OPTS=<span class="string">"$JVM_OPTS -Djava.rmi.server.hostname=&lt;public name&gt;"</span></span></span><br></pre></td></tr></table></figure>
<p>要在preferIPv4Stack这一行后面插入RMI</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i '<span class="keyword">N</span>;/preferIPv4Stack/a\JVM_OPTS=<span class="string">"$JVM_OPTS -Djava.rmi.server.hostname=192.168.6.52"</span>' apache-cassandra-2.2.6/<span class="keyword">conf</span>/cassandra-env.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Djava.net.preferIPv4Stack=true"</span></span><br><span class="line"></span><br><span class="line">JVM_OPTS=<span class="string">"<span class="variable">$JVM_OPTS</span> -Djava.rmi.server.hostname=192.168.6.52"</span></span><br><span class="line"><span class="comment"># JVM_OPTS="$JVM_OPTS -Djava.rmi.server.hostname=&lt;public name&gt;"</span></span><br></pre></td></tr></table></figure>
<h3 id="截取时间段日志文件">截取时间段日志文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">end=`date +<span class="string">"%Y-%m-%d %H"</span>`</span><br><span class="line">start=`date <span class="operator">-d</span> <span class="string">"-1 hour"</span> +<span class="string">"%Y-%m-%d %H"</span>`</span><br><span class="line">gcCount=`sed -n <span class="string">"/<span class="variable">$start</span>:[0-9][0-9]:[0-9][0-9]/,/<span class="variable">$end</span>:[0-9][0-9]:[0-9][0-9]/p"</span> /usr/install/cassandra/logs/system.log | grep <span class="string">'GC in [0-9][0-9][0-9][0-9][0-9]'</span> | wc <span class="operator">-l</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$start</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$end</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$gcCount</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$gcCount</span> &gt; <span class="number">0</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment">#告警</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n '/2016-06-30 18:[<span class="link_label">0-9</span>][<span class="link_reference">0-9</span>]:[<span class="link_label">0-9</span>][<span class="link_reference">0-9</span>]/,/2016-06-30 19:[<span class="link_label">0-9</span>][<span class="link_reference">0-9</span>]:[<span class="link_label">0-9</span>][<span class="link_reference">0-9</span>]/p' /usr/install/cassandra/logs/system.log | grep 'GC in [<span class="link_label">0-9</span>][<span class="link_reference">0-9</span>][<span class="link_label">0-9</span>][<span class="link_reference">0-9</span>][<span class="link_label">0-9</span>]' | wc -l</span><br></pre></td></tr></table></figure>
<h3 id="统计最大值">统计最大值</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>  url1</span><br><span class="line"><span class="number">8</span>  url3</span><br><span class="line"><span class="number">2</span>  url2</span><br><span class="line"><span class="number">3</span>  url1</span><br><span class="line"><span class="number">4</span>  url3</span><br><span class="line"></span><br><span class="line">awk <span class="string">'&#123;max[$2]=max[$2]&gt;$1?max[$2]:$1;number[$2]++;sum[$2]+=$1&#125;</span><br><span class="line">END&#123;for (i in max) print max[i], sum[i]/number[i],number[i],i&#125;'</span> OFS=<span class="string">"\t"</span> url.txt</span><br><span class="line"></span><br><span class="line">awk <span class="string">'&#123;max[$2]=max[$2]&gt;$1?max[$2]:$1;&#125;END&#123;for (i in max) print max[i],i&#125;'</span> OFS=<span class="string">"\t"</span> url.txt</span><br><span class="line"><span class="number">8</span> url3</span><br><span class="line"><span class="number">3</span> url1</span><br><span class="line"><span class="number">2</span> url2</span><br><span class="line"></span><br><span class="line">awk <span class="string">'&#123;max[$1]=max[$1]&gt;$2?max[$1]:$2;&#125;END&#123;for (i in max) print i,max[i]&#125;'</span> OFS=<span class="string">"\t"</span> url.txt</span><br><span class="line"><span class="comment">#$1是key,map[$1]存的是value，比如$1是url1，$2就是2</span></span><br><span class="line">url1 <span class="number">2</span></span><br><span class="line">url3 <span class="number">8</span></span><br><span class="line">url2 <span class="number">2</span></span><br><span class="line">url1 <span class="number">3</span></span><br><span class="line">url3 <span class="number">4</span></span><br></pre></td></tr></table></figure>
<p>awk ‘BEGIN {max = 0} {if ($1+0 &gt; max+0) max=$1} END {print “Max=”, max}’ data</p>
<p>awk -F ‘,’ ‘BEGIN{sum=0}{sum+=$1;} END {print “sum=”sum”}’</p>
<p>awk ‘BEGIN{sum=0}{sum+=$1;} END {print “sum=”sum”}’</p>
<h2 id="10-_脚本">10. 脚本</h2><h3 id="制作程序启动脚本:">制作程序启动脚本:</h3><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">arg=<span class="variable">$1</span></span><br><span class="line">cmd=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$arg</span> == <span class="string">'idea'</span> ]; <span class="keyword">then</span></span><br><span class="line">  cmd=<span class="string">'/home/hadoop/tool/idea-IU-139.225.3/bin/idea.sh'</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo <span class="string">'应用程序启动命令：$cmd'</span></span><br><span class="line">nohup <span class="variable">$cmd</span> &amp;</span><br></pre></td></tr></table></figure>
<h3 id="免密码登录:expect">免密码登录:expect</h3><p><a href="http://wgkgood.blog.51cto.com/1192594/1271543" target="_blank" rel="external">http://wgkgood.blog.51cto.com/1192594/1271543</a><br><a href="http://blog.51yip.com/linux/1462.html" target="_blank" rel="external">http://blog.51yip.com/linux/1462.html</a><br><a href="http://bbs.chinaunix.net/thread-915007-1-1.html" target="_blank" rel="external">http://bbs.chinaunix.net/thread-915007-1-1.html</a><br><a href="http://os.51cto.com/art/200912/167898.htm" target="_blank" rel="external">http://os.51cto.com/art/200912/167898.htm</a> </p>
<p>访问服务器的通用命令是: ssh [-port] user@host. 通常情况下需要输入密码. 可以使用expect交互命令, 使用命令行直接登录.  </p>
<figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> timeout <span class="number">30</span></span><br><span class="line">spawn ssh [<span class="keyword">lindex</span> <span class="variable">$argv</span> <span class="number">0</span>]@[<span class="keyword">lindex</span> <span class="variable">$argv</span> <span class="number">1</span>]</span><br><span class="line">expect &#123;</span><br><span class="line">        <span class="string">"(yes/no)?"</span></span><br><span class="line">        &#123;send <span class="string">"yes\n"</span>;exp_continue&#125;</span><br><span class="line">        <span class="string">"password:"</span></span><br><span class="line">        &#123;send <span class="string">"[lindex $argv 2]\n"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure>
<p>使用方式: 指定远程机器的用户名,IP地址,密码,[端口]: <code>./login.exp USERNAME HOST PASS [PORT]</code></p>
<h3 id="免密码登录:ssh">免密码登录:ssh</h3><p>在本机ssh-keygen,并将密钥拷贝到目标机器当前访问用户的<code>~/ssh/authorized_keys</code>下</p>
<figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  ~  ssh qihuang.zheng<span class="macrocall">@JUMP_HOST</span></span><br><span class="line"></span><br><span class="line">每次都要输入用户名<span class="macrocall">@远程服务器地址</span>, 可以把它们写死在一个文件里. </span><br><span class="line">➜  ~  cat jump</span><br><span class="line">qihuang.zheng<span class="macrocall">@JUMP_HOST</span></span><br><span class="line">➜  ~  ssh <span class="string">`cat jump`</span></span><br><span class="line"></span><br><span class="line">或者把ssh qihuang.zheng<span class="macrocall">@JUMP_HOST整个写在一个脚本里并加入到PATH里</span>. 只需要执行脚本即可: sshjump</span><br></pre></td></tr></table></figure>
<h3 id="跳板机访问远程命令:端口映射">跳板机访问远程命令:端口映射</h3><p>👉 将远程ssh端口22映射到本地指定的端口:  <code>ssh -f qihuang.zheng@JUMP_HOST -L 127.0.0.1:2207:192.168.47.207:22 -N</code><br>解释下上面的命令了:  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JUMP_HOST         👉跳板机</span><br><span class="line"><span class="number">192.168</span><span class="number">.47</span><span class="number">.207</span>:<span class="number">22</span> 👉远程机器的ssh默认端口</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">2207</span>      👉映射到本机端口</span><br></pre></td></tr></table></figure>
<p>👉 现在远程服务器的ssh端口已经映射到本地的2207端口了,所以可以直接:  <code>ssh -p 2207 qihuang.zheng@localhost</code><br>👉 或者使用调用expect脚本自动登陆的方式:  <code>login.exp qihuang.zheng localhost $pass $port</code></p>
<p>端口映射脚本:  </p>
<figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="keyword">set</span> timeout <span class="number">30</span></span><br><span class="line">spawn ssh -f qihuang.zheng@JUMP_HOST -L <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:[<span class="keyword">lindex</span> <span class="variable">$argv</span> <span class="number">1</span>]:<span class="number">192.168</span><span class="number">.47</span>.[<span class="keyword">lindex</span> <span class="variable">$argv</span> <span class="number">0</span>]:[<span class="keyword">lindex</span> <span class="variable">$argv</span> <span class="number">1</span>] -N</span><br><span class="line">expect &#123;</span><br><span class="line">  <span class="string">"password:"</span></span><br><span class="line">  &#123;send <span class="string">"YOURPASSWORD@\n"</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure>
<p>使用方式: <code>map.exp 222 8888</code></p>
<h3 id="命令行时间格式转换(Mac版)">命令行时间格式转换(Mac版)</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">当前时间撮</span><br><span class="line">➜  ~  date +<span class="variable">%s</span></span><br><span class="line"><span class="number">1448811002</span></span><br><span class="line"></span><br><span class="line">格式化当前时间</span><br><span class="line">➜ date <span class="string">"+<span class="variable">%Y</span><span class="variable">%m</span><span class="variable">%d</span><span class="variable">%H</span><span class="variable">%M</span><span class="variable">%S</span>"</span></span><br><span class="line"><span class="number">20150717085930</span></span><br><span class="line">➜ date <span class="string">"+<span class="variable">%Y</span>-<span class="variable">%m</span>-<span class="variable">%d</span> <span class="variable">%H</span>:<span class="variable">%M</span>:<span class="variable">%S</span>"</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">17</span> 09:<span class="number">01</span>:<span class="number">32</span></span><br><span class="line"></span><br><span class="line">指定一个时间的时间撮</span><br><span class="line">➜  ~  date -j -f <span class="string">"<span class="variable">%Y</span>-<span class="variable">%m</span>-<span class="variable">%d</span> <span class="variable">%H</span>:<span class="variable">%M</span>:<span class="variable">%S</span>"</span> <span class="string">"2015-10-21 18:03:00"</span> <span class="string">"+<span class="variable">%s</span>"</span></span><br><span class="line"><span class="number">1445421780</span></span><br><span class="line"></span><br><span class="line">将时间错转换为human格式</span><br><span class="line">➜  ~  date -r <span class="number">1445421780</span></span><br><span class="line"><span class="number">2015</span>年<span class="number">10</span>月<span class="number">21</span>日 星期三 <span class="number">18</span>时<span class="number">03</span>分<span class="number">00</span>秒 CST</span><br></pre></td></tr></table></figure>
<p>上面的是在shell终端的结果, 如果要在bash脚本中获取, 则使用``执行命令</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜ echo `date <span class="string">"+%Y-%m-%d %H:%M:%S"</span>`</span><br><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">17</span> <span class="number">09</span>:<span class="number">04</span>:<span class="number">23</span></span><br><span class="line">➜ currentDate=`date <span class="string">"+%Y-%m-%d %H:%M:%S"</span>`</span><br><span class="line">➜ echo $currentDate</span><br><span class="line"><span class="number">2015</span>-<span class="number">07</span>-<span class="number">17</span> <span class="number">09</span>:<span class="number">05</span>:<span class="number">38</span></span><br></pre></td></tr></table></figure>
<h3 id="正则表达式">正则表达式</h3><p>日志开始部分</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(\d&#123;<span class="number">4</span>&#125;)-(<span class="number">0</span>\d&#123;<span class="number">1</span>&#125;|<span class="number">1</span>[<span class="number">0</span>-<span class="number">2</span>])-(\d&#123;<span class="number">2</span>&#125;) (\d&#123;<span class="number">2</span>&#125;):(\d&#123;<span class="number">2</span>&#125;):(\d&#123;<span class="number">2</span>&#125;):(\d&#123;<span class="number">3</span>&#125;) (\[main\])</span><br></pre></td></tr></table></figure>
<h2 id="11-_Shell">11. Shell</h2><h3 id="Condition">Condition</h3><p>if条件：</p>
<p>循环：</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="number">0</span> <span class="number">10</span>`; do echo <span class="variable">$i</span>; nodetool cfstats md5s.md5_id<span class="number">_</span><span class="variable">$i</span> | grep memory ;done</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nums=(<span class="string">'0'</span> <span class="string">'1'</span> <span class="string">'2'</span> <span class="string">'3'</span> <span class="string">'4'</span> <span class="string">'5'</span> <span class="string">'6'</span> <span class="string">'7'</span> <span class="string">'8'</span> <span class="string">'9'</span> <span class="string">'a'</span> <span class="string">'b'</span> <span class="string">'c'</span> <span class="string">'d'</span> <span class="string">'e'</span> <span class="string">'f'</span>)</span><br><span class="line"><span class="keyword">for</span> n1 <span class="keyword">in</span> <span class="variable">$&#123;nums[@]&#125;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$n1</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"end."</span></span><br></pre></td></tr></table></figure>
<h3 id="Date">Date</h3><p>Mac:</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">date</span> -r <span class="number">1471190400</span></span><br></pre></td></tr></table></figure>
<p>date -j -f “%Y-%m-%d %H:%M:%S” “2017-6-30 12:00:00” “+%s”</p>
<p>date -j -f “%Y-%m-%d %H:%M:%S” “2016-12-30 00:00:00” “+%s”</p>
<p>Linux</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">date</span> +<span class="variable">%s</span></span><br><span class="line"><span class="number">1471254010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">date</span> -d <span class="string">'@'</span></span><br><span class="line"><span class="number">2016</span>年 <span class="number">08</span>月 <span class="number">15</span>日 星期一 <span class="number">17</span>:<span class="number">40</span>:<span class="number">10</span> CST</span><br><span class="line"></span><br><span class="line"><span class="keyword">date</span> -d <span class="string">'2016-08-15'</span> +<span class="variable">%s</span></span><br><span class="line"><span class="number">1471190400</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">date</span> -d <span class="string">'@1471190400'</span></span><br><span class="line"><span class="number">2016</span>年 <span class="number">08</span>月 <span class="number">15</span>日 星期一 <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> CST</span><br><span class="line"></span><br><span class="line"><span class="keyword">date</span> -d <span class="string">'2016-08-15 13:20:24'</span> +<span class="variable">%s</span></span><br><span class="line"><span class="keyword">date</span> -d <span class="string">'@1471238424'</span></span><br><span class="line"><span class="number">2016</span>年 <span class="number">08</span>月 <span class="number">15</span>日 星期一 <span class="number">13</span>:<span class="number">20</span>:<span class="number">24</span> CST</span><br><span class="line"></span><br><span class="line"><span class="keyword">date</span> -d <span class="string">'yesterday'</span></span><br><span class="line"><span class="number">2016</span>年 <span class="number">08</span>月 <span class="number">15</span>日 星期一 <span class="number">13</span>:<span class="number">20</span>:<span class="number">24</span> CST</span><br><span class="line"></span><br><span class="line"><span class="keyword">date</span> -d <span class="string">'yesterday'</span> +<span class="string">"%Y-%-m-%-d"</span></span><br></pre></td></tr></table></figure>
<p>beg=<code>date -d &#39;2017-05-25 00:00:00&#39; +%s</code><br>end=<code>date -d &#39;2017-05-25 01:10:00&#39; +%s</code><br>cassandra/bin/nodetool compactionhistory |grep model_result| sort -rk 4 |awk ‘{if($4/1000&gt;=$beg &amp;&amp; $4/1000&lt;=$end) print $0}’</p>
<p>cat compaction_history.log|grep model_result| sort -rk 4 |awk ‘{if($4/1000&gt;=$beg &amp;&amp; $4/1000&lt;=$end) print $0}’</p>
<p>cat compaction_history.log|head -50 |tail -30| awk ‘{\<br>$4=strftime(“%Y-%m-%d %H:%M:%S”, substr($4,0,10));\<br>$5=$5/1000/1000; $6=$6/1000/1000;\<br>}1’ | cut -d” “ -f4-</p>
<p><a href="http://blog.csdn.net/jk110333/article/details/8590746" target="_blank" rel="external">http://blog.csdn.net/jk110333/article/details/8590746</a>  </p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sh range.sh 20160401 20160405</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#datebeg="20160401"</span></span><br><span class="line"><span class="comment">#dateend="20160405"</span></span><br><span class="line">datebeg=<span class="variable">$1</span></span><br><span class="line">dateend=<span class="variable">$2</span></span><br><span class="line">beg_s=`date <span class="operator">-d</span> <span class="string">"<span class="variable">$datebeg</span>"</span> +%s`</span><br><span class="line">end_s=`date <span class="operator">-d</span> <span class="string">"<span class="variable">$dateend</span>"</span> +%s`</span><br><span class="line"></span><br><span class="line">excludes=<span class="string">"20150101 20150102"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ <span class="string">"<span class="variable">$beg_s</span>"</span> -le <span class="string">"<span class="variable">$end_s</span>"</span> ];<span class="keyword">do</span></span><br><span class="line">     day=`date <span class="operator">-d</span> @<span class="variable">$beg_s</span> +<span class="string">"%Y%m%d"</span>`;</span><br><span class="line">     beg_s=$((beg_s+<span class="number">86400</span>));</span><br><span class="line">     flag=<span class="literal">false</span></span><br><span class="line">     <span class="keyword">for</span> item <span class="keyword">in</span> <span class="variable">$excludes</span></span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$day</span>"</span> == <span class="string">"<span class="variable">$item</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">          <span class="built_in">echo</span> <span class="string">"<span class="variable">$day</span> In the list, skip"</span></span><br><span class="line">          flag=<span class="literal">true</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">     <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> [ <span class="variable">$flag</span> == <span class="literal">false</span> ]; <span class="keyword">then</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="variable">$day</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#代码中只要关心处理一天的记录,由脚本控制,执行多天</span></span><br><span class="line">        /usr/install/spark-<span class="number">1.6</span>.<span class="number">1</span>-bin-hadoop2.<span class="number">4</span>/bin/spark-submit \</span><br><span class="line">        --conf spark.mesos.role=production --conf spark.cores.max=<span class="number">30</span> --conf spark.executor.memory=<span class="number">10</span>g --conf spark.ui.port=<span class="number">4888</span> \</span><br><span class="line">        --conf spark.cassandra.connection.host=<span class="number">192.168</span>.<span class="number">48.163</span> \</span><br><span class="line">        --class cn.fraudmetrix.vulcan.velocity.VelocityRuleApp \</span><br><span class="line">        spark-cassandra-<span class="number">1.0</span>.<span class="number">1</span>-SNAPSHOT-jar-with-dependencies.jar cass <span class="variable">$day</span> &gt; VelocityRuleApp_<span class="variable">$day</span>.log</span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<h1 id="Develop">Develop</h1><p>jar包解压查看是否有某个文件: jar -tvf abc.jar | grep FileName</p>
<p>jar包运行： java -cp xxx-dependency.jar MainClass args<br>如果是打成fat包，可以这么运行。</p>
<p>但是如果不是fat包，而且依赖了第三方包：java -cp third.jar -jar Run.jar MainClass</p>
<p>jmap -dump:live,format=b,file=<filename>.hprof <pid></pid></filename></p>
<p>jstats -gc <pid></pid></p>
<p>mat命令行：<a href="http://www.techpaste.com/2015/07/how-to-analyse-large-heap-dumps/" target="_blank" rel="external">http://www.techpaste.com/2015/07/how-to-analyse-large-heap-dumps/</a>  </p>
<p><img src="http://img.blog.csdn.net/20161221111359916" alt="mat"></p>
<p><img src="http://img.blog.csdn.net/20161222135615298" alt="mat"></p>
<p>mysql权限：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`pontus`</span> <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">'pontus'</span>@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'pontus'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">grant</span> all <span class="keyword">on</span> pontus.* <span class="keyword">to</span> <span class="string">'pontus'</span>@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'pontus'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">grant</span> all <span class="keyword">on</span> pontus.* <span class="keyword">to</span> <span class="string">'pontus'</span>@<span class="string">'dp0653'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'pontus'</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'pontus'</span> <span class="keyword">and</span> host=<span class="string">'dp0653'</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,<span class="keyword">password</span>,host <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'pontus'</span>;</span></span><br></pre></td></tr></table></figure>
<h2 id="Build">Build</h2><p>maven: .m2/settings.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="title">mirrorOf</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;/<span class="title">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>sbt: .sbt/repositories</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[repositories]</span><br><span class="line">local</span><br><span class="line">local-maven: file:///Users/zhengqh/.m2/repository/</span><br><span class="line">maven-releases: http://maven.fraudmetrix.cn/nexus/content/groups/public/</span><br><span class="line">ali-maven: http://maven.aliyun.com/nexus/content/groups/public/</span><br><span class="line"><span class="header">#repox-maven: http://192.168.6.53:8078/</span></span><br><span class="line"><span class="header">#repox-ivy: http://192.168.6.53:8078/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]</span></span><br><span class="line"><span class="header">#osc: http://maven.oschina.net/content/groups/public/</span></span><br><span class="line"><span class="header">#oschina-ivy: http://maven.oschina.net/content/groups/public/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]</span></span><br><span class="line">typesafe: http://repo.typesafe.com/typesafe/ivy-releases/, [<span class="link_label">organization</span>]/[<span class="link_label">module</span>]/(scala<span class="emphasis">_[scalaVersion]/)(sbt_</span>[<span class="link_label">sbtVersion</span>]/)[<span class="link_label">revision</span>]/[<span class="link_label">type</span>]s/[<span class="link_label">artifact</span>](<span class="link_url">-[classifier]</span>).[ext], bootOnly</span><br><span class="line">sonatype-oss-releases</span><br><span class="line">maven-central</span><br><span class="line">sonatype-oss-snapshots</span><br></pre></td></tr></table></figure>
<p>gradle project: build.gradle</p>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">buildscript </span><span class="expression">&#123;</span><br><span class="line">    <span class="variable">repositories</span> &#123;</span><br><span class="line">        <span class="variable">mavenLocal</span>()</span><br><span class="line">        <span class="variable">maven</span> &#123; <span class="variable">url</span> '<span class="variable">http</span>:/<span class="end-block">/maven.aliyun.com</span><span class="end-block">/nexus</span><span class="end-block">/content</span><span class="end-block">/groups</span><span class="end-block">/public</span>/' &#125;</span><span class="xml"></span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies </span><span class="expression">&#123;</span><br><span class="line">    &#125;</span><span class="xml"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects </span><span class="expression">&#123;</span><br><span class="line">    <span class="variable">repositories</span> &#123;</span><br><span class="line">        <span class="variable">mavenLocal</span>()</span><br><span class="line">        <span class="variable">maven</span> &#123; <span class="variable">url</span> '<span class="variable">http</span>:/<span class="end-block">/maven.aliyun.com</span><span class="end-block">/nexus</span><span class="end-block">/content</span><span class="end-block">/groups</span><span class="end-block">/public</span>/' &#125;</span><span class="xml"></span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://my.oschina.net/abcfy2/blog/783743" target="_blank" rel="external">https://my.oschina.net/abcfy2/blog/783743</a><br><a href="https://yrom.net/blog/2015/02/07/change-gradle-maven-repo-url/" target="_blank" rel="external">https://yrom.net/blog/2015/02/07/change-gradle-maven-repo-url/</a></p>
<p>gradle global: .gradle/init.gradle</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">allprojects</span>&#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        <span class="keyword">def</span> REPOSITORY_URL = <span class="string">'http://maven.oschina.net/content/groups/public'</span></span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            <span class="keyword">if</span>(repo <span class="keyword">instanceof</span> MavenArtifactRepository)&#123;</span><br><span class="line">                <span class="keyword">def</span> url = repo.url.toString()</span><br><span class="line">                <span class="keyword">if</span> (url.startsWith(<span class="string">'https://repo1.maven.org/maven2'</span>) || url.startsWith(<span class="string">'https://jcenter.bintray.com/'</span>)) &#123;</span><br><span class="line">                    <span class="keyword">project</span>.logger.lifecycle <span class="string">"Repository $&#123;repo.url&#125; replaced by $REPOSITORY_URL."</span></span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url REPOSITORY_URL</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="快捷键">快捷键</h2><h3 id="Mac">Mac</h3><p><strong>👉按键</strong>  </p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Shift</span> - ⬆️      为什么是向上,因为<span class="keyword">Shift</span>在Ctrl+Alt+<span class="built_in">CMD</span>所有键的上方</span><br></pre></td></tr></table></figure>
<p><strong>👉触摸板</strong><br>右键: 双指单击<br>三指移动: 当前App移动位置<br>四指滑动: 全屏下App切换屏幕<br>两指滑动: Launchpad切换屏幕  </p>
<p><strong>👉箭头</strong><br>FN+⬅️ 一行的开始(Home)和结束位置(End)<br>FN+⬆️ 上一页(Up),下一页(Down)<br>ALT+⬅️ 一个一个单词地移动</p>
<p><strong>终端</strong><br>CMD+⬅️:  标签切换</p>
<p>Control+CMD+A: 使用QQ的截图</p>
<h3 id="IDEA">IDEA</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CMD</span>+<span class="number">4</span>  Run Window</span><br><span class="line">Go To Implementation实现方法:   Alt+<span class="built_in">CMD</span>+B</span><br><span class="line">Back and Forword前进后退:       Alt+<span class="built_in">CMD</span>+左右</span><br><span class="line"><span class="built_in">Type</span> Hierarchy类型树:           Ctl+H</span><br><span class="line"><span class="flow">Call</span> Hierarchy调用栈:           Ctl+Alt+H</span><br><span class="line">Into进入方法或类:                <span class="built_in">CMD</span>+单击 或者Fn+F4</span><br><span class="line">全局搜索字符串:                  <span class="built_in">CMD</span>+<span class="keyword">Shift</span>+F</span><br></pre></td></tr></table></figure>
<h3 id="Install">Install</h3><h4 id="GO_sublime">GO sublime</h4><ul>
<li>GOROOT：golang的安装包</li>
<li>GOPATH：golang应用程序的workspace</li>
</ul>
<p>安装go后，goroot会自动设置，而gopath需要自己添加到.bashrc中</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export GOPATH=<span class="variable">$HOME</span>/go</span><br><span class="line">export GOBIN=<span class="variable">$GOPATH</span>/bin</span><br><span class="line">export PATH=<span class="variable">$PATH</span>:<span class="variable">$GOBIN</span></span><br></pre></td></tr></table></figure>
<p>go env查看环境信息</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">GOARCH=<span class="value"><span class="string">"amd64"</span></span></span></span><br><span class="line"><span class="setting">GOBIN=<span class="value"><span class="string">"/Users/zhengqh/go/bin"</span></span></span></span><br><span class="line"><span class="setting">GOEXE=<span class="value"><span class="string">""</span></span></span></span><br><span class="line"><span class="setting">GOHOSTARCH=<span class="value"><span class="string">"amd64"</span></span></span></span><br><span class="line"><span class="setting">GOHOSTOS=<span class="value"><span class="string">"darwin"</span></span></span></span><br><span class="line"><span class="setting">GOOS=<span class="value"><span class="string">"darwin"</span></span></span></span><br><span class="line"><span class="setting">GOPATH=<span class="value"><span class="string">"/Users/zhengqh/go"</span></span></span></span><br><span class="line"><span class="setting">GORACE=<span class="value"><span class="string">""</span></span></span></span><br><span class="line"><span class="setting">GOROOT=<span class="value"><span class="string">"/usr/local/go"</span></span></span></span><br><span class="line"><span class="setting">GOTOOLDIR=<span class="value"><span class="string">"/usr/local/go/pkg/tool/darwin_amd64"</span></span></span></span><br></pre></td></tr></table></figure>
<p>go默认安装到/usr/local/go下，也可以将$GOROOT/bin加入到$PATH下</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export PATH=<span class="variable">$PATH</span>:<span class="variable">$GOBIN</span>:<span class="variable">$GOROOT</span>/bin</span><br></pre></td></tr></table></figure>
<p>查看go的版本</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  <span class="keyword">go</span> <span class="keyword">version</span></span><br><span class="line"><span class="keyword">go</span> <span class="keyword">version</span> go1.<span class="number">8.3</span> darwin/amd64</span><br><span class="line">➜  which <span class="keyword">go</span></span><br><span class="line">/usr/local/<span class="keyword">go</span>/bin/<span class="keyword">go</span></span><br></pre></td></tr></table></figure>
<p>在Sublime中安装GoSublime，然后设置Sublime的环境变了：</p>
<p>Preferences -&gt; package settings -&gt; GoSublime -&gt; Settings - Uesrs</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">env</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">GOPATH</span>": <span class="value"><span class="string">"/Users/zhengqh/go"</span></span>,</span><br><span class="line">        "<span class="attribute">GOROOT</span>": <span class="value"><span class="string">"/usr/local/go"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>默认的GoSublime build:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">target</span>": <span class="value"><span class="string">"gs9o_build"</span></span>,</span><br><span class="line">    "<span class="attribute">selector</span>": <span class="value"><span class="string">"source.go"</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>CMD+b后，会在底部弹出终端，需要自己输入go run xxx.go。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ ~<span class="regexp">/go/src</span><span class="regexp">/test/</span> ] <span class="comment"># 输入go run main.go</span></span><br><span class="line">[ <span class="string">`go run main.go`</span> | <span class="symbol">done:</span> <span class="number">902.434403</span>ms ]</span><br><span class="line">    <span class="constant">GO</span> <span class="constant">GO</span> <span class="constant">GO</span>!!!</span><br><span class="line">    ....</span><br></pre></td></tr></table></figure>
<p>但实际上我希望立即执行，自动编译执行。</p>
<p><strong>第一种尝试</strong></p>
<p>可以在Tools&gt;Build System&gt;New Build System</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">　　"<span class="attribute">cmd</span>": <span class="value">[<span class="string">"go"</span>, <span class="string">"run"</span>, <span class="string">"$file_name"</span>]</span>,</span><br><span class="line">    "<span class="attribute">file_regex</span>": <span class="value"><span class="string">"^[ ]*File \"(...*?)\", line ([0-9]*)"</span></span>,</span><br><span class="line">    "<span class="attribute">working_dir</span>": <span class="value"><span class="string">"$file_path"</span></span>,</span><br><span class="line">    "<span class="attribute">selector</span>": <span class="value"><span class="string">"source.go"</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>点击CMD+b后，不会弹出任何终端，而且提示No Build System</p>
<p><strong>第二种尝试</strong>，New Build System:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">shell_cmd</span>": <span class="value"><span class="string">"go run $file"</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>点击CMD+b后，会编译并运行</p>
<figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">GO</span> <span class="variable">GO</span> <span class="variable">GO</span><span class="exclamation_mark">!</span><span class="exclamation_mark">!</span><span class="exclamation_mark">!</span></span><br><span class="line">....</span><br><span class="line">[<span class="variable">Finished</span> <span class="function_or_atom">in</span> <span class="number">1.0</span>s]</span><br></pre></td></tr></table></figure>
<p>go的代码不一定要在GOPATH下。下面在kafka-book的clients下新建一个go文件。<br>CMD+B后，会产生一个producer进程。但是CTRL+C虽然会提示CANCEL，但是并不会真正杀掉进程。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  test ps -ef|grep producer</span><br><span class="line">  <span class="number">501</span> <span class="number">24018</span> <span class="number">14631</span>   <span class="number">0</span>  <span class="number">4</span>:<span class="number">22</span>下午 ??         <span class="number">0</span>:<span class="number">00.31</span> go run /Users/zhengqh/Github/kafka-book/clients/src/main/go/producer.go</span><br><span class="line">➜  test ps -ef|grep producer</span><br><span class="line">  <span class="number">501</span> <span class="number">24049</span>     <span class="number">1</span>   <span class="number">0</span>  <span class="number">4</span>:<span class="number">22</span>下午 ??         <span class="number">0</span>:<span class="number">00.01</span> /var/folders/xc/x0b8crk9667ddh1zhfs29_zr0000gn/T/go-build870380723/command-line-arguments/_obj/exe/producer</span><br></pre></td></tr></table></figure>
<h4 id="go_imports">go imports</h4><p>如果没有导入fmt包，直接编译运行报错：</p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># command-line-<span class="built_in">arguments</span></span><br><span class="line">./main.go:<span class="number">4</span>: <span class="literal">undefined</span>: fmt <span class="keyword">in</span> fmt.Println</span><br><span class="line">./main.go:<span class="number">5</span>: <span class="literal">undefined</span>: fmt <span class="keyword">in</span> fmt.Println</span><br><span class="line">[Finished <span class="keyword">in</span> <span class="number">0.5</span>s <span class="keyword">with</span> exit code <span class="number">2</span>]</span><br><span class="line">[shell_cmd: go run /Users/zhengqh/go/src/test/main.go]</span><br><span class="line">[dir: <span class="regexp">/Users/</span>zhengqh/go/src/test]</span><br><span class="line">[path: <span class="regexp">/usr/</span>bin:<span class="regexp">/bin:/u</span>sr/sbin:<span class="regexp">/sbin]</span></span><br></pre></td></tr></table></figure>
<p><a href="https://godoc.org/golang.org/x/tools/cmd/goimports" target="_blank" rel="external">goimports</a>可以在保存的时候自动导入包</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ go get golang.org<span class="regexp">/x/</span>tools<span class="regexp">/cmd/</span>goimports</span><br><span class="line"><span class="keyword">package</span> golang.org<span class="regexp">/x/</span>tools<span class="regexp">/cmd/</span><span class="string">goimports:</span> unrecognized <span class="keyword">import</span> path <span class="string">"golang.org/x/tools/cmd/goimports"</span> </span><br><span class="line">(https <span class="string">fetch:</span> Get <span class="string">https:</span><span class="comment">//golang.org/x/tools/cmd/goimports?go-get=1: dial tcp 220.255.2.153:443: i/o timeout)</span></span><br></pre></td></tr></table></figure>
<h3 id="Sublime">Sublime</h3><p><a href="http://www.jianshu.com/p/3cb5c6f2421c" target="_blank" rel="external">http://www.jianshu.com/p/3cb5c6f2421c</a></p>
<table>
<thead>
<tr>
<th>按键</th>
<th>常用指数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Shift+CMD+P</td>
<td></td>
<td>然后输入ip 安装PackageControl install    </td>
</tr>
<tr>
<td>Alt+CMD+O</td>
<td></td>
<td>预览MD(OmniMarkupPreview), 在本地浏览器打开  </td>
</tr>
<tr>
<td>CMD+R</td>
<td></td>
<td>Markdown的主题列表, 或者源文件的函数列表  </td>
</tr>
<tr>
<td>CMD+P</td>
<td>⭐️⭐️⭐️⭐️⭐️</td>
<td>查找整个Workspace的文件 </td>
</tr>
<tr>
<td>CMD+P，@</td>
<td>⭐️⭐️⭐️</td>
<td>Markdown的大纲</td>
</tr>
<tr>
<td>Alt+CMD+⬇</td>
<td></td>
<td>go to definition  </td>
</tr>
<tr>
<td>CMD+Shift+T</td>
<td></td>
<td>打开上一个关闭的文件  </td>
</tr>
</tbody>
</table>
<p>GoBuild: CMD+b</p>
<p><strong>Sublime自定义设置(以MD GFM为例)</strong><br>Preferences &gt; Package Settings &gt; Markdown Edit &gt; Markdown GFM Settings - User  </p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">word_wrap</span>": <span class="value"><span class="literal">false</span></span>,</span><br><span class="line">    "<span class="attribute">wrap_width</span>": <span class="value"><span class="number">150</span></span>,</span><br><span class="line">    "<span class="attribute">line_numbers</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">    "<span class="attribute">highlight_line</span>": <span class="value"><span class="literal">true</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>效果就是打开md文件, 预览时宽度变宽了, 而不再是窄窄的. 而且较长的行不会自动换行 </p>
<p><strong>在一个窗口内显示多个文件夹</strong><br>打开一个文件夹之后, Project &gt; Add Folder to Project &gt; Save Project As .. &gt; 保存在本地<br>下次直接选择keyspace的名称即可打开上次所有的文件夹</p>
<h1 id="Mac_Dailay">Mac Dailay</h1><p>date +%s<br>date -d “2010-07-20 10:25:30” +%s</p>
<h2 id="翻墙">翻墙</h2><p>http版本：</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=http://<span class="number">192.168</span>.<span class="number">6.32</span>:<span class="number">1080</span> </span><br><span class="line">export https_proxy=<span class="variable">$http</span>_proxy  </span><br><span class="line">export ftp_proxy=<span class="variable">$http</span>_proxy  </span><br><span class="line">export rsync_proxy=<span class="variable">$http</span>_proxy  </span><br><span class="line">export no_proxy=<span class="string">"localhost,127.0.0.1,localaddress,.localdomain.com,*.tongdun.cn"</span> </span><br><span class="line"></span><br><span class="line">git config --global https.proxy http://<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">8787</span>  </span><br><span class="line">git config --global https.proxy https://<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">8787</span>  </span><br><span class="line"></span><br><span class="line">git config --global --unset http.proxy  </span><br><span class="line">git config --global --unset https.proxy </span><br><span class="line"></span><br><span class="line">git config http.proxy</span><br></pre></td></tr></table></figure>
<p>socks5版本：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export ALL_PROXY=<span class="string">"socks5://192.168.6.32:1080"</span></span><br><span class="line"></span><br><span class="line">git config --global http<span class="class">.proxy</span> socks5:<span class="comment">//192.168.6.32:1080</span></span><br><span class="line">git config --global https<span class="class">.proxy</span> socks5:<span class="comment">//192.168.6.32:1080</span></span><br><span class="line"></span><br><span class="line">git config --global http<span class="class">.proxy</span> <span class="string">'socks5://192.168.6.32:1080'</span></span><br><span class="line">git config --global https<span class="class">.proxy</span> <span class="string">'socks5://192.168.6.32:1080'</span></span><br></pre></td></tr></table></figure>
<h1 id="Git">Git</h1><h2 id="QuickStart">QuickStart</h2><table>
<thead>
<tr>
<th>说明</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>从master<strong>创建并切换</strong>到dev分支</td>
<td><code>git checkout -b dev</code></td>
</tr>
<tr>
<td>相当于创建分支和并切换到分支</td>
<td><code>git branch dev &amp;&amp; git checkout dev</code></td>
</tr>
<tr>
<td>在分支上正常<strong>提交</strong>所有文件</td>
<td><code>git add . &amp;&amp; git commit -m &#39;commit log&#39;</code></td>
</tr>
<tr>
<td><strong>切换</strong>回master分支</td>
<td><code>git checkout master</code></td>
</tr>
<tr>
<td>把dev的<strong>分支合并</strong>到当前分支上</td>
<td><code>git merge dev</code></td>
</tr>
<tr>
<td>删除dev分支</td>
<td><code>git branch -d dev</code></td>
</tr>
<tr>
<td>提交dev分支</td>
<td><code>git push origin dev</code></td>
</tr>
</tbody>
</table>
<h2 id="分支">分支</h2><p><strong>在主分支上创建一个新的分支,修改文件, 添加到版本库,提交,远程推送到分支</strong>  </p>
<p>1.在主分支上创建一个新的分支(-b),并切换(checkout)到这个新的分支上.<br>这里最后还可以跟上一个基础分支名称,表示要从哪个基础分支上创建新的分支,<br>这里因为在master上,所以是以master版本创建一个新的分支(默认在当前分支上创建新的分支).  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  test git:(master) git checkout -<span class="tag">b</span> branch001          创建并切换分支</span><br><span class="line">Switched to <span class="tag">a</span> new branch <span class="string">'branch001'</span></span><br></pre></td></tr></table></figure>
<p>2.在分支上的修改,提交和正常的一样</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  test git:(<span class="keyword">branch001) </span>vi README.md                    修改文件</span><br><span class="line">➜  test git:(<span class="keyword">branch001) </span>✗ git <span class="keyword">add </span>.                     加入版本控制</span><br><span class="line">➜  test git:(<span class="keyword">branch001) </span>✗ git commit -m <span class="string">'branch'</span>        提交</span><br><span class="line">[<span class="keyword">branch001 </span><span class="keyword">b078a04] </span><span class="keyword">branch</span><br><span class="line"></span> <span class="number">1</span> file changed, <span class="number">1</span> insertion(+)</span><br></pre></td></tr></table></figure>
<p>3.提交分支到远程仓库<br>在当前新的分支上执行git push origin 分支名字,表示将当前新的分支push到远程仓库对应的分支上.<br>origin是远程仓库的别名. git push origin master表示将master分支推送到远程的master分支上.<br>注意:不要在master分支上执行git push origin branch001.那样会把master分支推送到远程的branch001分支上.<br>也就是说,本地要push的分支和当前所在的分支有关,而origin后面的分支名称,代表的是远程的某个分支.  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> ➜  test git:(branch001) git push origin branch001      远程PUSH</span><br><span class="line">Counting objects: <span class="number">3</span>, done.</span><br><span class="line">Delta compression <span class="keyword">using</span> up to <span class="number">4</span> threads.</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">2</span>/<span class="number">2</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), <span class="number">287</span> bytes | <span class="number">0</span> bytes/s, done.</span><br><span class="line">Total <span class="number">3</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">To https:<span class="comment">//github.com/zqhxuyuan/test.git</span></span><br><span class="line"> * [<span class="keyword">new</span> branch]      branch001 -&gt; branch001</span><br></pre></td></tr></table></figure>
<p>4.在分支下文件被修改,回到主分支,文件没有被修改. 即分支的修改对于主分支不可见.     </p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  test gi<span class="variable">t:</span>(branch001) <span class="keyword">cat</span> README.md                   分支的内容</span><br><span class="line"># test</span><br><span class="line">branch...</span><br><span class="line"></span><br><span class="line">➜  test gi<span class="variable">t:</span>(branch001) git checkout master             主分支</span><br><span class="line">Switched <span class="keyword">to</span> branch <span class="string">'master'</span></span><br><span class="line">Your branch <span class="keyword">is</span> <span class="keyword">up</span>-<span class="keyword">to</span>-date with <span class="string">'origin/master'</span>.</span><br><span class="line"></span><br><span class="line">➜  test gi<span class="variable">t:</span>(master) <span class="keyword">cat</span> README.md                      主分支不可见分支</span><br><span class="line"># test</span><br></pre></td></tr></table></figure>
<blockquote>
<p>可以把分支的文件合并到主分支上.操作方式是在主分支上merge其他分支: git merge branch001 </p>
</blockquote>
<h2 id="git_flow">git flow</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">master<span class="prompt">&gt;&gt;  </span>git branch develop                            在master分支创建一个develop分支</span><br><span class="line">master<span class="prompt">&gt;&gt;  </span>git push -u origin develop                    提交develop分支,虽然这个分支和master分支是一样的,因为还没有做任何修改</span><br><span class="line"></span><br><span class="line">git clone <span class="symbol">ssh:</span>/<span class="regexp">/user@host/path</span><span class="regexp">/to/repo</span>.git              克隆仓库,因为上面提交了develop,所以开发分支也会被拉取到本地</span><br><span class="line">master<span class="prompt">&gt;&gt;  </span>git checkout -b develop origin/develop        基于远程仓库的develop分支,切换到develop分支(因为分支已经存在,-b不会在建了)</span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git checkout -b some-feature develop          基于develop分支创建一个功能分支,并切换到这个功能分支</span><br><span class="line">feature<span class="prompt">&gt;&gt; </span>git status</span><br><span class="line">feature<span class="prompt">&gt;&gt; </span>git add .</span><br><span class="line">feature<span class="prompt">&gt;&gt; </span>git commit -m <span class="string">'feature'</span></span><br><span class="line">feature<span class="prompt">&gt;&gt; </span>git pull origin develop                       拉取最新的develop分支</span><br><span class="line">feature<span class="prompt">&gt;&gt; </span>git checkout develop                          切换到develop分支</span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git merge some-feature                        合并功能分支到develop分支</span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git push                                      提交本地的develop分支到远程的develop分支,因为上面设置了-u,所以可以不用手动添加origin develop</span><br><span class="line"></span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git checkout -b release-<span class="number">0</span>.<span class="number">1</span> develop           在最新的develop上创建一个用于新版本发布的分支</span><br><span class="line">release<span class="prompt">&gt;&gt; </span>....                                          在发布版本上的操作和普通的分支一样</span><br><span class="line">release<span class="prompt">&gt;&gt; </span>git checkout master                           切换到master分支</span><br><span class="line">master<span class="prompt">&gt;&gt;  </span>git merge release-<span class="number">0</span>.<span class="number">1</span>                         将发布版本的分支合并到本地的master分支</span><br><span class="line">master<span class="prompt">&gt;&gt;  </span>git push                                      提交本地的master分支提交到远程的master分支??</span><br><span class="line">master&gt;&gt;  git checkout develop                          切换到develop分支</span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git merge release-<span class="number">0</span>.<span class="number">1</span>                         同样将发布版本的分支合并到本地的develop分支</span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git push                                      提交到远程develop分支</span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git branch -d release-<span class="number">0</span>.<span class="number">1</span>                     删除发布版本这个分支</span><br><span class="line"></span><br><span class="line">master<span class="prompt">&gt;&gt;  </span>git checkout -b issue-<span class="comment">#001 master             基于master分支新创建并切换到一个新的hotfix分支</span></span><br><span class="line">hotfix<span class="prompt">&gt;&gt;  </span><span class="comment"># Fix the bug                                 在hotfix分支上正常操作</span></span><br><span class="line">hotfix<span class="prompt">&gt;&gt;  </span>git checkout master                           切换回master分支</span><br><span class="line">master<span class="prompt">&gt;&gt;  </span>git merge issue-<span class="comment">#001                          合并hotfix分支的修改到本地master分支</span></span><br><span class="line">master<span class="prompt">&gt;&gt;  </span>git push                                      提交到远程master分支</span><br><span class="line"></span><br><span class="line">master<span class="prompt">&gt;&gt;  </span>git checkout develop                          hotfix的修改要同步到master和develop分支上</span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git merge issue-<span class="comment">#001</span></span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git push</span><br><span class="line">develop<span class="prompt">&gt;&gt; </span>git branch -d issue-<span class="comment">#001</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>-u选项设置本地分支去跟踪远程对应的分支。 设置好跟踪的分支后，可以使用git push命令省去指定推送分支的参数</p>
</blockquote>
<h2 id="解决冲突">解决冲突</h2><p>场景: 本地修改了pom.xml,和远程已有的pom.xml不一致.  </p>
<p>1.拉取数据时,指出了local changes发生在pom.xml文件. 如果直接提交,会被拒绝的.   </p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">➜  td-offline <span class="string">git:</span>(master) ✗ git pull</span><br><span class="line"><span class="string">remote:</span> Counting <span class="string">objects:</span> <span class="number">14</span>, done.</span><br><span class="line"><span class="string">remote:</span> Compressing <span class="string">objects:</span> <span class="number">100</span>% (<span class="number">9</span>/<span class="number">9</span>), done.</span><br><span class="line"><span class="string">remote:</span> Total <span class="number">14</span> (delta <span class="number">5</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">Unpacking <span class="string">objects:</span> <span class="number">100</span>% (<span class="number">14</span>/<span class="number">14</span>), done.</span><br><span class="line">From gitlab.fraudmetrix.<span class="string">cn:</span>dp/td-offline</span><br><span class="line">   <span class="number">9061</span>c47..ce0b695  master     -&gt; origin/master</span><br><span class="line">Updating <span class="number">9061</span>c47..ce0b695</span><br><span class="line"><span class="string">error:</span> Your local changes to the following files would be overwritten by <span class="string">merge:</span></span><br><span class="line">    pom.xml</span><br><span class="line">Please, commit your changes or stash them before you can merge.</span><br><span class="line">Aborting</span><br><span class="line"></span><br><span class="line">➜  td-offline <span class="string">git:</span>(master) ✗ git add .</span><br><span class="line">➜  td-offline <span class="string">git:</span>(master) ✗ git commit -m <span class="string">'split module out'</span></span><br><span class="line"></span><br><span class="line">➜  td-offline <span class="string">git:</span>(master) git push origin master</span><br><span class="line">To git<span class="annotation">@gitlab</span>.fraudmetrix.<span class="string">cn:</span>dp/td-offline.git</span><br><span class="line"> ! [rejected]        master -&gt; master (non-fast-forward)</span><br><span class="line"><span class="string">error:</span> failed to push some refs to <span class="string">'git@gitlab.fraudmetrix.cn:dp/td-offline.git'</span></span><br><span class="line"><span class="string">hint:</span> Updates were rejected because the tip of your current branch is behind</span><br><span class="line"><span class="string">hint:</span> its remote counterpart. Integrate the remote changes (e.g.</span><br><span class="line"><span class="string">hint:</span> <span class="string">'git pull ...'</span>) before pushing again.</span><br><span class="line"><span class="string">hint:</span> See the <span class="string">'Note about fast-forwards'</span> <span class="keyword">in</span> <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure>
<p>2.再次pull,会把远程的pom.xml和本地修改后的pom.xml进行尝试合并.  </p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  td-offline git:(master) git pull</span><br><span class="line"><span class="type">Auto</span>-merging pom.xml</span><br><span class="line"><span class="type">CONFLICT</span> (content): <span class="type">Merge</span> conflict <span class="keyword">in</span> pom.xml</span><br><span class="line"><span class="type">Automatic</span> merge failed; fix conflicts <span class="keyword">and</span> then commit the <span class="literal">result</span>.</span><br></pre></td></tr></table></figure>
<p>上面显示合并失败,要自己去修复,然后提交.  </p>
<p>3.修改发生冲突的文件,一般是把自动添加的特殊字符删掉,然后提交.  </p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  td-offline git:(<span class="literal">master</span>) ✗ vi pom.<span class="keyword">xml</span></span><br><span class="line"><span class="title">➜  td-offline</span> git:(<span class="literal">master</span>) ✗ git add .</span><br><span class="line">➜  td-offline git:(<span class="literal">master</span>) ✗ git commit -m 'split module out'</span><br><span class="line">[<span class="keyword">master</span> <span class="title">6f86dcd</span>] split module out</span><br></pre></td></tr></table></figure>
<p>4.最后,成功push到远程分支上. </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  td-offline git:(master) git push origin master</span><br><span class="line">Counting objects: <span class="number">67</span>, done.</span><br><span class="line">Delta compression <span class="keyword">using</span> up to <span class="number">4</span> threads.</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">35</span>/<span class="number">35</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">67</span>/<span class="number">67</span>), <span class="number">47.34</span> KiB | <span class="number">0</span> bytes/s, done.</span><br><span class="line">Total <span class="number">67</span> (delta <span class="number">9</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">To git@gitlab.fraudmetrix.cn:dp/td-offline.git</span><br><span class="line">   ce0b695.<span class="number">.6</span>f86dcd  master -&gt; master</span><br></pre></td></tr></table></figure>
<p>5.尝试拉取,已经是最新的代码了</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  td-offline gi<span class="variable">t:</span>(master) git pull</span><br><span class="line">Already <span class="keyword">up</span>-<span class="keyword">to</span>-date.</span><br></pre></td></tr></table></figure>
<h2 id="忽略文件">忽略文件</h2><p>已经提交的文件，可以从cache中删除</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">➜  riemann-cassandra git:(master) ✗ git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">'update rieman and cassandra version'</span></span><br><span class="line">[<span class="keyword">master</span> <span class="number">460</span>d78c] <span class="keyword">update</span> rieman <span class="keyword">and</span> cassandra <span class="keyword">version</span></span><br><span class="line"> <span class="number">4</span> files <span class="keyword">changed</span>, <span class="number">118</span> insertions(+), <span class="number">22</span> deletions(-)</span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">mode</span> <span class="number">100644</span> .gitignore</span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">mode</span> <span class="number">100644</span> riemann-cassandra.iml</span><br><span class="line"></span><br><span class="line">➜  riemann-cassandra git:(<span class="keyword">master</span>) git rm  <span class="comment">--cached riemann-cassandra.iml</span></span><br><span class="line">rm <span class="string">'riemann-cassandra.iml'</span></span><br><span class="line"></span><br><span class="line">➜  riemann-cassandra git:(<span class="keyword">master</span>) ✗ git <span class="keyword">status</span></span><br><span class="line"><span class="keyword">On</span> branch <span class="keyword">master</span></span><br><span class="line">Your branch <span class="keyword">is</span> ahead <span class="keyword">of</span> <span class="string">'origin/master'</span> <span class="keyword">by</span> <span class="number">1</span> <span class="keyword">commit</span>.</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git push"</span> <span class="keyword">to</span> publish your <span class="keyword">local</span> commits)</span><br><span class="line">Changes <span class="keyword">to</span> be committed:</span><br><span class="line">  (<span class="keyword">use</span> <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</span><br><span class="line"></span><br><span class="line">    deleted:    riemann-cassandra.iml</span><br><span class="line"></span><br><span class="line">➜  riemann-cassandra git:(<span class="keyword">master</span>) ✗ git <span class="keyword">commit</span> -<span class="keyword">m</span> <span class="string">'update rieman and cassandra version'</span></span><br><span class="line">[<span class="keyword">master</span> b56cd65] <span class="keyword">update</span> rieman <span class="keyword">and</span> cassandra <span class="keyword">version</span></span><br><span class="line"> <span class="number">1</span> <span class="keyword">file</span> <span class="keyword">changed</span>, <span class="number">58</span> deletions(-)</span><br><span class="line"> <span class="keyword">delete</span> <span class="keyword">mode</span> <span class="number">100644</span> riemann-cassandra.iml</span></span><br></pre></td></tr></table></figure>
<p>拉取tag：git checkout tag_name</p>
<h2 id="Github的本地fork保持与clone的一致">Github的本地fork保持与clone的一致</h2><p><a href="http://blog.xiayf.cn/2016/01/18/github-fork-pull-request/" target="_blank" rel="external">http://blog.xiayf.cn/2016/01/18/github-fork-pull-request/</a></p>
<p>git remote add kafka <a href="https://github.com/apache/kafka.git">https://github.com/apache/kafka.git</a><br>git pull kafka trunk</p>
<p>git push origin trunk</p>
<p>在本地代码库添加一个新的remote，名为 beego ： git remote add beego <a href="https://github.com/astaxie/beego.git">https://github.com/astaxie/beego.git</a><br>在 develop 分支上执行 git pull beego develop，这会获取 astaxie/beego develop 分支最新的状态，并 merge 到本地代码库的 develop 分支<br>将本地代码库的 develop 分支 push 到 youngsterxyf/beego ：git push origin develop</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日常工作常用命令（Linux、Mac）&lt;br&gt;
    
    </summary>
    
      <category term="work" scheme="http://github.com/zqhxuyuan/categories/work/"/>
    
    
      <category term="ops" scheme="http://github.com/zqhxuyuan/tags/ops/"/>
    
  </entry>
  
  <entry>
    <title>译：Kafka事件驱动和流处理</title>
    <link href="http://github.com/zqhxuyuan/2016/11/18/Kafka-CQRS-Streams/"/>
    <id>http://github.com/zqhxuyuan/2016/11/18/Kafka-CQRS-Streams/</id>
    <published>2016-11-17T16:00:00.000Z</published>
    <updated>2016-10-29T03:50:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.confluent.io/blog/event-sourcing-cqrs-stream-processing-apache-kafka-whats-connection/" target="_blank" rel="external">http://www.confluent.io/blog/event-sourcing-cqrs-stream-processing-apache-kafka-whats-connection/</a><br><a id="more"></a></p>
<p>Event sourcing as an application architecture pattern is rising in popularity. Event sourcing involves modeling the state changes made by applications as an immutable sequence or “log” of events. Instead of modifying the state of the application in-place, event sourcing involves storing the event that triggers the state change in an immutable log and modeling the state changes as responses to the events in the log. We previously wrote about event sourcing, Apache Kafka and how they are related. In this post, I explore these ideas further and show how stream processing and, in particular, Kafka Streams helps to put Event sourcing and CQRS into practice.</p>
<blockquote>
<p>事件驱动（Event sourcing）作为应用程序架构的一种模式现在越来越流行了。事件驱动包括了将应用程序产生的状态改变数据建模成不可变的序列、或者说是事件的日志。它不是直接就地修改应用程序的状态，事件驱动会将触发状态改变的事件存储到一个不可变的日志，在日志中将状态改变建模成针对发生事件的响应。在<a href="http://www.confluent.io/blog/making-sense-of-stream-processing/" target="_blank" rel="external">之前的文章</a>中，我们阐述了事件驱动和Kafka的关系。本篇文章，我们会更进一步探索这些思想，并且会展示流处理，更准确的说是Kafka Streams，怎么帮助我们将事件驱动和CQRS运用在实际中。  </p>
</blockquote>
<p>Let’s take an example. Consider a Facebook-like social networking app (albeit a completely hypothetical one) that updates the profiles database when a user updates their Facebook profile. There are several applications that need to be notified when a user updates their profile — the search application so the user’s profile can be reindexed to be searchable on the changed attribute; the newsfeed application so the user’s connections can find out about the profile update; the data warehouse ETL application to load the latest profile data into the central data warehouse that powers various analytical queries and so on.</p>
<blockquote>
<p>举例类似于Facebook这样的社交网络应用，当用户在Facebook的设置页面更新自己的信息时会更新profiles数据库。有很多应用因为和个人信息相关，在用户更新他们的设置时，这些应用都需要被通知到。比如通知搜索应用，用户的设置可以被重新索引，被改变的属性就可以被搜索出来；通知新闻订阅应用，这样用户的连接就可以找出被更新过的设置；数据仓库应用，加载最新的设置数据到中央仓库，用于不同维护的数据查询和分析等等。</p>
</blockquote>
<p><img src="http://www.confluent.io/wp-content/uploads/2016/09/Event-sourced-based-architecture.jpeg" alt=""><br>基于事件驱动的架构</p>
<p>Event sourcing involves changing the profile web app to model the profile update as an event — something important that happened — and write it to a central log, like a Kafka topic. In this state of the world, all the applications that need to respond to the profile update event, merely subscribe to the Kafka topic and create the respective materialized views – be it a write to cache, index the event in Elasticsearch or simply compute an in-memory aggregate. The profile web app itself also subscribes to the same Kafka topic and writes the update to the profiles database.</p>
<blockquote>
<p>事件驱动会将profile应用程序的profile更新作为一个事件，写入到中央日志系统中，比如一个Kafka的主题。在这个充满状态的世界中，所有需要对profile更新事件作出响应的，所做的工作仅仅是订阅到Kafka的主题，并创建各自的物化视图（消费者读取数据，产生各自的数据），比如将其作为缓存的以写入、Elasticsearch的一个索引事件、或者只是内存中的简单聚合计算。当然profile应用程序本身也要订阅相同的Kafka主题（实际上不是订阅，而是生产，这里的意思是生产者和消费者使用相同的主题，否则生产者生产的消息没有被任何消费者订阅，就没有什么意义了。生产者这里是web应用程序产生的更新事件，消费者是下方各种数据源），并且会将更新写入到profiles数据库。</p>
</blockquote>
<h2 id="事件驱动：一些利弊">事件驱动：一些利弊</h2><p>There are several advantages to modeling applications to use event sourcing — It provides a complete log of every state change ever made to an object; so troubleshooting is easier. By expressing the user intent as an ordered log of immutable events, event sourcing gives the business an audit and compliance(合规性审计) log which also has the added benefit of providing data provenance(起源). It enables resilient(弹性) applications; rolling back applications amounts to rewinding(绕回) the event log and reprocessing data. It has better performance characteristics; writes and reads can be scaled independently. It enables a loosely coupled(松耦合) application architecture; one that makes it easier to move towards a microservices-based architecture. But most importantly:</p>
<p><strong>Event sourcing enables building a forward-compatible(向前兼容) application architecture — the ability to add more applications in the future that need to process the same event but create a different materialized view.</strong></p>
<blockquote>
<p>将应用程序建模成事件驱动有很多优点：它提供了针对一个对象的每个状态改变的完整日志，所以排查问题非常简单。</p>
</blockquote>
<p>For the upsides mentioned above, there are some downsides as well. Event sourcing has a higher learning curve(曲线); it is a new and unfamiliar programming model. The event log might involve more work to query it as it requires converting the events into the required materialized state suitable to query.</p>
<p>That was a quick introduction to event sourcing and some tradeoffs. This article is not meant to go into details of event sourcing or advocate for it’s usage. You can read more about event sourcing and various tradeoffs <a href="http://martinfowler.com/eaaDev/EventSourcing.html" target="_blank" rel="external">here</a>.</p>
<p>除了上面提到的一些优点，当然它也有缺点。事件驱动有更高的学习曲线，它是一种崭新的、不熟悉的编程模型。</p>
<h2 id="Kafka作为事件驱动的支柱">Kafka作为事件驱动的支柱</h2><h2 id="事件驱动和CQRS">事件驱动和CQRS</h2><h2 id="CQRS和Kafka_Streams">CQRS和Kafka Streams</h2><h3 id="方案1：应用程序状态存储到外部存储">方案1：应用程序状态存储到外部存储</h3><h3 id="方案2：应用程序状态存储到Kafka_Streams的本地状态">方案2：应用程序状态存储到Kafka Streams的本地状态</h3><h2 id="Kafka_Streams的交互式查询">Kafka Streams的交互式查询</h2><h2 id="交互式查询的用例">交互式查询的用例</h2><h2 id="使用Kafka作为事件驱动、CQRS">使用Kafka作为事件驱动、CQRS</h2><h3 id="零售店示例">零售店示例</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.confluent.io/blog/event-sourcing-cqrs-stream-processing-apache-kafka-whats-connection/&quot;&gt;http://www.confluent.io/blog/event-sourcing-cqrs-stream-processing-apache-kafka-whats-connection/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/categories/kafka/"/>
    
    
      <category term="kafka" scheme="http://github.com/zqhxuyuan/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>PlayFramework快速入门</title>
    <link href="http://github.com/zqhxuyuan/2016/11/11/Play-Quickstart/"/>
    <id>http://github.com/zqhxuyuan/2016/11/11/Play-Quickstart/</id>
    <published>2016-11-10T16:00:00.000Z</published>
    <updated>2017-09-01T03:09:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>Scala PlayFramework（2.4）入门<br>示例程序：<a href="https://github.com/zqhxuyuan/first-player">https://github.com/zqhxuyuan/first-player</a></p>
<!-- MarkdownTOC -->
<ul>
<li>Run! Run!! Run!!!</li>
<li>Hello World!<ul>
<li>路由和Controller</li>
<li>页面和渲染<ul>
<li>模板编译</li>
</ul>
</li>
</ul>
</li>
<li>Products Example<ul>
<li>implicit</li>
</ul>
</li>
<li>Spark集成<ul>
<li>play-spark-module</li>
<li>Spark Launcher<ul>
<li>mesos</li>
<li>问题</li>
</ul>
</li>
<li>Spark Cassandra</li>
<li>预览</li>
<li>Actor</li>
<li>Quartz<ul>
<li>Job依赖注入</li>
<li>Quartz作业的自动重启</li>
</ul>
</li>
<li>Kafka</li>
</ul>
</li>
<li>附录<ul>
<li>sbt私服</li>
<li>Play MultiProject</li>
<li>Run &amp; Debug With IDEA<ul>
<li><ol>
<li>Play App（❌）</li>
</ol>
</li>
<li><ol>
<li>Sbt Task（✅）</li>
</ol>
</li>
<li><ol>
<li>jvm-debug（✅）</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- /MarkdownTOC -->
<a id="more"></a>
<h1 id="Run!_Run!!_Run!!!">Run! Run!! Run!!!</h1><p><strong>安装activator</strong>  </p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew install typesafe-activator</span><br><span class="line">activator new first-player</span><br><span class="line"><span class="built_in">cd</span> first-player</span><br><span class="line">activator run</span><br></pre></td></tr></table></figure>
<p><strong>导入IntelliJ IDEA</strong>  </p>
<ol>
<li>install IDEA professional</li>
<li>install PlayFramework support</li>
<li>import SBT project</li>
<li>right click controllers.Products, Run Play2 App in idea</li>
</ol>
<h1 id="Hello_World!">Hello World!</h1><p><code>activator new first-player</code>生成的目录结构如下：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">➜  first-player tree -L <span class="number">2</span></span><br><span class="line">.</span><br><span class="line">├── activator                   使用activator new才有该文件</span><br><span class="line">├── activator-launch-<span class="number">1.3</span>.<span class="number">4</span><span class="class">.jar</span></span><br><span class="line">├── app </span><br><span class="line">│   ├── controllers             控制器</span><br><span class="line">│   ├── models                  模型</span><br><span class="line">│   └── views                   视图（Web页面）</span><br><span class="line">├── build<span class="class">.sbt</span></span><br><span class="line">├── conf</span><br><span class="line">│   ├── application<span class="class">.conf</span>        配置文件</span><br><span class="line">│   └── routes                  路由配置</span><br><span class="line">├── project</span><br><span class="line">│   ├── build<span class="class">.properties</span></span><br><span class="line">│   ├── plugins<span class="class">.sbt</span>             插件配置</span><br><span class="line">├── public                      样式和脚本</span><br><span class="line">│   ├── images</span><br><span class="line">│   ├── javascripts</span><br><span class="line">│   └── stylesheets</span><br></pre></td></tr></table></figure>
<h2 id="路由和Controller">路由和Controller</h2><p>路由配置：</p>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># http://localhost:9000</span></span><br><span class="line"><span class="keyword">GET</span>     /                           controllers.HomeController.index</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># http://localhost:9000/hello?n=Play!</span></span><br><span class="line"><span class="keyword">GET</span>     /hello                      controllers.HomeController.hello(n: <span class="built_in">String</span>)</span><br></pre></td></tr></table></figure>
<p>对应的HomeController方法：</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.inject._</span><br><span class="line"><span class="keyword">import</span> models.<span class="type">Product</span></span><br><span class="line"><span class="keyword">import</span> play.api._</span><br><span class="line"><span class="keyword">import</span> play.api.mvc._</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Singleton</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomeController</span> <span class="title">@Inject</span>(</span>) <span class="keyword">extends</span> <span class="type">Controller</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">index</span> =</span> <span class="type">Action</span> &#123;</span><br><span class="line">    <span class="type">Ok</span>(views.html.index(<span class="string">"Your new application is ready."</span>))  <span class="comment">//①</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">hello</span>(</span>name: <span class="type">String</span>) = <span class="type">Action</span> &#123;</span><br><span class="line">    <span class="comment">//Ok("Hello " + name)</span></span><br><span class="line">    <span class="type">Ok</span>(views.html.hello(name))  <span class="comment">//②</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>①：index方法的Response响应会返回一个Html页面，指向<code>app/views/index.scala.html</code>页面<br>②：hello方法的响应返回<code>app/views/hello.scala.html</code>页面，只不过这个页面会渲染一个参数</p>
<blockquote>
<p>注：如果Controller的Action方法是Ok(“字符串”)则返回的是一个字符串。<br>2.2版本中Controller可以用object，在2.4需要用class，以及@Inject和@Singleton</p>
</blockquote>
<p>本节知识点：</p>
<ol>
<li>路由配置到控制器的映射</li>
<li>Action的Response返回值如何指向页面</li>
<li>Action的参数如何传递给页面</li>
</ol>
<h2 id="页面和渲染">页面和渲染</h2><p>views是Play的html页面，也可以在该页面下新建子目录。在IntelliJ中，在views下创建子目录，<br>也是创建一个Package，，因为views和controllers的等级相同。  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  app tree views</span><br><span class="line">views</span><br><span class="line">├── hello<span class="class">.scala</span><span class="class">.html</span></span><br><span class="line">├── index<span class="class">.scala</span><span class="class">.html</span></span><br><span class="line">├── main<span class="class">.scala</span><span class="class">.html</span></span><br><span class="line">├── products</span><br><span class="line">│   ├── <span class="tag">details</span><span class="class">.scala</span><span class="class">.html</span></span><br><span class="line">│   ├── edit<span class="class">.scala</span><span class="class">.html</span></span><br><span class="line">│   ├── list<span class="class">.scala</span><span class="class">.html</span></span><br><span class="line">│   └── main<span class="class">.scala</span><span class="class">.html</span></span><br></pre></td></tr></table></figure>
<p>app/views/index.scala.html：index方法中的”Your new application is ready.”<br>会传递到index.scala.html作为第一行的message参数。  </p>
<p>@main调用的是同一个路径的main.scala.html模板页面，也可以用@views.html.main绝对路径。<br>Play的scala.html页面实际上是模板，可以用Scala代码的方式来调用。<br>所以@main方法的第一参数是字符串（标题），第二个参数是Html对象用来表示page body。<br>@play20.welcome是Play内置的一个方法（绝对路径是@views.html.play20）</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@(message: String)</span><br><span class="line"></span><br><span class="line">@main("Welcome to Play") &#123;</span><br><span class="line">    @play20.welcome(message, style = "Scala")</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的@main方法会调用同路径的main.scala.html模板页面（Layout嵌套）。<br>app/views/main.scala.html：第一行有两个参数，而且是参数列表的方式，而不是两个参数放在一起。  </p>
<p>index页面的”Welcome to Play”作为title参数，第二个参数则作为content参数，正好对应了Html类型。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@(title: String)(content: Html)</span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>@title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">media</span>=<span class="value">"screen"</span> <span class="attribute">href</span>=<span class="value">"@routes.Assets.versioned("</span><span class="value">stylesheets</span>/<span class="attribute">main.css</span>")"&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"shortcut icon"</span> <span class="attribute">type</span>=<span class="value">"image/png"</span> <span class="attribute">href</span>=<span class="value">"@routes.Assets.versioned("</span><span class="value">images</span>/<span class="attribute">favicon.png</span>")"&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        @content</span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>两个参数放在一起的话，类似：@(title: String, content: Html)。对应的调用方式也要更改为：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@main</span>(<span class="string">"Welcome to Play"</span>, &#123;</span><br><span class="line">    <span class="variable">@play20</span>.<span class="function">welcome</span>(message, style = <span class="string">"Scala"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>本节知识点：</p>
<ol>
<li>views子目录的创建，以及在控制器中如何访问到指定子目录下的页面</li>
<li>页面的参数定义和使用（@标记后面的都是Scala代码），参数列表</li>
<li>嵌套模板的使用，对应的Scala方法</li>
<li>缺省的模板调用路径是和当前页面相同路径，绝对路径是<code>@views.html.</code></li>
</ol>
<h3 id="模板编译">模板编译</h3><p>views下的每个页面都会被编译成Scala的模板类，下面右图views.html实际上就和控制器的调用是类似的。  </p>
<blockquote>
<p>如果是其他格式，比如json、xml，则用views.json或者views.xml，可见不总是views.html。</p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20161111154235071" alt="play vies"></p>
<p>HomeController的idnex方法</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span> =</span> <span class="type">Action</span> &#123;</span><br><span class="line">  <span class="type">Ok</span>(views.html.index(<span class="string">"Your new application is ready."</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译后的文件路径：target/scala-2.11/twirl/main/views.html/index.template.scala<br>index是一个object，对应index类的apply方法，接收一个参数，参数名称为message。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">index_Scope0</span> &#123;</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">index</span>  &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">apply</span>(</span>message: <span class="type">String</span>):play.twirl.api.<span class="type">HtmlFormat</span>.<span class="type">Appendable</span> = &#123;...&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">render</span>(</span>message:<span class="type">String</span>): play.twirl.api.<span class="type">HtmlFormat</span>.<span class="type">Appendable</span> = apply(message)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f</span>:</span>((<span class="type">String</span>) =&gt; play.twirl.api.<span class="type">HtmlFormat</span>.<span class="type">Appendable</span>) = (message) =&gt; apply(message)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ref</span>:</span> <span class="keyword">this</span>.<span class="keyword">type</span> = <span class="keyword">this</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">index</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">index_Scope0</span>.<span class="title">index</span></span></span><br></pre></td></tr></table></figure>
<p>index.scala.html调用@main方法对应的views/main.scala.html</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">(message:</span> String)</span><br><span class="line">@<span class="function">main</span>(<span class="string">"Welcome to Play"</span>) </span>&#123;</span><br><span class="line">    <span class="at_rule">@<span class="keyword">play20.welcome(message,</span> style = <span class="string">"Scala"</span>)</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>main方法对应的编译文件：target/scala-2.11/twirl/main/views.html/main.template.scala<br>main类的apply方法有两个参数，分别是(title: String)(content: Html)</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">main_Scope0</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">main</span> &#123;</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">apply</span>(</span>title: <span class="type">String</span>)(content: <span class="type">Html</span>):play.twirl.api.<span class="type">HtmlFormat</span>.<span class="type">Appendable</span> = &#123; ... &#125;</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">render</span>(</span>title:<span class="type">String</span>,content:<span class="type">Html</span>): play.twirl.api.<span class="type">HtmlFormat</span>.<span class="type">Appendable</span> = apply(title)(content)</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f</span>:</span>((<span class="type">String</span>) =&gt; (<span class="type">Html</span>) =&gt; play.twirl.api.<span class="type">HtmlFormat</span>.<span class="type">Appendable</span>) = (title) =&gt; (content) =&gt; apply(title)(content)</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">ref</span>:</span> <span class="keyword">this</span>.<span class="keyword">type</span> = <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">main</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">main_Scope0</span>.<span class="title">main</span></span></span><br></pre></td></tr></table></figure>
<h1 id="Products_Example">Products Example</h1><p>路由配置：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST    /products                      controllers<span class="class">.Products</span><span class="class">.save</span></span><br><span class="line">GET     /products/new                  controllers<span class="class">.Products</span><span class="class">.newProduct</span></span><br><span class="line">GET     /products                      controllers<span class="class">.Products</span><span class="class">.products</span></span><br><span class="line">GET     /products/:ean                 controllers<span class="class">.Products</span><span class="class">.show</span>(ean: Long)</span><br></pre></td></tr></table></figure>
<p>Products控制器，为了支持国际化，添加I18nSupport接口。注意每个Action都添加了<code>implicit request =&gt;</code></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Singleton</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Products</span> <span class="title">@Inject</span>(</span>) (<span class="keyword">val</span> messagesApi: <span class="type">MessagesApi</span>) <span class="keyword">extends</span> <span class="type">Controller</span> <span class="keyword">with</span> <span class="type">I18nSupport</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">products</span> =</span> <span class="type">Action</span> &#123; <span class="keyword">implicit</span> request =&gt;</span><br><span class="line">    <span class="keyword">val</span> products = <span class="type">Product</span>.findAll</span><br><span class="line">    <span class="type">Ok</span>(views.html.products.list(products))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">show</span>(</span>ean: <span class="type">Long</span>) = <span class="type">Action</span> &#123; <span class="keyword">implicit</span> request =&gt;</span><br><span class="line">    <span class="type">Product</span>.findByEan(ean).map &#123; product =&gt;</span><br><span class="line">      <span class="type">Ok</span>(views.html.products.details(product))</span><br><span class="line">    &#125;.getOrElse(<span class="type">NotFound</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>views/products/list.scala.html</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@(productList: List[Product])(implicit lang: Messages)</span><br><span class="line"></span><br><span class="line">@products.main(Messages("application.name")) &#123;</span><br><span class="line">    &lt;dl class="products"&gt;</span><br><span class="line">    @for(product &lt;- productList) &#123;</span><br><span class="line">        &lt;dt&gt;&lt;a href="@controllers.routes.Products.show(product.ean)"&gt;@product.ean&lt;/a&gt;&lt;/dt&gt;</span><br><span class="line">        &lt;dt&gt;@product.name&lt;/dt&gt;</span><br><span class="line">        &lt;dd&gt;@product.description&lt;/dd&gt;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/dl&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意第一行的参数<code>productList</code>不能命名为：<code>products</code>，否则第二行的<code>@products.main</code>会报错，<br>它会认为<code>products</code>来自于第一行的参数，但这个参数并没有<code>main</code>方法（List没有main方法）。而实际上<code>@products.main</code><br>代表的是要调用<code>@views.html.products.main</code>对应的<code>views/products/main.scala.html</code>页面。<br>注意：<code>productList</code>参数名称不需要和<code>Products</code>控制器的<code>products</code>方法的<code>products</code>变量相同，只要类型相同即可，所以可以是任意的名称。</p>
</blockquote>
<p>这里还有一个隐式的Messages，用来做国际化的支持。</p>
<p>反向路由：在product的en上超链接：”@controllers.routes.Products.show(product.ean)”，也可以省略掉controllers：”@routes.Products.show(product.ean)”。<br>在从路由配置到控制器时，Play会帮我们创建一个控制器到路由的反向路由配置。比如这里页面要访问”Products.show”方法。  </p>
<p><img src="http://img.blog.csdn.net/20161111154733495" alt="reverse route"></p>
<p>本节知识点：</p>
<ol>
<li>国际化的支持，以及implicit隐式参数的使用</li>
<li>参数名称不能和嵌套模板的子目录名称一样（比如参数productList，子目录是products，两者不能相同）</li>
<li>在页面中访问控制器方法，使用反向路由</li>
</ol>
<h2 id="implicit">implicit</h2><p>正常的Action调用</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//normal invoke, must pass Cart Object</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">catalog10</span>(</span>) = <span class="type">Action</span> &#123; request =&gt;</span><br><span class="line">  <span class="keyword">val</span> products = <span class="type">ProductDAO</span>.list</span><br><span class="line">  <span class="type">Ok</span>(views.html.shop.catalog10(products, cart(request)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cart</span>(</span>request: <span class="type">RequestHeader</span>) = &#123;</span><br><span class="line">  <span class="type">Cart</span>.demoCart()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对应的页面：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@(products: Seq[Product3], cart: Cart)</span><br><span class="line"></span><br><span class="line">@shop.cart10("")(cart) &#123;</span><br><span class="line">    <span class="tag">&lt;<span class="title">h2</span>&gt;</span>Catalog<span class="tag">&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line">    @views.html.shop.productList(products)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用implicit，不需要传递Cat对象，不过request需要使用implicit，同时还要提供一个能够生成Cart对象的方法或者trait接口</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//<span class="type">implicit</span> invoke, no need to <span class="keyword">pass</span> Cart</span><br><span class="line">def catalog11() = <span class="keyword">Action</span> &#123; <span class="type">implicit</span> request =&gt;</span><br><span class="line">  val products = ProductDAO.list</span><br><span class="line">  //too many arguments for method apply: (content: C)(<span class="type">implicit</span> writeable: play.api.http.Writeable[C])play.api.mvc.Result <span class="type">in</span> <span class="keyword">class</span> <span class="keyword">Status</span></span><br><span class="line">  //Ok(views.html.shop.catalog11(products), cart(request))</span><br><span class="line"></span><br><span class="line">  //如果没有定义<span class="type">implicit</span>的方法,是不会直接使用上面的cart方法的</span><br><span class="line">  //could not find <span class="type">implicit</span> <span class="keyword">value</span> for <span class="type">parameter</span> cart: models.Cart</span><br><span class="line">  Ok(views.html.shop.catalog11(products))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//方法名称任意,只要定义成<span class="type">implicit</span>即可</span><br><span class="line">//注意:如果去掉返回类型: models.Cart,也会报错说找不到models.Cart,所以要显示声明返回类型</span><br><span class="line"><span class="type">implicit</span> def cartImplicit(<span class="type">implicit</span> request: RequestHeader): models.Cart = &#123;</span><br><span class="line">  Cart.demoCart()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对应的页面：可以看到参数中cart变成implicit，调用时，不需要传递cart了。</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@(products: Seq[Product3])(<span class="type">implicit</span> cart: Cart)</span><br><span class="line"></span><br><span class="line">@shop.cart11(<span class="string">""</span>) &#123;</span><br><span class="line">    &lt;h2&gt;Catalog&lt;/h2&gt;</span><br><span class="line">    @views.html.shop.productList(products)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果没有implicit方法没有显示指定类型，也会报错：</p>
<p><img src="http://img.blog.csdn.net/20161111170901722" alt="implicit 1"></p>
<p>We’ve moved the Cart parameter to a second parameter list and made it implicit,<br>so we can apply this template and omit the second parameter list if an implicit Cart is available on the calling side. </p>
<p>Now we’ve declared the cart method as implicit. In addition, we’ve declared the RequestHeader parameter of<br>both our action and the cart method as implicit. If we now call the views.html.shop.catalog template and<br>omit the Cart parameter, the Scala compiler will look for an implicit Cart in scope. It’ll find the cart method,<br>which requires a RequestHeader parameter that’s also declared as implicit, but that’s also available.<br>We can make our newly created cart method reusable, by moving it into a trait. Then We can<br>now mix this trait into every controller where we need access to our implicit Cart.</p>
<p>我们定义了Action方法的RequestHeader（implicit request）以及cart方法（implicit def cartImplicit）都是implicit。<br>那么调用catalog模板（views.html.shop.catalog11(products)）时就可以省略Cart参数，Scala的编译器会在范围内寻找隐式的Cart对象。<br>它会找到cart方法（implicit def cartImplicit）。为了让隐式的Cart方法可重用，可以定义在一个接口中，这样其他控制器都可以使用这个方法</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">trait WithCart &#123;</span><br><span class="line">  <span class="type">implicit</span> def cart(<span class="type">implicit</span> request: RequestHeader) = &#123;</span><br><span class="line">    // Get cart from session</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161111170829019" alt="implicit cart"></p>
<p>虽然使用implicit有诸多好处，但是在需要添加其他implicit参数时，还要在页面中依次添加对应的(implicit)声明。解决办法是用一个对象来表示所有的隐式参数<br>然后在页面中使用这个隐式的对象即可，当需要添加隐式参数时，往对象中添加即可，页面中因为引用的是对象，所以自动继承了这个对象的所有隐式参数。</p>
<p>It’s often necessary to pass multiple values from your controller into your main template. Even with implicit parameters,<br>it would be a hassle to have to add another one each time, because you’d still have to add the implicit parameter to all<br>of the template definitions. One straightforward solution is to create a single class that contains all the objects you<br>need in your template, and pass an instance of that. If you want to add a value to it, you only need to adapt the template<br>where you use it, and the method that constructs it.  </p>
<p>It’s common to pass the RequestHeader or Request to templates, as we’ll see in section 6.7.2.<br>Play provides a WrappedRequest class, which wraps a Request and implements the interface itself as well,<br>so it’s usable as if it were a regular Request. But by extending WrappedRequest, you can add other fields:</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">case class UserDataRequest[<span class="link_label">A</span>](<span class="link_url">val user: User, val cart: Cart, request: Request[A]</span>) extends WrappedRequest(request)</span><br></pre></td></tr></table></figure>
<p>If you pass an instance of this UserDataRequest to your template, you have a refer- ence to the Request, User, and Cart.</p>
<h1 id="Spark集成">Spark集成</h1><p>Play和Spark使用的jackson依赖包有冲突，如果没有显示指定jackson，报错：</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">play.api.http.HttpErrorHandlerExceptions$<span class="variable">$anon</span><span class="variable">$1</span>: Execution exception[[RuntimeException: </span><br><span class="line">java.lang.VerifyError: class com.fasterxml.jackson.module.scala.ser.ScalaIteratorSerializer overrides final method withResolved.</span><br><span class="line">(Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;</span><br><span class="line">  Lcom/fasterxml/jackson/databind/JsonSerializer;)Lcom/fasterxml/jackson/databind/ser/std/AsArraySerializerBase;]]</span><br><span class="line">  at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:<span class="number">280</span>)</span><br><span class="line">  at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:<span class="number">206</span>)</span><br><span class="line">  at play.api.GlobalSettings<span class="variable">$class</span>.onError(GlobalSettings.scala:<span class="number">160</span>)</span><br><span class="line">  at Global$.onError(Global.scala:<span class="number">11</span>)</span><br><span class="line">  at play.api.http.GlobalSettingsHttpErrorHandler.onServerError(HttpErrorHandler.scala:<span class="number">98</span>)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="variable">$anonfun</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$1</span>.applyOrElse(PlayRequestHandler.scala:<span class="number">100</span>)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="variable">$anonfun</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$1</span>.applyOrElse(PlayRequestHandler.scala:<span class="number">99</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">344</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">343</span>)</span><br><span class="line">  at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:<span class="number">32</span>)</span><br></pre></td></tr></table></figure>
<p><a href="https://groups.google.com/forum/#!topic/play-framework/LIf_Ughidcc" target="_blank" rel="external">https://groups.google.com/forum/#!topic/play-framework/LIf_Ughidcc</a><br><a href="https://github.com/FasterXML/jackson-module-scala/issues/214">https://github.com/FasterXML/jackson-module-scala/issues/214</a><br><a href="http://stackoverflow.com/questions/33815396/spark-com-fasterxml-jackson-module-error" target="_blank" rel="external">http://stackoverflow.com/questions/33815396/spark-com-fasterxml-jackson-module-error</a>  </p>
<p>没有指定jackson时，jackson-module-scala和jackson-databind的不一致：</p>
<p><img src="http://img.blog.csdn.net/20161118100439795" alt="play-spark-jackson1"></p>
<p>在build.sbt手动添加<code>jackson-module-scala</code>的依赖，版本和Play的一致。  </p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">libraryDependencies</span> += <span class="string">"com.fasterxml.jackson.module"</span> % <span class="string">"jackson-module-scala_2.11"</span> % <span class="string">"2.7.6"</span></span><br></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161118100453598" alt="play-spark-jackson2"></p>
<p>如果Actor版本不对，执行Spark时可能报错：比如引入了libraryDependencies += “com.github.dnvriend” %% “akka-persistence-jdbc” % “2.6.8”<br>是的Actor版本从2.4.10升级到2.4.12</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">play.api.http.HttpErrorHandlerExceptions$<span class="variable">$anon</span><span class="variable">$1</span>: Execution exception[[RuntimeException: java.lang.NoSuchMethodError: akka.actor.LocalActorRefProvider.log()Lakka/event/LoggingAdapter;]]</span><br><span class="line">  at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:<span class="number">293</span>)</span><br><span class="line">  at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:<span class="number">220</span>)</span><br><span class="line">  at play.api.GlobalSettings<span class="variable">$class</span>.onError(GlobalSettings.scala:<span class="number">160</span>)</span><br><span class="line">  at Global$.onError(Global.scala:<span class="number">11</span>)</span><br><span class="line">  at play.api.http.GlobalSettingsHttpErrorHandler.onServerError(HttpErrorHandler.scala:<span class="number">100</span>)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="variable">$anonfun</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$1</span>.applyOrElse(PlayRequestHandler.scala:<span class="number">100</span>)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="variable">$anonfun</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$1</span>.applyOrElse(PlayRequestHandler.scala:<span class="number">99</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">344</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">343</span>)</span><br><span class="line">  at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:<span class="number">32</span>)</span><br></pre></td></tr></table></figure>
<h2 id="play-spark-module">play-spark-module</h2><p><a href="https://github.com/JoaoVasques/play-spark-module">https://github.com/JoaoVasques/play-spark-module</a>  </p>
<p>修改SparkController的timeout时间为30s，访问：<a href="http://localhost:9000/spark/count" target="_blank" rel="external">http://localhost:9000/spark/count</a>  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[warn] o<span class="class">.a</span><span class="class">.h</span><span class="class">.u</span><span class="class">.NativeCodeLoader</span> - Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</span><br><span class="line">[info] <span class="tag">p</span><span class="class">.m</span><span class="class">.i</span><span class="class">.j</span><span class="class">.p</span><span class="class">.s</span><span class="class">.w</span><span class="class">.SparkJobWorker</span> - Starting job <span class="number">1561847669</span> future</span><br><span class="line"><span class="number">3.216</span></span><br><span class="line">[info] <span class="tag">p</span><span class="class">.m</span><span class="class">.i</span><span class="class">.j</span><span class="class">.p</span><span class="class">.s</span><span class="class">.w</span><span class="class">.SparkJobWorker</span> - Job is done. Shutting down worker</span><br></pre></td></tr></table></figure>
<h2 id="Spark_Launcher">Spark Launcher</h2><p>Package org.apache.spark.launcher：Library for launching Spark applications.<br>This library allows applications to launch Spark programmatically. There’s only one entry point to the library - the SparkLauncher class.</p>
<p>The SparkLauncher.startApplication( org.apache.spark.launcher.SparkAppHandle.Listener…) can be used to start Spark and provide a handle to monitor and control the running application:</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"><span class="keyword">import</span> org.apache.spark.launcher.SparkAppHandle;</span></span><br><span class="line"><span class="preprocessor"><span class="keyword">import</span> org.apache.spark.launcher.SparkLauncher;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLauncher</span> </span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) throws Exception &#123;</span><br><span class="line">   SparkAppHandle handle = <span class="keyword">new</span> SparkLauncher()</span><br><span class="line">     .setAppResource(<span class="string">"/my/app.jar"</span>)</span><br><span class="line">     .setMainClass(<span class="string">"my.spark.app.Main"</span>)</span><br><span class="line">     .setMaster(<span class="string">"local"</span>)</span><br><span class="line">     .setConf(SparkLauncher.DRIVER_MEMORY, <span class="string">"2g"</span>)</span><br><span class="line">     .startApplication();</span><br><span class="line">   <span class="comment">// Use handle API to monitor / control application.</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>It’s also possible to launch a raw child process, using the SparkLauncher.launch() method:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.launcher.SparkLauncher;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLauncher</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">   Process spark = <span class="keyword">new</span> SparkLauncher()</span><br><span class="line">     .setAppResource(<span class="string">"/my/app.jar"</span>)</span><br><span class="line">     .setMainClass(<span class="string">"my.spark.app.Main"</span>)</span><br><span class="line">     .setMaster(<span class="string">"local"</span>)</span><br><span class="line">     .setConf(SparkLauncher.DRIVER_MEMORY, <span class="string">"2g"</span>)</span><br><span class="line">     .launch();</span><br><span class="line">   spark.waitFor();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This method requires the calling code to manually manage the child process, including its output streams (to avoid possible deadlocks). It’s recommended that SparkLauncher.startApplication( org.apache.spark.launcher.SparkAppHandle.Listener…) be used instead.</p>
<h3 id="mesos">mesos</h3><p>代码中指定本地文件（不推荐用法）</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /Users/zhengqh/Github/scala/simple-app</span><br><span class="line">mvn clean package</span><br><span class="line">~/Soft/spark-<span class="number">1.6</span><span class="number">.2</span>-bin-hadoop2<span class="number">.6</span>/bin/spark-submit --<span class="keyword">class</span> <span class="string">"SimpleApp"</span> --master local\[<span class="number">2</span>\] \</span><br><span class="line">target/scala-<span class="number">2.10</span>/simple-project_2<span class="number">.10</span>-<span class="number">1.0</span>.jar</span><br></pre></td></tr></table></figure>
<p>命令行指定file路径（也可以指定文件类型，比如本地或者hdfs，推荐用法）</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/Soft/spark-<span class="number">1.6</span><span class="number">.2</span>-bin-hadoop2<span class="number">.6</span>/bin/spark-submit --<span class="keyword">class</span> <span class="string">"SimpleApp"</span> --master local\[<span class="number">2</span>\] \</span><br><span class="line">--conf spark.app.logfile=<span class="string">"file:///Users/zhengqh/Github/scala/simple-app/README.md"</span> \</span><br><span class="line">target/scala-<span class="number">2.10</span>/simple-project_2<span class="number">.10</span>-<span class="number">1.0</span>.jar</span><br></pre></td></tr></table></figure>
<p>如果本地环境变量有HADOOP_CONF_DIR，需要注释掉，否则会使用hdfs，报错：  </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread "main" java.net.ConnectException: <span class="operator"><span class="keyword">Call</span> <span class="keyword">From</span> zqhmac/<span class="number">10.57</span><span class="number">.2</span><span class="number">.31</span> <span class="keyword">to</span> localhost:<span class="number">9000</span> </span><br><span class="line"><span class="keyword">failed</span> <span class="keyword">on</span> <span class="keyword">connection</span> <span class="keyword">exception</span>: <span class="keyword">java</span>.net.ConnectException: <span class="keyword">Connection</span> refused;</span> For more details see: </span><br><span class="line">http://wiki.apache.org/hadoop/ConnectionRefused</span><br></pre></td></tr></table></figure>
<p>命令行也可以指定其他运行方式，比如mesos，所以不推荐在代码中写死setMaster，除非开发时设置为setMaster(“local[*]”)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/Soft/spark-<span class="number">1.6</span><span class="number">.2</span>-bin-hadoop2<span class="number">.6</span>/bin/spark-submit --<span class="keyword">class</span> <span class="string">"SimpleApp"</span> --master <span class="string">"mesos://192.168.6.52:5050"</span> \</span><br><span class="line">--conf spark.app.logfile=<span class="string">"file:///Users/zhengqh/Github/scala/simple-app/README.md"</span> \</span><br><span class="line">target/scala-<span class="number">2.10</span>/simple-project_2<span class="number">.10</span>-<span class="number">1.0</span>.jar</span><br></pre></td></tr></table></figure>
<p>在本地运行时报错：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Failed to <span class="operator"><span class="keyword">load</span> <span class="keyword">native</span> Mesos <span class="keyword">library</span> <span class="keyword">from</span> /<span class="keyword">Users</span>/zhengqh/<span class="keyword">Library</span>/<span class="keyword">Java</span>/Extensions:/<span class="keyword">Library</span>/<span class="keyword">Java</span>/Extensions:</span><br><span class="line">/Network/<span class="keyword">Library</span>/<span class="keyword">Java</span>/Extensions:/<span class="keyword">System</span>/<span class="keyword">Library</span>/<span class="keyword">Java</span>/Extensions:/usr/lib/<span class="keyword">java</span>:.</span><br><span class="line"><span class="keyword">Exception</span> <span class="keyword">in</span> <span class="keyword">thread</span> <span class="string">"main"</span> <span class="keyword">java</span>.lang.UnsatisfiedLinkError: <span class="keyword">no</span> mesos <span class="keyword">in</span> <span class="keyword">java</span>.<span class="keyword">library</span>.<span class="keyword">path</span></span></span><br></pre></td></tr></table></figure>
<p>所以需要在本地安装有mesos环境，Mac安装mesos可以参考<a href="https://mesosphere.com/blog/2014/07/07/installing-mesos-on-your-mac-with-homebrew/" target="_blank" rel="external">https://mesosphere.com/blog/2014/07/07/installing-mesos-on-your-mac-with-homebrew/</a>  </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew <span class="operator"><span class="keyword">install</span> mesos</span><br><span class="line">/usr/<span class="keyword">local</span>/sbin/mesos-<span class="keyword">master</span> <span class="comment">--registry=in_memory --ip=127.0.0.1</span></span></span><br></pre></td></tr></table></figure>
<p>环境变量添加mesos:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For Linux</span></span><br><span class="line">$ <span class="built_in">export</span> MESOS_NATIVE_JAVA_LIBRARY=<span class="string">'/usr/local/lib/libmesos.so'</span></span><br><span class="line"><span class="comment"># For OSX</span></span><br><span class="line">$ <span class="built_in">export</span> MESOS_NATIVE_JAVA_LIBRARY=<span class="string">'/usr/local/lib/libmesos.dylib'</span></span><br></pre></td></tr></table></figure>
<p>本地安装好mesos,设置好mesos库，指定远程mesos：mesos://192.168.6.52:5050</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">Scheduler driver bound to loopback interface! Cannot communicate with remote master(s). You might want to set 'LIBPROCESS_IP' environment variable to use a routable IP address.</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">I1121 15:07:33.008949 778174464 sched.cpp:157] Version: 0.22.1</span><br><span class="line">I1121 15:07:33.016233 651489280 sched.cpp:254] New master detected at master<span class="comment">@192.168.6.52:5050</span></span><br></pre></td></tr></table></figure>
<p>但是，执行到上面后就不动了，可能是本地的mesos和远程mesos版本不对：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">~/Soft/spark-<span class="number">1.6</span>.<span class="number">2</span>-bin-hadoop2.<span class="number">6</span>/bin/spark-submit --class <span class="string">"SimpleApp"</span> --master mesos:<span class="comment">//zk://192.168.6.55:2181,192.168.6.56:2181,192.168.6.57:2181/mesos \</span></span><br><span class="line">--conf spark<span class="class">.app</span><span class="class">.logfile</span>=<span class="string">"file:///Users/zhengqh/Github/scala/simple-app/README.md"</span> \</span><br><span class="line">target/scala-<span class="number">2.10</span>/simple-project_2.<span class="number">10</span>-<span class="number">1.0</span><span class="class">.jar</span></span><br><span class="line"></span><br><span class="line">I1121 <span class="number">15</span>:<span class="number">34</span>:<span class="number">42.195302</span> <span class="number">655667200</span> group<span class="class">.cpp</span>:<span class="number">313</span>] Group process (<span class="function"><span class="title">group</span><span class="params">(<span class="number">1</span>)</span></span>@<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">61225</span>) connected to ZooKeeper</span><br><span class="line">I1121 <span class="number">15</span>:<span class="number">34</span>:<span class="number">42.195796</span> <span class="number">655667200</span> group<span class="class">.cpp</span>:<span class="number">790</span>] Syncing group operations: queue size (joins, cancels, datas) = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">I1121 <span class="number">15</span>:<span class="number">34</span>:<span class="number">42.196069</span> <span class="number">655667200</span> group<span class="class">.cpp</span>:<span class="number">385</span>] Trying to create path <span class="string">'/mesos'</span> <span class="keyword">in</span> ZooKeeper</span><br><span class="line">I1121 <span class="number">15</span>:<span class="number">34</span>:<span class="number">42.208238</span> <span class="number">662253568</span> detector<span class="class">.cpp</span>:<span class="number">138</span>] Detected <span class="tag">a</span> new leader: (id=<span class="string">'62'</span>)</span><br><span class="line">I1121 <span class="number">15</span>:<span class="number">34</span>:<span class="number">42.208575</span> <span class="number">655667200</span> group<span class="class">.cpp</span>:<span class="number">659</span>] Trying to get <span class="string">'/mesos/json.info_0000000062'</span> <span class="keyword">in</span> ZooKeeper</span><br><span class="line">Failed to detect <span class="tag">a</span> master: Failed to parse data of unknown <span class="tag">label</span> <span class="string">'json.info</span></span><br></pre></td></tr></table></figure>
<p>如果指定本地mesos（要先在本地启动mesos-local）：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">~/Soft/spark-<span class="number">1.6</span><span class="number">.2</span>-bin-hadoop2<span class="number">.6</span>/bin/spark-submit --<span class="keyword">class</span> <span class="string">"SimpleApp"</span> --master <span class="string">"mesos://localhost:5050"</span> \</span><br><span class="line">--conf spark.app.logfile=<span class="string">"file:///Users/zhengqh/Github/scala/simple-app/README.md"</span> \</span><br><span class="line">target/scala-<span class="number">2.10</span>/simple-project_2<span class="number">.10</span>-<span class="number">1.0</span>.jar</span><br><span class="line"></span><br><span class="line">I1121 <span class="number">15</span>:<span class="number">11</span>:<span class="number">07.611460</span> <span class="number">515149824</span> sched.cpp:<span class="number">448</span>] Framework registered with <span class="number">20161121</span>-<span class="number">150645</span>-<span class="number">16777343</span>-<span class="number">5050</span>-<span class="number">14247</span>-<span class="number">0000</span> 出现Framework registered，实际上就说明连接本地mesos成功了</span><br><span class="line"><span class="number">16</span>/<span class="number">11</span>/<span class="number">21</span> <span class="number">15</span>:<span class="number">11</span>:<span class="number">07</span> INFO mesos.CoarseMesosSchedulerBackend: Registered as framework ID <span class="number">20161121</span>-<span class="number">150645</span>-<span class="number">16777343</span>-<span class="number">5050</span>-<span class="number">14247</span>-<span class="number">0000</span></span><br><span class="line"><span class="number">16</span>/<span class="number">11</span>/<span class="number">21</span> <span class="number">15</span>:<span class="number">11</span>:<span class="number">08</span> INFO mesos.CoarseMesosSchedulerBackend: SchedulerBackend is ready <span class="keyword">for</span> scheduling beginning after reached minRegisteredResourcesRatio: <span class="number">0.0</span></span><br><span class="line"><span class="number">16</span>/<span class="number">11</span>/<span class="number">21</span> <span class="number">15</span>:<span class="number">11</span>:<span class="number">08</span> INFO mesos.CoarseMesosSchedulerBackend: Mesos task <span class="number">0</span> is now TASK_RUNNING</span><br><span class="line"><span class="number">16</span>/<span class="number">11</span>/<span class="number">21</span> <span class="number">15</span>:<span class="number">11</span>:<span class="number">12</span> INFO spark.SparkContext: Starting job: count at SimpleApp.scala:<span class="number">13</span></span><br><span class="line">Lines with a: <span class="number">1</span>, Lines with b: <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>或者将jar包上传到具有mesos环境的客户端节点，因为远程spark-mesos已经集成好了，所以可以不写–master</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/install/spark/bin/spark-submit --<span class="keyword">class</span> <span class="string">"SimpleApp"</span> --master <span class="string">"mesos://192.168.6.52:5050"</span> \</span><br><span class="line">--conf spark.app.logfile=<span class="string">"/user/qihuang.zheng/hello.txt"</span> \</span><br><span class="line">simple-project_2<span class="number">.10</span>-<span class="number">1.0</span>.jar</span><br></pre></td></tr></table></figure>
<h3 id="问题">问题</h3><p>远程运行任务，并指定proxy-user</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">sudo -u admin /usr/install/spark/bin/spark-submit \</span><br><span class="line">--master mesos:<span class="comment">//zk://192.168.6.55:2181,192.168.6.56:2181,192.168.6.57:2181/mesos \</span></span><br><span class="line">--class cn<span class="class">.fraudmetrix</span><span class="class">.pontus</span><span class="class">.demo</span><span class="class">.SimpleApp</span> \</span><br><span class="line">--proxy-user qihuang<span class="class">.zheng</span> \</span><br><span class="line">--conf spark<span class="class">.app</span><span class="class">.logfile</span>=<span class="string">"/user/qihuang.zheng/hello.txt"</span> \</span><br><span class="line">/usr/install/pontus/pontus-spark-<span class="number">1.0</span>.<span class="number">0</span>-SNAPSHOT-fat<span class="class">.jar</span></span><br><span class="line"></span><br><span class="line">sudo -u admin /usr/install/spark/bin/spark-submit \</span><br><span class="line">--master <span class="string">"mesos://zk://192.168.6.55:2181,192.168.6.56:2181,192.168.6.57:2181/mesos"</span> \</span><br><span class="line">--proxy-user qihuang<span class="class">.zheng</span> \</span><br><span class="line">--class cn<span class="class">.fraudmetrix</span><span class="class">.pontus</span><span class="class">.cassandra</span><span class="class">.PontusCassandra2HDFSJobHandler</span> \</span><br><span class="line">--conf spark<span class="class">.app</span><span class="class">.logfile</span>=<span class="string">"/usr/install/spark/README.md"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.destTable</span>=<span class="string">""</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.tableId</span>=<span class="string">""</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.destType</span>=<span class="string">"HDFS"</span> \</span><br><span class="line">--conf spark<span class="class">.cores</span><span class="class">.max</span>=<span class="string">"10"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.execution</span><span class="class">.id</span>=<span class="string">"3"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.destUsername</span>=<span class="string">""</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.creator</span>=<span class="string">"qihuang.zheng"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.sourceUri</span>=<span class="string">"192.168.6.53/keyspace1"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.sourcePassword</span>=<span class="string">""</span> \</span><br><span class="line">--conf spark<span class="class">.mesos</span><span class="class">.role</span>=<span class="string">"test"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.sourceTable</span>=<span class="string">"standard1"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.sourceType</span>=<span class="string">"Cassandra"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.readMode</span>=<span class="string">"1"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.tableTs</span>=<span class="string">""</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.destUri</span>=<span class="string">"/user/tongdun/pontus/standard1"</span> \</span><br><span class="line">--conf spark<span class="class">.executor</span><span class="class">.memory</span>=<span class="string">"4g"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.name</span>=<span class="string">"cassandra-hdfs"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.destPassword</span>=<span class="string">""</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.id</span>=<span class="string">"2"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.writeMode</span>=<span class="string">"1"</span> \</span><br><span class="line">--conf spark<span class="class">.pontus</span><span class="class">.sourceUsername</span>=<span class="string">""</span> \</span><br><span class="line">/usr/install/pontus/pontus-spark-<span class="number">1.0</span>.<span class="number">0</span>-SNAPSHOT-fat.jar</span><br></pre></td></tr></table></figure>
<p>mesos kill framework, but won’t kill spark driver</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">curl</span> -XPOST <span class="url">http://192.168.6.52:5050/master/teardown</span> -d <span class="string">'frameworkId=475189a7-dcde-4859-9af8-6fc2e63be94e-0556'</span></span><br></pre></td></tr></table></figure>
<p>手动设置spark.app.id无效：</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/usr/install/spark/bin/spark-submit \</span></span><br><span class="line">-<span class="ruby">-master <span class="symbol">mesos:</span>/<span class="regexp">/zk:/</span><span class="regexp">/192.168.6.55:2181,192.168.6.56:2181,192.168.6.57:2181/mesos</span> \</span><br><span class="line"></span>-<span class="ruby">-<span class="class"><span class="keyword">class</span> <span class="title">cn</span>.<span class="title">fraudmetrix</span>.<span class="title">pontus</span>.<span class="title">demo</span>.<span class="title">SimpleApp</span> \</span></span><br><span class="line"></span>-<span class="ruby">-conf <span class="string">"spark.app.id=SimpleApp"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.app.logfile=<span class="string">"/user/qihuang.zheng/hello.txt"</span> \</span><br><span class="line"></span><span class="comment">/usr/install/pontus/pontus-spark-1.0.0-SNAPSHOT-fat.jar</span></span><br></pre></td></tr></table></figure>
<p>序列化不适配？？ spark_2.10和2.11的版本问题？？</p>
<p>play_2.5.9不支持scal_2.10: <a href="https://www.playframework.com/documentation/2.5.x/Migration25" target="_blank" rel="external">https://www.playframework.com/documentation/2.5.x/Migration25</a><br>Play 2.3 and 2.4 supported both Scala 2.10 and 2.11. Play 2.5 has dropped support for Scala 2.10 and now only supports Scala 2.11.  </p>
<p>Jira: <a href="https://issues.apache.org/jira/browse/SPARK-13956" target="_blank" rel="external">https://issues.apache.org/jira/browse/SPARK-13956</a><br>说的是driver版本和executor版本不一致导致的。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">I1209 20:58:27.190430  3039 sched.cpp:703] Framework registered with 475189a7-dcde-4859-9af8-6fc2e63be94e-0423</span><br><span class="line">[info] p.<span class="keyword">m</span>.i.j.p.s.w.SparkJobWorker - Starting job -1651747420 future</span><br><span class="line">[Stage 0:&gt;                                                          (0 + 0) / 2][<span class="keyword">error</span>] o.a.s.<span class="keyword">n</span>.s.TransportRequestHandler - <span class="keyword">Error</span> <span class="keyword">while</span> invoking RpcHandler#receive() <span class="keyword">on</span> RPC id 8897300371223004861</span><br><span class="line">java.io.InvalidClassException: org.apache.spark.rpc.netty.RequestMessage; <span class="keyword">local</span> <span class="keyword">class</span> incompatible: stream classdesc serialVersionUID = -2221986757032131007, <span class="keyword">local</span> <span class="keyword">class</span> serialVersionUID = -5447855329526097695</span><br><span class="line">  at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:616)</span><br><span class="line">  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1623)</span><br><span class="line">  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1518)</span><br><span class="line">  at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1774)</span><br><span class="line">  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)</span><br><span class="line">  at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)</span><br><span class="line">  at org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.<span class="keyword">scala</span>:76)</span><br><span class="line">  at org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.<span class="keyword">scala</span>:109)</span><br><span class="line">  at org.apache.spark.rpc.netty.NettyRpcEnv$<span class="label">$anonfun</span><span class="label">$deserialize</span><span class="label">$1</span>$<span class="label">$anonfun</span><span class="label">$apply</span><span class="label">$1</span>.apply(NettyRpcEnv.<span class="keyword">scala</span>:258)</span><br><span class="line">  at <span class="keyword">scala</span>.util.DynamicVariable.withValue(DynamicVariable.<span class="keyword">scala</span>:58)</span><br><span class="line">[<span class="keyword">error</span>] o.a.s.<span class="keyword">n</span>.s.TransportRequestHandler - <span class="keyword">Error</span> <span class="keyword">while</span> invoking RpcHandler#receive() <span class="keyword">on</span> RPC id 9207561725902043069</span><br><span class="line">java.io.InvalidClassException: org.apache.spark.rpc.netty.RequestMessage; <span class="keyword">local</span> <span class="keyword">class</span> incompatible: stream classdesc serialVersionUID = -2221986757032131007, <span class="keyword">local</span> <span class="keyword">class</span> serialVersionUID = -5447855329526097695</span><br><span class="line">  at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:616)</span><br><span class="line">  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1623)</span><br><span class="line">  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1518)</span><br><span class="line">  at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1774)</span><br><span class="line">  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)</span><br><span class="line">  at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)</span><br><span class="line">  at org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.<span class="keyword">scala</span>:76)</span><br><span class="line">  at org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.<span class="keyword">scala</span>:109)</span><br><span class="line">  at org.apache.spark.rpc.netty.NettyRpcEnv$<span class="label">$anonfun</span><span class="label">$deserialize</span><span class="label">$1</span>$<span class="label">$anonfun</span><span class="label">$apply</span><span class="label">$1</span>.apply(NettyRpcEnv.<span class="keyword">scala</span>:258)</span><br><span class="line">  at <span class="keyword">scala</span>.util.DynamicVariable.withValue(DynamicVariable.<span class="keyword">scala</span>:58)</span><br><span class="line">[warn] o.a.s.s.TaskSchedulerImpl - Initial job has not accepted any resources; check your <span class="keyword">cluster</span> UI to ensure that workers are registered and have sufficient resources</span><br><span class="line">[<span class="keyword">error</span>] application -</span><br><span class="line"></span><br><span class="line">! @72b33a0kb - Internal server <span class="keyword">error</span>, <span class="keyword">for</span> (GET) [/spark] -&gt;</span><br><span class="line"></span><br><span class="line">play.api.UnexpectedException: Unexpected exception[TimeoutException: Futures timed <span class="keyword">out</span> after [30 seconds]]</span><br><span class="line">  at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.<span class="keyword">scala</span>:276)</span><br><span class="line">  at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.<span class="keyword">scala</span>:206)</span><br><span class="line">  at play.api.GlobalSettings<span class="label">$class</span>.onError(GlobalSettings.<span class="keyword">scala</span>:160)</span><br><span class="line">  at util.<span class="keyword">Global</span>$.onError(<span class="keyword">Global</span>.<span class="keyword">scala</span>:22)</span><br><span class="line">  at play.api.http.GlobalSettingsHttpErrorHandler.onServerError(HttpErrorHandler.<span class="keyword">scala</span>:98)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="label">$anonfun</span><span class="label">$2</span>$<span class="label">$anonfun</span><span class="label">$apply</span><span class="label">$1</span>.applyOrElse(PlayRequestHandler.<span class="keyword">scala</span>:100)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="label">$anonfun</span><span class="label">$2</span>$<span class="label">$anonfun</span><span class="label">$apply</span><span class="label">$1</span>.applyOrElse(PlayRequestHandler.<span class="keyword">scala</span>:99)</span><br><span class="line">  at <span class="keyword">scala</span>.concurrent.Future$<span class="label">$anonfun</span><span class="label">$recoverWith</span><span class="label">$1</span>.apply(Future.<span class="keyword">scala</span>:344)</span><br><span class="line">  at <span class="keyword">scala</span>.concurrent.Future$<span class="label">$anonfun</span><span class="label">$recoverWith</span><span class="label">$1</span>.apply(Future.<span class="keyword">scala</span>:343)</span><br><span class="line">  at <span class="keyword">scala</span>.concurrent.impl.CallbackRunnable.<span class="keyword">run</span>(Promise.<span class="keyword">scala</span>:32)</span><br><span class="line">Caused <span class="keyword">by</span>: java.util.concurrent.TimeoutException: Futures timed <span class="keyword">out</span> after [30 seconds]</span><br><span class="line">  at <span class="keyword">scala</span>.concurrent.impl.Promise<span class="label">$DefaultPromise</span>.ready(Promise.<span class="keyword">scala</span>:219)</span><br><span class="line">  at <span class="keyword">scala</span>.concurrent.impl.Promise<span class="label">$DefaultPromise</span>.result(Promise.<span class="keyword">scala</span>:223)</span><br><span class="line">  at <span class="keyword">scala</span>.concurrent.Await$<span class="label">$anonfun</span><span class="label">$result</span><span class="label">$1</span>.apply(package.<span class="keyword">scala</span>:190)</span><br><span class="line">  at akka.dispatch.MonitorableThreadFactory<span class="label">$AkkaForkJoinWorkerThread</span>$<span class="label">$anon</span><span class="label">$3</span>.block(ThreadPoolBuilder.<span class="keyword">scala</span>:167)</span><br><span class="line">  at <span class="keyword">scala</span>.concurrent.forkjoin.ForkJoinPool.managedBlock(ForkJoinPool.java:3640)</span><br><span class="line">  at akka.dispatch.MonitorableThreadFactory<span class="label">$AkkaForkJoinWorkerThread</span>.blockOn(ThreadPoolBuilder.<span class="keyword">scala</span>:165)</span><br><span class="line">  at akka.dispatch.BatchingExecutor<span class="label">$BlockableBatch</span>.blockOn(BatchingExecutor.<span class="keyword">scala</span>:106)</span><br><span class="line">  at <span class="keyword">scala</span>.concurrent.Await$.result(package.<span class="keyword">scala</span>:190)</span><br><span class="line">  at controllers.SparkController$<span class="label">$anonfun</span><span class="label">$sparkJob</span><span class="label">$1</span>.apply(SparkController.<span class="keyword">scala</span>:56)</span><br><span class="line">  at controllers.SparkController$<span class="label">$anonfun</span><span class="label">$sparkJob</span><span class="label">$1</span>.apply(SparkController.<span class="keyword">scala</span>:42)</span><br><span class="line">[warn] o.a.s.s.TaskSchedulerImpl - Initial job has not accepted any resources; check your <span class="keyword">cluster</span> UI to ensure that workers are registered and have sufficient resources</span><br></pre></td></tr></table></figure>
<p>把spark-core打包方式改为provided是不行的。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java<span class="class">.lang</span><span class="class">.NoClassDefFoundError</span>: org/apache/spark/Logging</span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.ClassLoader</span><span class="class">.defineClass1</span>(Native Method)</span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.ClassLoader</span><span class="class">.defineClass</span>(ClassLoader<span class="class">.java</span>:<span class="number">760</span>)</span><br><span class="line">  at java<span class="class">.security</span><span class="class">.SecureClassLoader</span><span class="class">.defineClass</span>(SecureClassLoader<span class="class">.java</span>:<span class="number">142</span>)</span><br><span class="line">  at java<span class="class">.net</span><span class="class">.URLClassLoader</span><span class="class">.defineClass</span>(URLClassLoader<span class="class">.java</span>:<span class="number">467</span>)</span><br><span class="line">  at java<span class="class">.net</span><span class="class">.URLClassLoader</span><span class="class">.access</span>$<span class="number">100</span>(URLClassLoader<span class="class">.java</span>:<span class="number">73</span>)</span><br><span class="line">  at java<span class="class">.net</span><span class="class">.URLClassLoader</span>$<span class="number">1</span>.<span class="function"><span class="title">run</span><span class="params">(URLClassLoader.java:<span class="number">368</span>)</span></span></span><br><span class="line">  at java<span class="class">.net</span><span class="class">.URLClassLoader</span>$<span class="number">1</span>.<span class="function"><span class="title">run</span><span class="params">(URLClassLoader.java:<span class="number">362</span>)</span></span></span><br><span class="line">  at java<span class="class">.security</span><span class="class">.AccessController</span><span class="class">.doPrivileged</span>(Native Method)</span><br><span class="line">  at java<span class="class">.net</span><span class="class">.URLClassLoader</span><span class="class">.findClass</span>(URLClassLoader<span class="class">.java</span>:<span class="number">361</span>)</span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.ClassLoader</span><span class="class">.loadClass</span>(ClassLoader<span class="class">.java</span>:<span class="number">424</span>)</span><br><span class="line">  at sun<span class="class">.misc</span><span class="class">.Launcher</span><span class="variable">$AppClassLoader</span>.<span class="function"><span class="title">loadClass</span><span class="params">(Launcher.java:<span class="number">331</span>)</span></span></span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.ClassLoader</span><span class="class">.loadClass</span>(ClassLoader<span class="class">.java</span>:<span class="number">357</span>)</span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.Class</span><span class="class">.getDeclaredConstructors0</span>(Native Method)</span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.Class</span><span class="class">.privateGetDeclaredConstructors</span>(Class<span class="class">.java</span>:<span class="number">2671</span>)</span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.Class</span><span class="class">.getDeclaredConstructors</span>(Class<span class="class">.java</span>:<span class="number">2020</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.spi</span><span class="class">.InjectionPoint</span><span class="class">.forConstructorOf</span>(InjectionPoint<span class="class">.java</span>:<span class="number">245</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ConstructorBindingImpl</span><span class="class">.create</span>(ConstructorBindingImpl<span class="class">.java</span>:<span class="number">99</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.createUninitializedBinding</span>(InjectorImpl<span class="class">.java</span>:<span class="number">658</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.createJustInTimeBinding</span>(InjectorImpl<span class="class">.java</span>:<span class="number">882</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.createJustInTimeBindingRecursive</span>(InjectorImpl<span class="class">.java</span>:<span class="number">805</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.getJustInTimeBinding</span>(InjectorImpl<span class="class">.java</span>:<span class="number">282</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.getBindingOrThrow</span>(InjectorImpl<span class="class">.java</span>:<span class="number">214</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.getProviderOrThrow</span>(InjectorImpl<span class="class">.java</span>:<span class="number">1006</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.getProvider</span>(InjectorImpl<span class="class">.java</span>:<span class="number">1038</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.getProvider</span>(InjectorImpl<span class="class">.java</span>:<span class="number">1001</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.getInstance</span>(InjectorImpl<span class="class">.java</span>:<span class="number">1051</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.guice</span><span class="class">.GuiceInjector</span><span class="class">.instanceOf</span>(GuiceInjectorBuilder<span class="class">.scala</span>:<span class="number">405</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.RoutesProvider</span>$<span class="variable">$anonfun</span>$<span class="number">2</span>.<span class="function"><span class="title">apply</span><span class="params">(BuiltinModule.scala:<span class="number">82</span>)</span></span></span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.RoutesProvider</span>$<span class="variable">$anonfun</span>$<span class="number">2</span>.<span class="function"><span class="title">apply</span><span class="params">(BuiltinModule.scala:<span class="number">82</span>)</span></span></span><br><span class="line">  at scala<span class="class">.Option</span><span class="class">.fold</span>(Option<span class="class">.scala</span>:<span class="number">158</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.RoutesProvider</span><span class="class">.get</span><span class="variable">$lzycompute</span>(BuiltinModule<span class="class">.scala</span>:<span class="number">82</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.RoutesProvider</span><span class="class">.get</span>(BuiltinModule<span class="class">.scala</span>:<span class="number">78</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.RoutesProvider</span><span class="class">.get</span>(BuiltinModule<span class="class">.scala</span>:<span class="number">77</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ProviderInternalFactory</span><span class="class">.provision</span>(ProviderInternalFactory<span class="class">.java</span>:<span class="number">81</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.BoundProviderFactory</span><span class="class">.provision</span>(BoundProviderFactory<span class="class">.java</span>:<span class="number">72</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ProviderInternalFactory</span><span class="class">.circularGet</span>(ProviderInternalFactory<span class="class">.java</span>:<span class="number">61</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.BoundProviderFactory</span><span class="class">.get</span>(BoundProviderFactory<span class="class">.java</span>:<span class="number">62</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.SingleParameterInjector</span><span class="class">.inject</span>(SingleParameterInjector<span class="class">.java</span>:<span class="number">38</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.SingleParameterInjector</span><span class="class">.getAll</span>(SingleParameterInjector<span class="class">.java</span>:<span class="number">62</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ConstructorInjector</span><span class="class">.provision</span>(ConstructorInjector<span class="class">.java</span>:<span class="number">104</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ConstructorInjector</span><span class="class">.construct</span>(ConstructorInjector<span class="class">.java</span>:<span class="number">85</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ConstructorBindingImpl</span><span class="variable">$Factory</span>.<span class="function"><span class="title">get</span><span class="params">(ConstructorBindingImpl.java:<span class="number">267</span>)</span></span></span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.FactoryProxy</span><span class="class">.get</span>(FactoryProxy<span class="class">.java</span>:<span class="number">56</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.SingleParameterInjector</span><span class="class">.inject</span>(SingleParameterInjector<span class="class">.java</span>:<span class="number">38</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.SingleParameterInjector</span><span class="class">.getAll</span>(SingleParameterInjector<span class="class">.java</span>:<span class="number">62</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ConstructorInjector</span><span class="class">.provision</span>(ConstructorInjector<span class="class">.java</span>:<span class="number">104</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ConstructorInjector</span><span class="class">.construct</span>(ConstructorInjector<span class="class">.java</span>:<span class="number">85</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ConstructorBindingImpl</span><span class="variable">$Factory</span>.<span class="function"><span class="title">get</span><span class="params">(ConstructorBindingImpl.java:<span class="number">267</span>)</span></span></span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ProviderToInternalFactoryAdapter</span>$<span class="number">1</span>.<span class="function"><span class="title">call</span><span class="params">(ProviderToInternalFactoryAdapter.java:<span class="number">46</span>)</span></span></span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.callInContext</span>(InjectorImpl<span class="class">.java</span>:<span class="number">1103</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.ProviderToInternalFactoryAdapter</span><span class="class">.get</span>(ProviderToInternalFactoryAdapter<span class="class">.java</span>:<span class="number">40</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.SingletonScope</span>$<span class="number">1</span>.<span class="function"><span class="title">get</span><span class="params">(SingletonScope.java:<span class="number">145</span>)</span></span></span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InternalFactoryToProviderAdapter</span><span class="class">.get</span>(InternalFactoryToProviderAdapter<span class="class">.java</span>:<span class="number">41</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.FactoryProxy</span><span class="class">.get</span>(FactoryProxy<span class="class">.java</span>:<span class="number">56</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InternalInjectorCreator</span>$<span class="number">1</span>.<span class="function"><span class="title">call</span><span class="params">(InternalInjectorCreator.java:<span class="number">205</span>)</span></span></span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InternalInjectorCreator</span>$<span class="number">1</span>.<span class="function"><span class="title">call</span><span class="params">(InternalInjectorCreator.java:<span class="number">199</span>)</span></span></span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InjectorImpl</span><span class="class">.callInContext</span>(InjectorImpl<span class="class">.java</span>:<span class="number">1092</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InternalInjectorCreator</span><span class="class">.loadEagerSingletons</span>(InternalInjectorCreator<span class="class">.java</span>:<span class="number">199</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InternalInjectorCreator</span><span class="class">.injectDynamically</span>(InternalInjectorCreator<span class="class">.java</span>:<span class="number">180</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.internal</span><span class="class">.InternalInjectorCreator</span><span class="class">.build</span>(InternalInjectorCreator<span class="class">.java</span>:<span class="number">110</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.Guice</span><span class="class">.createInjector</span>(Guice<span class="class">.java</span>:<span class="number">96</span>)</span><br><span class="line">  at com<span class="class">.google</span><span class="class">.inject</span><span class="class">.Guice</span><span class="class">.createInjector</span>(Guice<span class="class">.java</span>:<span class="number">84</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.guice</span><span class="class">.GuiceBuilder</span><span class="class">.injector</span>(GuiceInjectorBuilder<span class="class">.scala</span>:<span class="number">181</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.guice</span><span class="class">.GuiceApplicationBuilder</span><span class="class">.build</span>(GuiceApplicationBuilder<span class="class">.scala</span>:<span class="number">123</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.inject</span><span class="class">.guice</span><span class="class">.GuiceApplicationLoader</span><span class="class">.load</span>(GuiceApplicationLoader<span class="class">.scala</span>:<span class="number">21</span>)</span><br><span class="line">  at play<span class="class">.core</span><span class="class">.server</span><span class="class">.ProdServerStart</span>$.<span class="function"><span class="title">start</span><span class="params">(ProdServerStart.scala:<span class="number">47</span>)</span></span></span><br><span class="line">  at play<span class="class">.core</span><span class="class">.server</span><span class="class">.ProdServerStart</span>$.<span class="function"><span class="title">main</span><span class="params">(ProdServerStart.scala:<span class="number">22</span>)</span></span></span><br><span class="line">  at play<span class="class">.core</span><span class="class">.server</span><span class="class">.ProdServerStart</span><span class="class">.main</span>(ProdServerStart.scala)</span><br><span class="line">Caused by: java<span class="class">.lang</span><span class="class">.ClassNotFoundException</span>: org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.Logging</span></span><br><span class="line">  at java<span class="class">.net</span><span class="class">.URLClassLoader</span><span class="class">.findClass</span>(URLClassLoader<span class="class">.java</span>:<span class="number">381</span>)</span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.ClassLoader</span><span class="class">.loadClass</span>(ClassLoader<span class="class">.java</span>:<span class="number">424</span>)</span><br><span class="line">  at sun<span class="class">.misc</span><span class="class">.Launcher</span><span class="variable">$AppClassLoader</span>.<span class="function"><span class="title">loadClass</span><span class="params">(Launcher.java:<span class="number">331</span>)</span></span></span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.ClassLoader</span><span class="class">.loadClass</span>(ClassLoader<span class="class">.java</span>:<span class="number">357</span>)</span><br><span class="line">  ... <span class="number">68</span> more</span><br></pre></td></tr></table></figure>
<p>在pontus-web中直接运行Spark作业</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">! @<span class="number">72</span>ck129fb - Internal server error, <span class="keyword">for</span> (GET) [/preview/HDFS/activity] -&gt;</span><br><span class="line"></span><br><span class="line">play.api.UnexpectedException: Unexpected exception[RuntimeException: java.lang.NoSuchMethodError: akka.actor.LocalActorRefProvider.log()Lakka/event/LoggingAdapter;]</span><br><span class="line">  at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:<span class="number">289</span>)</span><br><span class="line">  at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:<span class="number">220</span>)</span><br><span class="line">  at play.api.GlobalSettings<span class="variable">$class</span>.onError(GlobalSettings.scala:<span class="number">160</span>)</span><br><span class="line">  at util.Global$.onError(Global.scala:<span class="number">20</span>)</span><br><span class="line">  at play.api.http.GlobalSettingsHttpErrorHandler.onServerError(HttpErrorHandler.scala:<span class="number">100</span>)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="variable">$anonfun</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$1</span>.applyOrElse(PlayRequestHandler.scala:<span class="number">100</span>)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="variable">$anonfun</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$1</span>.applyOrElse(PlayRequestHandler.scala:<span class="number">99</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">344</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">343</span>)</span><br><span class="line">  at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:<span class="number">32</span>)</span><br><span class="line">Caused by: java.lang.RuntimeException: java.lang.NoSuchMethodError: akka.actor.LocalActorRefProvider.log()Lakka/event/LoggingAdapter;</span><br><span class="line">  at play.api.mvc.ActionBuilder$<span class="variable">$anon</span><span class="variable">$2</span>.apply(Action.scala:<span class="number">463</span>)</span><br><span class="line">  at play.api.mvc.Action$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$5</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$6</span>.apply(Action.scala:<span class="number">112</span>)</span><br><span class="line">  at play.api.mvc.Action$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$5</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$6</span>.apply(Action.scala:<span class="number">112</span>)</span><br><span class="line">  at play.utils.Threads$.withContextClassLoader(Threads.scala:<span class="number">21</span>)</span><br><span class="line">  at play.api.mvc.Action$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$5</span>.apply(Action.scala:<span class="number">111</span>)</span><br><span class="line">  at play.api.mvc.Action$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$5</span>.apply(Action.scala:<span class="number">110</span>)</span><br><span class="line">  at scala.Option.<span class="keyword">map</span>(Option.scala:<span class="number">146</span>)</span><br><span class="line">  at play.api.mvc.Action$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>.apply(Action.scala:<span class="number">110</span>)</span><br><span class="line">  at play.api.mvc.Action$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>.apply(Action.scala:<span class="number">103</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$flatMap</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">251</span>)</span><br><span class="line">Caused by: java.lang.NoSuchMethodError: akka.actor.LocalActorRefProvider.log()Lakka/event/LoggingAdapter;</span><br><span class="line">  at akka.remote.RemoteActorRefProvider.&lt;init&gt;(RemoteActorRefProvider.scala:<span class="number">128</span>)</span><br><span class="line">  at sun.reflect.NativeConstructorAccessorImpl.newInstance<span class="number">0</span>(Native Method)</span><br><span class="line">  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:<span class="number">62</span>)</span><br><span class="line">  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:<span class="number">45</span>)</span><br><span class="line">  at java.lang.reflect.Constructor.newInstance(Constructor.java:<span class="number">422</span>)</span><br><span class="line">  at akka.actor.ReflectiveDynamicAccess$<span class="variable">$anonfun</span><span class="variable">$createInstanceFor</span><span class="variable">$2</span>.apply(ReflectiveDynamicAccess.scala:<span class="number">32</span>)</span><br><span class="line">  at scala.util.Try$.apply(Try.scala:<span class="number">192</span>)</span><br><span class="line">  at akka.actor.ReflectiveDynamicAccess.createInstanceFor(ReflectiveDynamicAccess.scala:<span class="number">27</span>)</span><br><span class="line">  at akka.actor.ReflectiveDynamicAccess$<span class="variable">$anonfun</span><span class="variable">$createInstanceFor</span><span class="variable">$3</span>.apply(ReflectiveDynamicAccess.scala:<span class="number">38</span>)</span><br><span class="line">  at akka.actor.ReflectiveDynamicAccess$<span class="variable">$anonfun</span><span class="variable">$createInstanceFor</span><span class="variable">$3</span>.apply(ReflectiveDynamicAccess.scala:<span class="number">38</span>)</span><br></pre></td></tr></table></figure>
<p><a href="http://stackoverflow.com/questions/40883978/migration-to-play-2-5-leads-to-this-error-nosuchmethoderror-akka-actor-locala" target="_blank" rel="external">http://stackoverflow.com/questions/40883978/migration-to-play-2-5-leads-to-this-error-nosuchmethoderror-akka-actor-locala</a>  </p>
<p>监听器</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssc.sparkContext.addSparkListener(new SparkListener()&#123;</span><br><span class="line">  override <span class="function"><span class="keyword">def</span> <span class="title">onJobEnd</span><span class="params">(jobEnd: SparkListenerJobEnd)</span>:</span> Unit = &#123;&#125;</span><br><span class="line">  override <span class="function"><span class="keyword">def</span> <span class="title">onApplicationEnd</span><span class="params">(applicationEnd: SparkListenerApplicationEnd)</span>:</span> Unit = &#123;</span><br><span class="line">    println(<span class="string">"PontusKafka2HDFSJobHandler onApplicationEnd...."</span>)</span><br><span class="line">    PontusExecutionDao.updateStatus(conf)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>使用命令行测试，当关闭程序后，会打印onApplicationEnd事件。在mesos上使用kill driver直接杀死应用程序，也会调用监听器的方法</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@log_env@712: Client environment:zookeeper.version=zookeeper C client 3.4.5</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@log_env@716: Client environment:host.name=dp0653</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@log_env@723: Client environment:os.name=Linux</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@log_env@724: Client environment:os.arch=<span class="number">3.10.97-1</span>.el6.elrepo.x86_64</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@log_env@725: Client environment:os.version=#1 SMP Sat Feb <span class="number">20 11:55:29</span> EST 2016</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@log_env@733: Client environment:user.name=qihuang.zheng</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@log_env@741: Client environment:user.home=/home/qihuang.zheng</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@log_env@753: Client environment:user.dir=/home/qihuang.zheng</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">4:41791(0</span>x<span class="number">2b1d28803</span>700):ZOO_INFO@zookeeper_init@786: Initiating client connection, host=<span class="number">192.168.6.55</span>:<span class="number">2181,192.168</span>.<span class="number">6.56:2181</span>,<span class="number">192.168.6.57</span>:2181 sessionTimeout=10000 watcher=<span class="number">0x2b1d00</span>0e1645 sessionId=0 sessionPasswd=&lt;null&gt; context=<span class="number">0x2b1d44</span>000960 flags=0</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,53</span><span class="number">5:41791(0</span>x<span class="number">2b1d2950</span>a700):ZOO_INFO@check_events@1703: initiated connection to server [<span class="number">192.168.6.57</span>:2181]</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.536334</span> 42031 sched.cpp:222] Version: 0.28.2</span><br><span class="line"><span class="number">2016-12-13</span> <span class="number">11:34:45,55</span><span class="number">5:41791(0</span>x<span class="number">2b1d2950</span>a700):ZOO_INFO@check_events@1750: session establishment complete on server [<span class="number">192.168.6.57</span>:2181], sessionId=<span class="number">0x3589e76</span>ef2f82e0, negotiated timeout=10000</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.556421</span> 42015 group.cpp:349] Group process (group(1)@<span class="number">192.168.6.53</span>:45534) connected to ZooKeeper</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.556823</span> 42015 group.cpp:831] Syncing group operations: queue size (joins, cancels, datas) = (0, 0, 0)</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.556903</span> 42015 group.cpp:427] Trying to create path '/mesos' in ZooKeeper</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.561131 42</span>008 detector.cpp:152] Detected a new leader: (id='70')</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.561971</span> 42011 group.cpp:700] Trying to get '/mesos/json.info_<span class="number">0000000070</span>' in ZooKeeper</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.565317</span> 42023 detector.cpp:479] <span class="keyword">A</span> new leading master (UPID=master@<span class="number">192.168.6.52</span>:5050) is detected</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.565773</span> 42026 sched.cpp:326] New master detected at master@<span class="number">192.168.6.52</span>:5050</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.567448</span> 42026 sched.cpp:336] No credentials provided. Attempting to register without authentication</span><br><span class="line">I<span class="number">1213 11:34</span>:<span class="number">45.574049</span> 42026 sched.cpp:703] Framework registered with <span class="number">475189a7</span>-dcde-4859-9af8-6fc2e63be94e-0558</span><br><span class="line"></span><br><span class="line">^CPontusKafka2HDFSJobHandler onApplicationEnd....</span><br><span class="line">I<span class="number">1213 11:42</span>:<span class="number">21.526136</span>  4384 sched.cpp:1911] Asked to stop the driver</span><br><span class="line">I<span class="number">1213 11:42</span>:<span class="number">21.526562</span> 42020 sched.cpp:1143] Stopping framework '<span class="number">475189a7</span>-dcde-4859-9af8-6fc2e63be94e-0558'</span><br></pre></td></tr></table></figure>
<h2 id="Spark_Cassandra">Spark Cassandra</h2><p>IDE中直接运行，spark依赖包不能为provided，否则找不到Spark的相关包，运行正常</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spark-core_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spark-sql_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spark-hive_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用maven-assembly-plugin插件打包运行，spark环境使用本地安装，scope=provide</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spark-core_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spark-sql_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spark-hive_$&#123;scala.binary.version&#125;<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>打包，并用完整的依赖包执行spark-submit</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mvn clean <span class="keyword">package</span></span><br><span class="line"></span><br><span class="line"><span class="regexp">/Users/</span>zhengqh<span class="regexp">/Soft/</span>spark-<span class="number">1.6</span>.<span class="number">2</span>-bin-hadoop2.<span class="number">6</span><span class="regexp">/bin/</span>spark-submit \</span><br><span class="line">--master <span class="string">"local[2]"</span> \</span><br><span class="line">--<span class="keyword">class</span> cn.fraudmetrix.pontus.demo.CassandraReadWrite \</span><br><span class="line"><span class="regexp">/Users/</span>zhengqh<span class="regexp">/Github/</span>vulcan<span class="regexp">/pontus-spark/</span>target<span class="regexp">/pontus-spark-1.0.0-SNAPSHOT-jar-with-dependencies.jar</span></span><br></pre></td></tr></table></figure>
<p>报错guava版本不对，即使手动加上guava版本也报错：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com<span class="class">.google</span><span class="class">.guava</span>&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;guava&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">19.0</span>&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java<span class="class">.lang</span><span class="class">.ExceptionInInitializerError</span></span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.DefaultConnectionFactory</span>$.<span class="function"><span class="title">clusterBuilder</span><span class="params">(CassandraConnectionFactory.scala:<span class="number">35</span>)</span></span></span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.DefaultConnectionFactory</span>$.<span class="function"><span class="title">createCluster</span><span class="params">(CassandraConnectionFactory.scala:<span class="number">87</span>)</span></span></span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.CassandraConnector</span>$.com<span class="variable">$datastax</span><span class="variable">$spark</span><span class="variable">$connector</span><span class="variable">$cql</span><span class="variable">$CassandraConnector</span>$<span class="variable">$createSession</span>(CassandraConnector<span class="class">.scala</span>:<span class="number">153</span>)</span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.CassandraConnector</span>$<span class="variable">$anonfun</span>$<span class="number">2</span>.<span class="function"><span class="title">apply</span><span class="params">(CassandraConnector.scala:<span class="number">148</span>)</span></span></span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.CassandraConnector</span>$<span class="variable">$anonfun</span>$<span class="number">2</span>.<span class="function"><span class="title">apply</span><span class="params">(CassandraConnector.scala:<span class="number">148</span>)</span></span></span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.RefCountedCache</span><span class="class">.createNewValueAndKeys</span>(RefCountedCache<span class="class">.scala</span>:<span class="number">31</span>)</span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.RefCountedCache</span><span class="class">.acquire</span>(RefCountedCache<span class="class">.scala</span>:<span class="number">56</span>)</span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.CassandraConnector</span><span class="class">.openSession</span>(CassandraConnector<span class="class">.scala</span>:<span class="number">81</span>)</span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.spark</span><span class="class">.connector</span><span class="class">.cql</span><span class="class">.CassandraConnector</span><span class="class">.withSessionDo</span>(CassandraConnector<span class="class">.scala</span>:<span class="number">109</span>)</span><br><span class="line">  at cn<span class="class">.fraudmetrix</span><span class="class">.pontus</span><span class="class">.demo</span><span class="class">.CassandraReadWrite</span>$.cn<span class="variable">$fraudmetrix</span><span class="variable">$pontus</span><span class="variable">$demo</span><span class="variable">$CassandraReadWrite</span>$<span class="variable">$executeCommand</span>(CassandraReadWrite<span class="class">.scala</span>:<span class="number">45</span>)</span><br><span class="line">  at cn<span class="class">.fraudmetrix</span><span class="class">.pontus</span><span class="class">.demo</span><span class="class">.CassandraReadWrite</span><span class="variable">$delayedInit</span><span class="variable">$body</span>.<span class="function"><span class="title">apply</span><span class="params">(CassandraReadWrite.scala:<span class="number">53</span>)</span></span></span><br><span class="line">  at scala.Function0<span class="variable">$class</span>.apply<span class="variable">$mcV</span><span class="variable">$sp</span>(Function0<span class="class">.scala</span>:<span class="number">40</span>)</span><br><span class="line">  at scala<span class="class">.runtime</span><span class="class">.AbstractFunction0</span><span class="class">.apply</span><span class="variable">$mcV</span><span class="variable">$sp</span>(AbstractFunction0<span class="class">.scala</span>:<span class="number">12</span>)</span><br><span class="line">  at scala.App$<span class="variable">$anonfun</span><span class="variable">$main</span>$<span class="number">1</span>.<span class="function"><span class="title">apply</span><span class="params">(App.scala:<span class="number">71</span>)</span></span></span><br><span class="line">  at scala.App$<span class="variable">$anonfun</span><span class="variable">$main</span>$<span class="number">1</span>.<span class="function"><span class="title">apply</span><span class="params">(App.scala:<span class="number">71</span>)</span></span></span><br><span class="line">  at scala<span class="class">.collection</span><span class="class">.immutable</span><span class="class">.List</span><span class="class">.foreach</span>(List<span class="class">.scala</span>:<span class="number">318</span>)</span><br><span class="line">  at scala<span class="class">.collection</span><span class="class">.generic</span><span class="class">.TraversableForwarder</span><span class="variable">$class</span>.<span class="function"><span class="title">foreach</span><span class="params">(TraversableForwarder.scala:<span class="number">32</span>)</span></span></span><br><span class="line">  at scala.App<span class="variable">$class</span>.<span class="function"><span class="title">main</span><span class="params">(App.scala:<span class="number">71</span>)</span></span></span><br><span class="line">  at cn<span class="class">.fraudmetrix</span><span class="class">.pontus</span><span class="class">.demo</span><span class="class">.CassandraReadWrite</span>$.<span class="function"><span class="title">main</span><span class="params">(CassandraReadWrite.scala:<span class="number">36</span>)</span></span></span><br><span class="line">  at cn<span class="class">.fraudmetrix</span><span class="class">.pontus</span><span class="class">.demo</span><span class="class">.CassandraReadWrite</span><span class="class">.main</span>(CassandraReadWrite.scala)</span><br><span class="line">  at sun<span class="class">.reflect</span><span class="class">.NativeMethodAccessorImpl</span><span class="class">.invoke0</span>(Native Method)</span><br><span class="line">  at sun<span class="class">.reflect</span><span class="class">.NativeMethodAccessorImpl</span><span class="class">.invoke</span>(NativeMethodAccessorImpl<span class="class">.java</span>:<span class="number">62</span>)</span><br><span class="line">  at sun<span class="class">.reflect</span><span class="class">.DelegatingMethodAccessorImpl</span><span class="class">.invoke</span>(DelegatingMethodAccessorImpl<span class="class">.java</span>:<span class="number">43</span>)</span><br><span class="line">  at java<span class="class">.lang</span><span class="class">.reflect</span><span class="class">.Method</span><span class="class">.invoke</span>(Method<span class="class">.java</span>:<span class="number">497</span>)</span><br><span class="line">  at org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.deploy</span><span class="class">.SparkSubmit</span>$.org<span class="variable">$apache</span><span class="variable">$spark</span><span class="variable">$deploy</span><span class="variable">$SparkSubmit</span>$<span class="variable">$runMain</span>(SparkSubmit<span class="class">.scala</span>:<span class="number">731</span>)</span><br><span class="line">  at org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.deploy</span><span class="class">.SparkSubmit</span>$.doRunMain$<span class="number">1</span>(SparkSubmit<span class="class">.scala</span>:<span class="number">181</span>)</span><br><span class="line">  at org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.deploy</span><span class="class">.SparkSubmit</span>$.<span class="function"><span class="title">submit</span><span class="params">(SparkSubmit.scala:<span class="number">206</span>)</span></span></span><br><span class="line">  at org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.deploy</span><span class="class">.SparkSubmit</span>$.<span class="function"><span class="title">main</span><span class="params">(SparkSubmit.scala:<span class="number">121</span>)</span></span></span><br><span class="line">  at org<span class="class">.apache</span><span class="class">.spark</span><span class="class">.deploy</span><span class="class">.SparkSubmit</span><span class="class">.main</span>(SparkSubmit.scala)</span><br><span class="line">Caused by: java<span class="class">.lang</span><span class="class">.IllegalStateException</span>: Detected Guava issue <span class="hexcolor">#163</span>5 which indicates that <span class="tag">a</span> version of Guava less than <span class="number">16.01</span> is <span class="keyword">in</span> use.  This introduces codec resolution issues and potentially other incompatibility issues <span class="keyword">in</span> the driver.  Please upgrade to Guava <span class="number">16.01</span> or later.</span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.driver</span><span class="class">.core</span><span class="class">.SanityChecks</span><span class="class">.checkGuava</span>(SanityChecks<span class="class">.java</span>:<span class="number">62</span>)</span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.driver</span><span class="class">.core</span><span class="class">.SanityChecks</span><span class="class">.check</span>(SanityChecks<span class="class">.java</span>:<span class="number">36</span>)</span><br><span class="line">  at com<span class="class">.datastax</span><span class="class">.driver</span><span class="class">.core</span><span class="class">.Cluster</span>.&lt;clinit&gt;(Cluster<span class="class">.java</span>:<span class="number">67</span>)</span><br><span class="line">  ... <span class="number">29</span> more</span><br></pre></td></tr></table></figure>
<p>参考：<a href="http://stackoverflow.com/questions/36877897/detected-guava-issue-1635-which-indicates-that-a-version-of-guava-less-than-16" target="_blank" rel="external">http://stackoverflow.com/questions/36877897/detected-guava-issue-1635-which-indicates-that-a-version-of-guava-less-than-16</a><br>添加maven-shade-plugin插件，重新打包，除了其他包，还会生成fat包，并用fat包运行，最后正常</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ll target</span><br><span class="line">-rw-r--r--  <span class="number">1</span> zhengqh  staff    <span class="number">14</span>M <span class="number">11</span> <span class="number">24</span> <span class="number">19</span>:<span class="number">17</span> pontus-spark-<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT-fat.jar</span><br><span class="line">-rw-r--r--  <span class="number">1</span> zhengqh  staff    <span class="number">19</span>M <span class="number">11</span> <span class="number">24</span> <span class="number">19</span>:<span class="number">15</span> pontus-spark-<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT-jar-with-dependencies.jar</span><br><span class="line">-rw-r--r--  <span class="number">1</span> zhengqh  staff    <span class="number">14</span>K <span class="number">11</span> <span class="number">24</span> <span class="number">19</span>:<span class="number">15</span> pontus-spark-<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT-sources.jar</span><br><span class="line">-rw-r--r--  <span class="number">1</span> zhengqh  staff    <span class="number">94</span>K <span class="number">11</span> <span class="number">24</span> <span class="number">19</span>:<span class="number">15</span> pontus-spark-<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line">/Users/zhengqh/Soft/spark-<span class="number">1.6</span><span class="number">.2</span>-bin-hadoop2<span class="number">.6</span>/bin/spark-submit \</span><br><span class="line">--master <span class="string">"local[2]"</span> \</span><br><span class="line">--<span class="keyword">class</span> cn.fraudmetrix.pontus.demo.CassandraReadWrite \</span><br><span class="line">/Users/zhengqh/Github/vulcan/pontus-spark/target/pontus-spark-<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT-fat.jar</span><br></pre></td></tr></table></figure>
<p>测试读取Cassandra写入到HDFS是否正确（需要启动本地dfs和Cassandra）</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/Users/zhengqh/Soft/spark-1.6.2-bin-hadoop2.6/bin/spark-submit \</span></span><br><span class="line">-<span class="ruby">-master <span class="string">"local[2]"</span> \</span><br><span class="line"></span>-<span class="ruby">-<span class="class"><span class="keyword">class</span> <span class="title">cn</span>.<span class="title">fraudmetrix</span>.<span class="title">pontus</span>.<span class="title">cassandra</span>.<span class="title">PontusCassandra2HDFSJobHandler</span> \</span></span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.destTable=<span class="string">""</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.tableId=<span class="string">""</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.destType=<span class="string">"HDFS"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.destUsername=<span class="string">""</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.creator=<span class="string">""</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.sourceUri=<span class="string">"localhost/demo"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.sourcePassword=<span class="string">""</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.sourceTable=<span class="string">"sales"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.sourceType=<span class="string">"Cassandra"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.readMode=<span class="string">"1"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.tableTs=<span class="string">""</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.destUri=<span class="string">"hdfs://localhost:9000/test"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.name=<span class="string">"cassandra-hdfs"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.destPassword=<span class="string">""</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.id=<span class="string">"1"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.writeMode=<span class="string">"1"</span> \</span><br><span class="line"></span>-<span class="ruby">-conf spark.pontus.sourceUsername=<span class="string">""</span> \</span><br><span class="line"></span><span class="comment">/Users/zhengqh/Github/vulcan/pontus-spark/target/pontus-spark-1.0.0-SNAPSHOT-fat.jar</span></span><br><span class="line"></span><br><span class="line">16/11/24 19:19:16 INFO DAGScheduler: Job 0 finished: show at PontusCassandra2HDFSJobHandler.scala:42, took 4.044479 s</span><br><span class="line">+---------+--------+-----+</span><br><span class="line">|   center|products|total|</span><br><span class="line">+---------+--------+-----+</span><br><span class="line">|  Sevilla|      28| 3200|</span><br><span class="line">| Valencia|      23| 3300|</span><br><span class="line">|   Bilbao|      25| 2500|</span><br><span class="line">|   Madrid|      51| 7700|</span><br><span class="line">|Barcelona|      47| 6400|</span><br><span class="line">+---------+--------+-----+</span><br></pre></td></tr></table></figure>
<p>上面的Spark作业会将Parquet文件写入HDFS的根路径，可以用spark-shell测试读取parquet文件。</p>
<p>Spark作业执行页面：</p>
<p><img src="http://img.blog.csdn.net/20161125100527204" alt="pontus-spark"></p>
<p>Pontus作业执行成功页面：</p>
<p><img src="http://img.blog.csdn.net/20161125100553908" alt="pontus-job"></p>
<p>HDFS追加作业：</p>
<p><img src="http://img.blog.csdn.net/20161129174641219" alt="hdfs"></p>
<p>空值问题：解决办法：Option</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">play.api.http.HttpErrorHandlerExceptions$<span class="variable">$anon</span><span class="variable">$1</span>: Execution exception[[RuntimeException: ColumnName(PONTUS_EXECUTION.LOGOUT,Some(LOGOUT))]]</span><br><span class="line">  at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:<span class="number">293</span>)</span><br><span class="line">  at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:<span class="number">220</span>)</span><br><span class="line">  at play.api.GlobalSettings<span class="variable">$class</span>.onError(GlobalSettings.scala:<span class="number">160</span>)</span><br><span class="line">  at util.Global$.onError(Global.scala:<span class="number">8</span>)</span><br><span class="line">  at play.api.http.GlobalSettingsHttpErrorHandler.onServerError(HttpErrorHandler.scala:<span class="number">100</span>)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="variable">$anonfun</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$1</span>.applyOrElse(PlayRequestHandler.scala:<span class="number">100</span>)</span><br><span class="line">  at play.core.server.netty.PlayRequestHandler$<span class="variable">$anonfun</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$1</span>.applyOrElse(PlayRequestHandler.scala:<span class="number">99</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">344</span>)</span><br><span class="line">  at scala.concurrent.Future$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span><span class="variable">$1</span>.apply(Future.scala:<span class="number">343</span>)</span><br><span class="line">  at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:<span class="number">32</span>)</span><br><span class="line">Caused by: java.lang.RuntimeException: ColumnName(PONTUS_EXECUTION.LOGOUT,Some(LOGOUT))</span><br><span class="line">  at scala.sys.package$.error(package.scala:<span class="number">27</span>)</span><br><span class="line">  at anorm.SqlRequestError<span class="variable">$class</span>.toFailure(Anorm.scala:<span class="number">20</span>)</span><br><span class="line">  at anorm.UnexpectedNullableFound.toFailure(Anorm.scala:<span class="number">37</span>)</span><br><span class="line">  at anorm.Sql$<span class="variable">$anonfun</span><span class="variable">$asTry</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$7</span>.apply(Anorm.scala:<span class="number">303</span>)</span><br><span class="line">  at anorm.Sql$<span class="variable">$anonfun</span><span class="variable">$asTry</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$7</span>.apply(Anorm.scala:<span class="number">303</span>)</span><br><span class="line">  at anorm.SqlResult<span class="variable">$class</span>.fold(SqlResult.scala:<span class="number">23</span>)</span><br><span class="line">  at anorm.Error.fold(SqlResult.scala:<span class="number">31</span>)</span><br><span class="line">  at anorm.Sql$<span class="variable">$anonfun</span><span class="variable">$asTry</span><span class="variable">$2</span>.apply(Anorm.scala:<span class="number">303</span>)</span><br><span class="line">  at anorm.Sql$<span class="variable">$anonfun</span><span class="variable">$asTry</span><span class="variable">$2</span>.apply(Anorm.scala:<span class="number">303</span>)</span><br><span class="line">  at scala.util.Success.flatMap(Try.scala:<span class="number">231</span>)</span><br></pre></td></tr></table></figure>
<h2 id="预览">预览</h2><p><a href="http://192.168.6.53:9000/preview/HDFS/%2Fuser%2Ftongdun%2Fpontus%2Fantifraud%2Ffeedback%2Fyear=2016%2Fmonth=12%2Fday=15" target="_blank" rel="external">http://192.168.6.53:9000/preview/HDFS/%2Fuser%2Ftongdun%2Fpontus%2Fantifraud%2Ffeedback%2Fyear=2016%2Fmonth=12%2Fday=15</a></p>
<p><a href="http://192.168.6.53:9000/preview/HDFS/hdfs:%2F%2F192.168.6.52:9000%2Fuser%2Ftongdun%2Fpontus%2Fantifraud%2Ffeedback%2Fyear=2016%2Fmonth=12%2Fday=15" target="_blank" rel="external">http://192.168.6.53:9000/preview/HDFS/hdfs:%2F%2F192.168.6.52:9000%2Fuser%2Ftongdun%2Fpontus%2Fantifraud%2Ffeedback%2Fyear=2016%2Fmonth=12%2Fday=15</a></p>
<p><a href="http://192.168.6.53:9000/preview/HDFS/hdfs:%2F%2Ftdfs%2Fuser%2Ftongdun%2Fpontus%2Fantifraud%2Ffeedback%2Fyear=2016%2Fmonth=12%2Fday=15" target="_blank" rel="external">http://192.168.6.53:9000/preview/HDFS/hdfs:%2F%2Ftdfs%2Fuser%2Ftongdun%2Fpontus%2Fantifraud%2Ffeedback%2Fyear=2016%2Fmonth=12%2Fday=15</a></p>
<h2 id="Actor">Actor</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SparkJobActor <span class="function"><span class="title">preStart</span><span class="params">()</span></span>.............</span><br><span class="line"><span class="function"><span class="title">PontusSchedule</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,qihuang.zheng,<span class="number">2016</span>-<span class="number">11</span>-<span class="number">29</span> <span class="number">21</span>:<span class="number">10</span>:<span class="number">00.0</span>,<span class="number">5</span>d)</span></span></span><br><span class="line">[warn] o<span class="class">.a</span><span class="class">.h</span><span class="class">.u</span><span class="class">.NativeCodeLoader</span> - Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</span><br><span class="line">Global <span class="function"><span class="title">onStart</span><span class="params">()</span></span>.............</span><br><span class="line">mode:demo</span><br><span class="line"><span class="function"><span class="title">PontusSchedule</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,qihuang.zheng,<span class="number">2016</span>-<span class="number">11</span>-<span class="number">29</span> <span class="number">21</span>:<span class="number">10</span>:<span class="number">00.0</span>,<span class="number">5</span>d)</span></span></span><br><span class="line">[info] play<span class="class">.api</span><span class="class">.Play</span> - Application started (Dev)</span><br></pre></td></tr></table></figure>
<h2 id="Quartz">Quartz</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.JobBuilder</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.TriggerBuilder</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.SimpleScheduleBuilder</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.CronScheduleBuilder</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.CalendarIntervalScheduleBuilder</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.JobKey</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.TriggerKey</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.DateBuilder</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.impl</span><span class="class">.matchers</span><span class="class">.KeyMatcher</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.impl</span><span class="class">.matchers</span><span class="class">.GroupMatcher</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.impl</span><span class="class">.matchers</span><span class="class">.AndMatcher</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.impl</span><span class="class">.matchers</span><span class="class">.OrMatcher</span><span class="class">._</span></span><br><span class="line"><span class="tag">import</span> <span class="tag">org</span><span class="class">.quartz</span><span class="class">.impl</span><span class="class">.matchers</span><span class="class">.EverythingMatcher</span><span class="class">._</span></span><br></pre></td></tr></table></figure>
<h3 id="Job依赖注入">Job依赖注入</h3><p>Job注入其他实例报错无法实例化，那么如何注入DAO对象？</p>
<figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="type">PontusSparkJob</span> @<span class="type">Inject</span><span class="container">()</span><span class="container">(<span class="title">configuration</span>: <span class="type">Configuration</span>,</span><br><span class="line">                               <span class="title">executionRepository</span>: <span class="type">ExecutionRepository</span>,</span><br><span class="line">                               <span class="title">scheduleRepository</span>: <span class="type">ScheduleRepository</span>,</span><br><span class="line">                               <span class="title">jobRepository</span>: <span class="type">JobRepository</span></span><br><span class="line">                              )</span> extends <span class="type">Job</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[error] o.q.c.<span class="type">ErrorLogger</span> - <span class="type">An</span> error occured instantiating job to be executed. job= '<span class="type">Cassandra</span>.pontusjob_1'</span><br><span class="line">org.quartz.<span class="type">SchedulerException</span>: <span class="type">Problem</span> instantiating <span class="keyword">class</span> 'schedule.<span class="type">PontusSparkJob'</span></span><br><span class="line">  at org.quartz.simpl.<span class="type">SimpleJobFactory</span>.newJob<span class="container">(<span class="type">SimpleJobFactory</span>.<span class="title">java</span>:58)</span></span><br><span class="line">  at org.quartz.simpl.<span class="type">PropertySettingJobFactory</span>.newJob<span class="container">(<span class="type">PropertySettingJobFactory</span>.<span class="title">java</span>:69)</span></span><br><span class="line">  at org.quartz.core.<span class="type">JobRunShell</span>.initialize<span class="container">(<span class="type">JobRunShell</span>.<span class="title">java</span>:127)</span></span><br><span class="line">  at org.quartz.core.<span class="type">QuartzSchedulerThread</span>.run<span class="container">(<span class="type">QuartzSchedulerThread</span>.<span class="title">java</span>:375)</span></span><br><span class="line"><span class="type">Caused</span> by: java.lang.<span class="type">InstantiationException</span>: schedule.<span class="type">PontusSparkJob</span></span><br><span class="line">  at java.lang.<span class="type">Class</span>.newInstance<span class="container">(<span class="type">Class</span>.<span class="title">java</span>:427)</span></span><br><span class="line">  at org.quartz.simpl.<span class="type">SimpleJobFactory</span>.newJob<span class="container">(<span class="type">SimpleJobFactory</span>.<span class="title">java</span>:56)</span></span><br><span class="line">  ... 3 common frames omitted</span><br><span class="line"><span class="type">Caused</span> by: java.lang.<span class="type">NoSuchMethodException</span>: schedule.<span class="type">PontusSparkJob</span>.&lt;init&gt;<span class="container">()</span></span><br><span class="line">  at java.lang.<span class="type">Class</span>.getConstructor0<span class="container">(<span class="type">Class</span>.<span class="title">java</span>:3082)</span></span><br><span class="line">  at java.lang.<span class="type">Class</span>.newInstance<span class="container">(<span class="type">Class</span>.<span class="title">java</span>:412)</span></span><br><span class="line">  ... 4 common frames omitted</span></span><br></pre></td></tr></table></figure>
<p>解决办法：启动时通过Global注册Application实例，在Job中通过Scheduler获取</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Global</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">GlobalSettings</span> &#123;</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">onStart</span>(</span>application: play.api.<span class="type">Application</span>) &#123;</span><br><span class="line">    schedule.<span class="type">PontusQuartzScheduler</span>.scheduler.start()</span><br><span class="line">    schedule.<span class="type">PontusQuartzScheduler</span>.scheduler.getContext.put(<span class="string">"configuration"</span>, application.configuration)</span><br><span class="line">    schedule.<span class="type">PontusQuartzScheduler</span>.scheduler.getContext.put(<span class="string">"application"</span>, application)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PontusSparkJob</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Job</span> &#123;</span></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">execute</span>(</span>context: <span class="type">JobExecutionContext</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> application = context.getScheduler.getContext.get(<span class="string">"application"</span>).asInstanceOf[<span class="type">Application</span>]</span><br><span class="line">    <span class="keyword">val</span> configuration = context.getScheduler.getContext.get(<span class="string">"configuration"</span>).asInstanceOf[<span class="type">Configuration</span>]</span><br><span class="line">    <span class="keyword">val</span> jobRepository = application.injector.instanceOf(classOf[<span class="type">JobRepository</span>])</span><br><span class="line">    <span class="keyword">val</span> executionRepository = application.injector.instanceOf(classOf[<span class="type">ExecutionRepository</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> jobId = context.getMergedJobDataMap.getString(<span class="string">"jobId"</span>).toLong</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>TODO：自定义JobFactory</p>
<p>mesos任务报错，页面会显示申请不到资源：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">I1205 <span class="number">15</span>:<span class="number">15</span>:<span class="number">20.217545</span> <span class="number">19517</span> exec.cpp:<span class="number">143</span>] Version: <span class="number">0.28</span>.<span class="number">2</span></span><br><span class="line">I1205 <span class="number">15</span>:<span class="number">15</span>:<span class="number">20.243422</span> <span class="number">19521</span> exec.cpp:<span class="number">217</span>] Executor registered <span class="keyword">on</span> slave <span class="number">475189</span>a7-dcde-<span class="number">4859</span>-<span class="number">9</span>af8-<span class="number">6</span>fc2e63be94e-S0</span><br><span class="line">Unrecognized VM option <span class="string">'UseCompressedStrings'</span></span><br><span class="line">Error: Could <span class="keyword">not</span> <span class="keyword">create</span> the Java <span class="keyword">Virtual</span> Machine.</span><br><span class="line">Error: A fatal exception <span class="keyword">has</span> occurred. Program will <span class="keyword">exit</span>.</span><br></pre></td></tr></table></figure>
<p>去掉spark中executor的jvm配置</p>
<h3 id="Quartz作业的自动重启">Quartz作业的自动重启</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">创建时：</span><br><span class="line"></span><br><span class="line">mysql&gt; select <span class="keyword">*</span> from QRTZ_TRIGGERS;</span><br><span class="line">+-----------------+--------------+---------------+-------------+-----------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">|<span class="string"> SCHED_NAME      </span>|<span class="string"> TRIGGER_NAME </span>|<span class="string"> TRIGGER_GROUP </span>|<span class="string"> JOB_NAME    </span>|<span class="string"> JOB_GROUP </span>|<span class="string"> DESCRIPTION </span>|<span class="string"> NEXT_FIRE_TIME </span>|<span class="string"> PREV_FIRE_TIME </span>|<span class="string"> PRIORITY </span>|<span class="string"> TRIGGER_STATE </span>|<span class="string"> TRIGGER_TYPE </span>|<span class="string"> START_TIME    </span>|<span class="string"> END_TIME </span>|<span class="string"> CALENDAR_NAME </span>|<span class="string"> MISFIRE_INSTR </span>|<span class="string"> JOB_DATA </span>|</span><br><span class="line">+-----------------+--------------+---------------+-------------+-----------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">|<span class="string"> QuartzScheduler </span>|<span class="string"> trigger2_1   </span>|<span class="string"> Cassandra     </span>|<span class="string"> pontusjob_1 </span>|<span class="string"> Cassandra </span>|<span class="string"> NULL        </span>|<span class="string">  1480523100000 </span>|<span class="string">  1480519500000 </span>|<span class="string">        5 </span>|<span class="string"> WAITING       </span>|<span class="string"> SIMPLE       </span>|<span class="string"> 1480515900000 </span>|<span class="string">        0 </span>|<span class="string"> NULL          </span>|<span class="string">             1 </span>|<span class="string">          </span>|</span><br><span class="line">+-----------------+--------------+---------------+-------------+-----------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">1 row in set (10.33 sec)</span><br><span class="line"></span><br><span class="line">创建时间（START_TIME）：         1480515900000 - 2016年11月30日 星期三 22时25分00秒 CST</span><br><span class="line">第一次执行时间（PREV_FIRE_TIME）：1480519500000 - 2016年11月30日 星期三 23时25分00秒 CST</span><br><span class="line">下一次执行时间（NEXT_FIRE_TIME）：1480523100000 - 2016年12月 1日 星期四 00时25分00秒 CST</span><br><span class="line"></span><br><span class="line">停止服务器</span><br><span class="line"></span><br><span class="line">第二天早上重启，重启后如果没有访问页面，仍然不会调度，但是只要登录，就会开始调度</span><br><span class="line"></span><br><span class="line">mysql&gt; select <span class="keyword">*</span> from QRTZ_TRIGGERS;</span><br><span class="line">+-----------------+--------------+---------------+-------------+-----------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">|<span class="string"> SCHED_NAME      </span>|<span class="string"> TRIGGER_NAME </span>|<span class="string"> TRIGGER_GROUP </span>|<span class="string"> JOB_NAME    </span>|<span class="string"> JOB_GROUP </span>|<span class="string"> DESCRIPTION </span>|<span class="string"> NEXT_FIRE_TIME </span>|<span class="string"> PREV_FIRE_TIME </span>|<span class="string"> PRIORITY </span>|<span class="string"> TRIGGER_STATE </span>|<span class="string"> TRIGGER_TYPE </span>|<span class="string"> START_TIME    </span>|<span class="string"> END_TIME </span>|<span class="string"> CALENDAR_NAME </span>|<span class="string"> MISFIRE_INSTR </span>|<span class="string"> JOB_DATA </span>|</span><br><span class="line">+-----------------+--------------+---------------+-------------+-----------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">|<span class="string"> QuartzScheduler </span>|<span class="string"> trigger2_1   </span>|<span class="string"> Cassandra     </span>|<span class="string"> pontusjob_1 </span>|<span class="string"> Cassandra </span>|<span class="string"> NULL        </span>|<span class="string">  1480561432130 </span>|<span class="string">  1480557832130 </span>|<span class="string">        5 </span>|<span class="string"> WAITING       </span>|<span class="string"> SIMPLE       </span>|<span class="string"> 1480557832130 </span>|<span class="string">        0 </span>|<span class="string"> NULL          </span>|<span class="string">             1 </span>|<span class="string">          </span>|</span><br><span class="line">+-----------------+--------------+---------------+-------------+-----------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">START_TIME：     1480557832130 - 2016年12月 1日 星期四 10时03分52秒 CST</span><br><span class="line">PREV_FIRE_TIME： 1480557832130 - 2016年12月 1日 星期四 10时03分52秒 CST</span><br><span class="line">NEXT_FIRE_TIME： 1480561432130 - 2016年12月 1日 星期四 11时03分52秒 CST</span><br></pre></td></tr></table></figure>
<p>相同Job不允许同时有两个Trigger在运行。解决办法：可以设置不同的JobId。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">! @<span class="number">729</span>o8hm27 - Internal server error, <span class="keyword">for</span> (GET) [/job/execute/Cassandra/HDFS/<span class="number">2</span>] -&gt;</span><br><span class="line"></span><br><span class="line">play<span class="class">.api</span><span class="class">.UnexpectedException</span>: Unexpected exception[ObjectAlreadyExistsException: Unable to store Job : <span class="string">'Cassandra-HDFS.pontusjob_2'</span>, because one already exists with this identification.]</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.http</span><span class="class">.HttpErrorHandlerExceptions</span>$.<span class="function"><span class="title">throwableToUsefulException</span><span class="params">(HttpErrorHandler.scala:<span class="number">289</span>)</span></span></span><br><span class="line">  at play<span class="class">.api</span><span class="class">.http</span><span class="class">.DefaultHttpErrorHandler</span><span class="class">.onServerError</span>(HttpErrorHandler<span class="class">.scala</span>:<span class="number">220</span>)</span><br><span class="line">  at play<span class="class">.api</span><span class="class">.GlobalSettings</span><span class="variable">$class</span>.<span class="function"><span class="title">onError</span><span class="params">(GlobalSettings.scala:<span class="number">160</span>)</span></span></span><br><span class="line">  at util.Global$.<span class="function"><span class="title">onError</span><span class="params">(Global.scala:<span class="number">23</span>)</span></span></span><br><span class="line">  at play<span class="class">.api</span><span class="class">.http</span><span class="class">.GlobalSettingsHttpErrorHandler</span><span class="class">.onServerError</span>(HttpErrorHandler<span class="class">.scala</span>:<span class="number">100</span>)</span><br><span class="line">  at play<span class="class">.core</span><span class="class">.server</span><span class="class">.netty</span><span class="class">.PlayRequestHandler</span>$<span class="variable">$anonfun</span>$<span class="number">2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span>$<span class="number">1</span>.<span class="function"><span class="title">applyOrElse</span><span class="params">(PlayRequestHandler.scala:<span class="number">100</span>)</span></span></span><br><span class="line">  at play<span class="class">.core</span><span class="class">.server</span><span class="class">.netty</span><span class="class">.PlayRequestHandler</span>$<span class="variable">$anonfun</span>$<span class="number">2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span>$<span class="number">1</span>.<span class="function"><span class="title">applyOrElse</span><span class="params">(PlayRequestHandler.scala:<span class="number">99</span>)</span></span></span><br><span class="line">  at scala<span class="class">.concurrent</span><span class="class">.Future</span>$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span>$<span class="number">1</span>.<span class="function"><span class="title">apply</span><span class="params">(Future.scala:<span class="number">344</span>)</span></span></span><br><span class="line">  at scala<span class="class">.concurrent</span><span class="class">.Future</span>$<span class="variable">$anonfun</span><span class="variable">$recoverWith</span>$<span class="number">1</span>.<span class="function"><span class="title">apply</span><span class="params">(Future.scala:<span class="number">343</span>)</span></span></span><br><span class="line">  at scala<span class="class">.concurrent</span><span class="class">.impl</span><span class="class">.CallbackRunnable</span><span class="class">.run</span>(Promise<span class="class">.scala</span>:<span class="number">32</span>)</span><br><span class="line">Caused by: org<span class="class">.quartz</span><span class="class">.ObjectAlreadyExistsException</span>: Unable to store Job : <span class="string">'Cassandra-HDFS.pontusjob_2'</span>, because one already exists with this identification.</span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.impl</span><span class="class">.jdbcjobstore</span><span class="class">.JobStoreSupport</span><span class="class">.storeJob</span>(JobStoreSupport<span class="class">.java</span>:<span class="number">1108</span>)</span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.impl</span><span class="class">.jdbcjobstore</span><span class="class">.JobStoreSupport</span>$<span class="number">2</span>.<span class="function"><span class="title">executeVoid</span><span class="params">(JobStoreSupport.java:<span class="number">1062</span>)</span></span></span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.impl</span><span class="class">.jdbcjobstore</span><span class="class">.JobStoreSupport</span><span class="variable">$VoidTransactionCallback</span>.<span class="function"><span class="title">execute</span><span class="params">(JobStoreSupport.java:<span class="number">3715</span>)</span></span></span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.impl</span><span class="class">.jdbcjobstore</span><span class="class">.JobStoreSupport</span><span class="variable">$VoidTransactionCallback</span>.<span class="function"><span class="title">execute</span><span class="params">(JobStoreSupport.java:<span class="number">3713</span>)</span></span></span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.impl</span><span class="class">.jdbcjobstore</span><span class="class">.JobStoreSupport</span><span class="class">.executeInNonManagedTXLock</span>(JobStoreSupport<span class="class">.java</span>:<span class="number">3799</span>)</span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.impl</span><span class="class">.jdbcjobstore</span><span class="class">.JobStoreTX</span><span class="class">.executeInLock</span>(JobStoreTX<span class="class">.java</span>:<span class="number">93</span>)</span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.impl</span><span class="class">.jdbcjobstore</span><span class="class">.JobStoreSupport</span><span class="class">.storeJobAndTrigger</span>(JobStoreSupport<span class="class">.java</span>:<span class="number">1058</span>)</span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.core</span><span class="class">.QuartzScheduler</span><span class="class">.scheduleJob</span>(QuartzScheduler<span class="class">.java</span>:<span class="number">886</span>)</span><br><span class="line">  at org<span class="class">.quartz</span><span class="class">.impl</span><span class="class">.StdScheduler</span><span class="class">.scheduleJob</span>(StdScheduler<span class="class">.java</span>:<span class="number">249</span>)</span><br><span class="line">  at controllers.PontusJobController$<span class="variable">$anonfun</span><span class="variable">$execute</span>$<span class="number">1</span>.<span class="function"><span class="title">apply</span><span class="params">(PontusJobController.scala:<span class="number">72</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>spark streaming一次性作业：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select <span class="keyword">*</span> from QRTZ_TRIGGERS;</span><br><span class="line">+-----------------+--------------+----------------+--------------+----------------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">|<span class="string"> SCHED_NAME      </span>|<span class="string"> TRIGGER_NAME </span>|<span class="string"> TRIGGER_GROUP  </span>|<span class="string"> JOB_NAME     </span>|<span class="string"> JOB_GROUP      </span>|<span class="string"> DESCRIPTION </span>|<span class="string"> NEXT_FIRE_TIME </span>|<span class="string"> PREV_FIRE_TIME </span>|<span class="string"> PRIORITY </span>|<span class="string"> TRIGGER_STATE </span>|<span class="string"> TRIGGER_TYPE </span>|<span class="string"> START_TIME    </span>|<span class="string"> END_TIME </span>|<span class="string"> CALENDAR_NAME </span>|<span class="string"> MISFIRE_INSTR </span>|<span class="string"> JOB_DATA </span>|</span><br><span class="line">+-----------------+--------------+----------------+--------------+----------------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">|<span class="string"> QuartzScheduler </span>|<span class="string"> trigger1_2   </span>|<span class="string"> Kafka-HDFS     </span>|<span class="string"> pontusjob1_2 </span>|<span class="string"> Kafka-HDFS     </span>|<span class="string"> NULL        </span>|<span class="string">             -1 </span>|<span class="string">  1481165690342 </span>|<span class="string">        5 </span>|<span class="string"> COMPLETE      </span>|<span class="string"> SIMPLE       </span>|<span class="string"> 1481165690342 </span>|<span class="string">        0 </span>|<span class="string"> NULL          </span>|<span class="string">             0 </span>|<span class="string">          </span>|</span><br><span class="line">|<span class="string"> QuartzScheduler </span>|<span class="string"> trigger2_1   </span>|<span class="string"> Cassandra-HDFS </span>|<span class="string"> pontusjob2_1 </span>|<span class="string"> Cassandra-HDFS </span>|<span class="string"> NULL        </span>|<span class="string">  1481165913700 </span>|<span class="string">  1481165433700 </span>|<span class="string">        5 </span>|<span class="string"> WAITING       </span>|<span class="string"> SIMPLE       </span>|<span class="string"> 1481103993700 </span>|<span class="string">        0 </span>|<span class="string"> NULL          </span>|<span class="string">             1 </span>|<span class="string">          </span>|</span><br><span class="line">+-----------------+--------------+----------------+--------------+----------------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select <span class="keyword">*</span> from QRTZ_SIMPLE_TRIGGERS;</span><br><span class="line">+-----------------+--------------+----------------+--------------+-----------------+-----------------+</span><br><span class="line">|<span class="string"> SCHED_NAME      </span>|<span class="string"> TRIGGER_NAME </span>|<span class="string"> TRIGGER_GROUP  </span>|<span class="string"> REPEAT_COUNT </span>|<span class="string"> REPEAT_INTERVAL </span>|<span class="string"> TIMES_TRIGGERED </span>|</span><br><span class="line">+-----------------+--------------+----------------+--------------+-----------------+-----------------+</span><br><span class="line">|<span class="string"> QuartzScheduler </span>|<span class="string"> trigger1_2   </span>|<span class="string"> Kafka-HDFS     </span>|<span class="string">            0 </span>|<span class="string">               0 </span>|<span class="string">               1 </span>|</span><br><span class="line">|<span class="string"> QuartzScheduler </span>|<span class="string"> trigger2_1   </span>|<span class="string"> Cassandra-HDFS </span>|<span class="string">           -1 </span>|<span class="string">          480000 </span>|<span class="string">             129 </span>|</span><br><span class="line">+-----------------+--------------+----------------+--------------+-----------------+-----------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>过了会儿，一次性的任务信息会从Quartz删除，但是实际上spark streaming还在运行！<br>这时，如果再次点击执行，虽然triggerKey不存在，但是也不应该允许再次执行！否则就会存在两个spark streaming程序！<br>还有一个问题：由于spark streaming不会结束，所以无法看到日志，状态也永远是正在执行。</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">mysql&gt; select * from QRTZ_SIMPLE_TRIGGERS;</span><br><span class="line">+-----------------+--------------+----------------+--------------+-----------------+-----------------+</span></span><br><span class="line"><span class="header">| SCHED_NAME      | TRIGGER_NAME | TRIGGER_GROUP  | REPEAT_COUNT | REPEAT_INTERVAL | TIMES_TRIGGERED |</span><br><span class="line">+-----------------+--------------+----------------+--------------+-----------------+-----------------+</span></span><br><span class="line"><span class="header">| QuartzScheduler | trigger2_1   | Cassandra-HDFS |           -1 |          480000 |             129 |</span><br><span class="line">+-----------------+--------------+----------------+--------------+-----------------+-----------------+</span></span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="header">mysql&gt; select * from QRTZ_TRIGGERS;</span><br><span class="line">+-----------------+--------------+----------------+--------------+----------------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span></span><br><span class="line"><span class="header">| SCHED_NAME      | TRIGGER_NAME | TRIGGER_GROUP  | JOB_NAME     | JOB_GROUP      | DESCRIPTION | NEXT_FIRE_TIME | PREV_FIRE_TIME | PRIORITY | TRIGGER_STATE | TRIGGER_TYPE | START_TIME    | END_TIME | CALENDAR_NAME | MISFIRE_INSTR | JOB_DATA |</span><br><span class="line">+-----------------+--------------+----------------+--------------+----------------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span></span><br><span class="line"><span class="header">| QuartzScheduler | trigger2_1   | Cassandra-HDFS | pontusjob2_1 | Cassandra-HDFS | NULL        |  1481165913700 |  1481165433700 |        5 | WAITING       | SIMPLE       | 1481103993700 |        0 | NULL          |             1 |          |</span><br><span class="line">+-----------------+--------------+----------------+--------------+----------------+-------------+----------------+----------------+----------+---------------+--------------+---------------+----------+---------------+---------------+----------+</span></span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure>
<h2 id="Kafka">Kafka</h2><p>创建测试主题</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --create --zookeeper <span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">2181</span> --replication-factor <span class="number">1</span> --partitions <span class="number">1</span> --topic graylog_nginx</span><br><span class="line">bin/kafka-console-producer.sh --broker-<span class="built_in">list</span> <span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">9092</span>,<span class="number">192.168</span><span class="number">.6</span><span class="number">.56</span>:<span class="number">9092</span>,<span class="number">192.168</span><span class="number">.6</span><span class="number">.57</span>:<span class="number">9092</span> --topic graylog_nginx</span><br><span class="line">bin/kafka-console-consumer.sh --zookeeper <span class="number">192.168</span><span class="number">.6</span><span class="number">.55</span>:<span class="number">2181</span> --topic graylog_nginx --from-beginning</span><br></pre></td></tr></table></figure>
<p>准备json数据</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">1</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Betty"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"bsmithrl@simplemachines.org"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Eláteia"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Greece"</span></span>,"<span class="attribute">ip</span>":<span class="value"><span class="string">"9.19.204.44"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">2</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Anna"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"alewisrm@canalblog.com"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Shangjing"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"China"</span></span>,"<span class="attribute">ip</span>":<span class="value"><span class="string">"14.207.119.126"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">3</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"David"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"dgarrettrn@japanpost.jp"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Tsarychanka"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Ukraine"</span></span>,"<span class="attribute">ip</span>":<span class="value"><span class="string">"111.252.63.159"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">4</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Heather"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"hgilbertro@skype.com"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Koilás"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Greece"</span></span>,"<span class="attribute">ip</span>":<span class="value"><span class="string">"29.57.181.250"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">5</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Diane"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"ddanielsrp@statcounter.com"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Mapiripán"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Colombia"</span></span>,"<span class="attribute">ip</span>":<span class="value"><span class="string">"19.205.181.99"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">6</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Philip"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"pfullerrq@reuters.com"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"El Cairo"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Colombia"</span></span>,"<span class="attribute">ip</span>":<span class="value"><span class="string">"210.248.121.194"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">7</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Maria"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"mfordrr@shop-pro.jp"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Karabash"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Russia"</span></span>,"<span class="attribute">ip</span>":<span class="value"><span class="string">"224.21.41.52"</span></span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">8</span></span>,"<span class="attribute">username</span>":<span class="value"><span class="string">"Bety"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"bsmithrl@simplemachines.org"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Eláteia"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Greece"</span></span>,"<span class="attribute">ipAddress</span>":<span class="value"><span class="string">"9.19.204.44"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">9</span></span>,"<span class="attribute">username</span>":<span class="value"><span class="string">"Ana"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"alewisrm@canalblog.com"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Shangjing"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"China"</span></span>,"<span class="attribute">ipAddress</span>":<span class="value"><span class="string">"14.207.119.126"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">10</span></span>,"<span class="attribute">username</span>":<span class="value"><span class="string">"David"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"dgarrettrn@japanpost.com"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Tsarychanka"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Ukraine"</span></span>,"<span class="attribute">ipAddress</span>":<span class="value"><span class="string">"111.252.63.159"</span></span>&#125;</span><br><span class="line">&#123;"<span class="attribute">id</span>":<span class="value"><span class="number">11</span></span>,"<span class="attribute">name</span>":<span class="value"><span class="string">"Calis"</span></span>,"<span class="attribute">email</span>":<span class="value"><span class="string">"carlis@google.com"</span></span>,"<span class="attribute">city</span>":<span class="value"><span class="string">"Koran"</span></span>,"<span class="attribute">country</span>":<span class="value"><span class="string">"Greece"</span></span>,"<span class="attribute">ip</span>":<span class="value"><span class="string">"29.57.181.250"</span></span>&#125;</span><br></pre></td></tr></table></figure>
<h1 id="附录">附录</h1><h2 id="sbt私服">sbt私服</h2><p>安装repox：<a href="https://github.com/Centaur/repox/wiki">https://github.com/Centaur/repox/wiki</a><br>可以在本机开发环境编译jar包，再上次到服务器（因为服务器上可能没有编译所需的node环境）。  </p>
<p>启动repox，然后打开：<a href="http://192.168.6.53:8078/admin/admin.html#/upstreams" target="_blank" rel="external">http://192.168.6.53:8078/admin/admin.html#/upstreams</a>，密码：zhimakaimen</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">nohup</span> <span class="tag">java</span> <span class="tag">-Xmx512m</span> <span class="tag">-jar</span> <span class="tag">repox-assembly-0</span><span class="class">.1-SNAPSHOT</span><span class="class">.jar</span> &amp;</span><br></pre></td></tr></table></figure>
<p>在<code>~/.sbt/repositories</code>添加两行配置：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">repox-maven: http://192.168.6.53:8078/</span><br><span class="line">repox-ivy: http://192.168.6.53:8078/, [<span class="link_label">organization</span>]/[<span class="link_label">module</span>]/(scala<span class="emphasis">_[scalaVersion]/)(sbt_</span>[<span class="link_label">sbtVersion</span>]/)[<span class="link_label">revision</span>]/[<span class="link_label">type</span>]s/[<span class="link_label">artifact</span>](<span class="link_url">-[classifier]</span>).[ext]</span><br></pre></td></tr></table></figure>
<p>完整的repositories文件：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[repositories]</span><br><span class="line">local</span><br><span class="line">local-maven: file:///Users/zhengqh/.m2/repository/</span><br><span class="line">repox-maven: http://192.168.6.53:8078/</span><br><span class="line">repox-ivy: http://192.168.6.53:8078/, [<span class="link_label">organization</span>]/[<span class="link_label">module</span>]/(scala<span class="emphasis">_[scalaVersion]/)(sbt_</span>[<span class="link_label">sbtVersion</span>]/)[<span class="link_label">revision</span>]/[<span class="link_label">type</span>]s/[<span class="link_label">artifact</span>](<span class="link_url">-[classifier]</span>).[ext]</span><br><span class="line"><span class="header">#osc: http://maven.oschina.net/content/groups/public/</span></span><br><span class="line"><span class="header">#oschina-ivy: http://maven.oschina.net/content/groups/public/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]</span></span><br><span class="line">typesafe: http://repo.typesafe.com/typesafe/ivy-releases/, [<span class="link_label">organization</span>]/[<span class="link_label">module</span>]/(scala<span class="emphasis">_[scalaVersion]/)(sbt_</span>[<span class="link_label">sbtVersion</span>]/)[<span class="link_label">revision</span>]/[<span class="link_label">type</span>]s/[<span class="link_label">artifact</span>](<span class="link_url">-[classifier]</span>).[ext], bootOnly</span><br><span class="line">sonatype-oss-releases</span><br><span class="line">maven-central</span><br><span class="line">sonatype-oss-snapshots</span><br></pre></td></tr></table></figure>
<p>使用activator运行play时，创建activatorconfig.txt文件，添加以下配置：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.activator/activatorconfig<span class="class">.txt</span></span><br><span class="line">-Dsbt<span class="class">.override</span><span class="class">.build</span><span class="class">.repos</span>=true</span><br></pre></td></tr></table></figure>
<p>命令行运行activator，如果出现<code>downloading http://192.168.6.53:8078</code>，表示私服搭建成功。<br>如果本地不存在jar包，则私服会自动下载，然后再下载到本地。  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">➜  first-player git:(master) ✗ ./activator run</span><br><span class="line">[info] Loading global plugins from /Users/zhengqh/.sbt/<span class="number">0.13</span>/plugins</span><br><span class="line">[info] Loading project definition from /Users/zhengqh/Github/first-player/project</span><br><span class="line">[info] Updating &#123;file:/Users/zhengqh/Github/first-player/project/&#125;first-player-build...</span><br><span class="line">[info] Resolving org.fusesource.jansi<span class="preprocessor">#jansi;<span class="number">1.4</span> ...</span></span><br><span class="line">[info] downloading http:<span class="comment">//192.168.6.53:8078/com.typesafe.play/sbt-plugin/scala_2.10/sbt_0.13/2.5.10/jars/sbt-plugin.jar ...</span></span><br><span class="line">[info]  [SUCCESSFUL ] com.typesafe.play<span class="preprocessor">#sbt-plugin;<span class="number">2.5</span><span class="number">.10</span>!sbt-plugin.jar (<span class="number">7242</span>ms)</span></span><br><span class="line">[info] downloading http:<span class="comment">//192.168.6.53:8078/com/typesafe/play/sbt-routes-compiler_2.10/2.5.10/sbt-routes-compiler_2.10-2.5.10.jar ...</span></span><br><span class="line">[info]  [SUCCESSFUL ] com.typesafe.play<span class="preprocessor">#sbt-routes-compiler_2<span class="number">.10</span>;<span class="number">2.5</span><span class="number">.10</span>!sbt-routes-compiler_2<span class="number">.10</span>.jar (<span class="number">9753</span>ms)</span></span><br><span class="line">[info] downloading http:<span class="comment">//192.168.6.53:8078/com/typesafe/play/sbt-run-support_2.10/2.5.10/sbt-run-support_2.10-2.5.10.jar ...</span></span><br><span class="line">[info]  [SUCCESSFUL ] com.typesafe.play<span class="preprocessor">#sbt-run-support_2<span class="number">.10</span>;<span class="number">2.5</span><span class="number">.10</span>!sbt-run-support_2<span class="number">.10</span>.jar (<span class="number">6686</span>ms)</span></span><br><span class="line">[info] downloading http:<span class="comment">//192.168.6.53:8078/com/typesafe/play/build-link/2.5.10/build-link-2.5.10.jar ...</span></span><br><span class="line">[info]  [SUCCESSFUL ] com.typesafe.play<span class="preprocessor">#build-link;<span class="number">2.5</span><span class="number">.10</span>!build-link.jar (<span class="number">6589</span>ms)</span></span><br><span class="line">[info] downloading http:<span class="comment">//192.168.6.53:8078/com/typesafe/play/play-exceptions/2.5.10/play-exceptions-2.5.10.jar ...</span></span><br><span class="line">[info]  [SUCCESSFUL ] com.typesafe.play<span class="preprocessor">#play-exceptions;<span class="number">2.5</span><span class="number">.10</span>!play-exceptions.jar (<span class="number">2358</span>ms)</span></span><br><span class="line">[info] Done updating.</span><br></pre></td></tr></table></figure>
<p>使用sbt运行时（sbt run），需要更改sbt的选项，比如下面是mac环境使用brew安装sbt配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat /usr/<span class="built_in">local</span>/bin/sbt</span><br><span class="line"><span class="shebang">#!/bin/sh</span></span><br><span class="line"><span class="built_in">export</span> SBT_OPTS=<span class="string">"-Dsbt.override.build.repos=true"</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="operator">-f</span> <span class="string">"<span class="variable">$HOME</span>/.sbtconfig"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Use of ~/.sbtconfig is deprecated, please migrate global settings to /usr/local/etc/sbtopts"</span> &gt;&amp;<span class="number">2</span></span><br><span class="line">  . <span class="string">"<span class="variable">$HOME</span>/.sbtconfig"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exec</span> <span class="string">"/usr/local/Cellar/sbt/0.13.8/libexec/sbt"</span> <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure>
<p>IDEA开发环境，还需要配置：</p>
<p><img src="http://img.blog.csdn.net/20170512105246182" alt="3"></p>
<h2 id="Play_MultiProject">Play MultiProject</h2><p>参考：<a href="https://github.com/aaronp/multi-project">https://github.com/aaronp/multi-project</a></p>
<p>增加play后，</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">java.lang.ClassCastException: org.slf4j.helpers.NOPLoggerFactory cannot be <span class="keyword">cast</span> <span class="keyword">to</span> ch.qos.logback.classic.LoggerContext</span><br><span class="line">  at play.api.libs.logback.LogbackLoggerConfigurator.configure(LogbackLoggerConfigurator.scala:<span class="number">80</span>)</span><br><span class="line">  at play.api.libs.logback.LogbackLoggerConfigurator.init(LogbackLoggerConfigurator.scala:<span class="number">26</span>)</span><br><span class="line">  at play.core.server.DevServerStart$<span class="variable">$anonfun</span><span class="variable">$mainDev</span><span class="variable">$1</span>.apply(DevServerStart.scala:<span class="number">94</span>)</span><br><span class="line">  at play.core.server.DevServerStart$<span class="variable">$anonfun</span><span class="variable">$mainDev</span><span class="variable">$1</span>.apply(DevServerStart.scala:<span class="number">65</span>)</span><br><span class="line">  at play.utils.Threads$.withContextClassLoader(Threads.scala:<span class="number">21</span>)</span><br><span class="line">  at play.core.server.DevServerStart$.mainDev(DevServerStart.scala:<span class="number">64</span>)</span><br><span class="line">  at play.core.server.DevServerStart$.mainDevHttpMode(DevServerStart.scala:<span class="number">54</span>)</span><br><span class="line">  at play.core.server.DevServerStart.mainDevHttpMode(DevServerStart.scala)</span><br><span class="line">  at sun.reflect.NativeMethodAccessorImpl.invoke<span class="number">0</span>(Native Method)</span><br><span class="line">  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>)</span><br><span class="line">  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>)</span><br><span class="line">  at java.lang.reflect.Method.invoke(Method.java:<span class="number">497</span>)</span><br><span class="line">  at play.runsupport.Reloader$.startDevMode(Reloader.scala:<span class="number">207</span>)</span><br><span class="line">  at play.sbt.run.PlayRun$<span class="variable">$anonfun</span><span class="variable">$playRunTask</span><span class="variable">$1</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$3</span>.devModeServer<span class="variable">$lzycompute</span><span class="variable">$1</span>(PlayRun.scala:<span class="number">73</span>)</span><br><span class="line">  at play.sbt.run.PlayRun$<span class="variable">$anonfun</span><span class="variable">$playRunTask</span><span class="variable">$1</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$3</span>.play<span class="variable">$sbt</span><span class="variable">$run</span><span class="variable">$PlayRun</span>$<span class="variable">$anonfun</span>$<span class="variable">$anonfun</span>$<span class="variable">$anonfun</span>$<span class="variable">$devModeServer</span><span class="variable">$1</span>(PlayRun.scala:<span class="number">73</span>)</span><br><span class="line">  at play.sbt.run.PlayRun$<span class="variable">$anonfun</span><span class="variable">$playRunTask</span><span class="variable">$1</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$3</span>.apply(PlayRun.scala:<span class="number">99</span>)</span><br><span class="line">  at play.sbt.run.PlayRun$<span class="variable">$anonfun</span><span class="variable">$playRunTask</span><span class="variable">$1</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$3</span>.apply(PlayRun.scala:<span class="number">52</span>)</span><br><span class="line">  at scala.Function1$<span class="variable">$anonfun</span><span class="variable">$compose</span><span class="variable">$1</span>.apply(Function1.scala:<span class="number">47</span>)</span><br><span class="line">[trace] Stack trace suppressed: run last web/compile:run <span class="keyword">for</span> the full output.</span><br><span class="line">[error] (web/compile:run) java.lang.reflect.InvocationTargetException</span><br><span class="line">[error] Total time: <span class="number">37</span> s, completed <span class="number">2017</span>-<span class="number">3</span>-<span class="number">8</span> <span class="number">20</span>:<span class="number">28</span>:<span class="number">39</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">java.lang.ClassCastException: org.slf4j.impl.Log4jLoggerFactory cannot be <span class="keyword">cast</span> <span class="keyword">to</span> ch.qos.logback.classic.LoggerContext</span><br><span class="line">  at play.api.libs.logback.LogbackLoggerConfigurator.configure(LogbackLoggerConfigurator.scala:<span class="number">80</span>)</span><br><span class="line">  at play.api.libs.logback.LogbackLoggerConfigurator.init(LogbackLoggerConfigurator.scala:<span class="number">26</span>)</span><br><span class="line">  at play.core.server.DevServerStart$<span class="variable">$anonfun</span><span class="variable">$mainDev</span><span class="variable">$1</span>.apply(DevServerStart.scala:<span class="number">94</span>)</span><br><span class="line">  at play.core.server.DevServerStart$<span class="variable">$anonfun</span><span class="variable">$mainDev</span><span class="variable">$1</span>.apply(DevServerStart.scala:<span class="number">65</span>)</span><br><span class="line">  at play.utils.Threads$.withContextClassLoader(Threads.scala:<span class="number">21</span>)</span><br><span class="line">  at play.core.server.DevServerStart$.mainDev(DevServerStart.scala:<span class="number">64</span>)</span><br><span class="line">  at play.core.server.DevServerStart$.mainDevHttpMode(DevServerStart.scala:<span class="number">54</span>)</span><br><span class="line">  at play.core.server.DevServerStart.mainDevHttpMode(DevServerStart.scala)</span><br><span class="line">  at sun.reflect.NativeMethodAccessorImpl.invoke<span class="number">0</span>(Native Method)</span><br><span class="line">  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>)</span><br><span class="line">  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>)</span><br><span class="line">  at java.lang.reflect.Method.invoke(Method.java:<span class="number">497</span>)</span><br><span class="line">  at play.runsupport.Reloader$.startDevMode(Reloader.scala:<span class="number">234</span>)</span><br><span class="line">  at play.sbt.run.PlayRun$<span class="variable">$anonfun</span><span class="variable">$playRunTask</span><span class="variable">$1</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$3</span>.devModeServer<span class="variable">$lzycompute</span><span class="variable">$1</span>(PlayRun.scala:<span class="number">74</span>)</span><br><span class="line">  at play.sbt.run.PlayRun$<span class="variable">$anonfun</span><span class="variable">$playRunTask</span><span class="variable">$1</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$3</span>.play<span class="variable">$sbt</span><span class="variable">$run</span><span class="variable">$PlayRun</span>$<span class="variable">$anonfun</span>$<span class="variable">$anonfun</span>$<span class="variable">$anonfun</span>$<span class="variable">$devModeServer</span><span class="variable">$1</span>(PlayRun.scala:<span class="number">74</span>)</span><br><span class="line">  at play.sbt.run.PlayRun$<span class="variable">$anonfun</span><span class="variable">$playRunTask</span><span class="variable">$1</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$3</span>.apply(PlayRun.scala:<span class="number">100</span>)</span><br><span class="line">  at play.sbt.run.PlayRun$<span class="variable">$anonfun</span><span class="variable">$playRunTask</span><span class="variable">$1</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$2</span>$<span class="variable">$anonfun</span><span class="variable">$apply</span><span class="variable">$3</span>.apply(PlayRun.scala:<span class="number">53</span>)</span><br><span class="line">  at scala.Function1$<span class="variable">$anonfun</span><span class="variable">$compose</span><span class="variable">$1</span>.apply(Function1.scala:<span class="number">47</span>)</span><br><span class="line">[trace] Stack trace suppressed: run last web/compile:run <span class="keyword">for</span> the full output.</span><br><span class="line">[error] (web/compile:run) java.lang.reflect.InvocationTargetException</span><br><span class="line">[error] Total time: <span class="number">3</span> s, completed <span class="number">2017</span>-<span class="number">3</span>-<span class="number">8</span> <span class="number">20</span>:<span class="number">16</span>:<span class="number">56</span></span><br></pre></td></tr></table></figure>
<p>解决方式：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">val webExcludeDependencies = Seq(</span><br><span class="line">  <span class="function"><span class="title">SbtExclusionRule</span><span class="params">(<span class="string">"org.slf4j"</span> ,<span class="string">"slf4j-simple"</span>)</span></span>,</span><br><span class="line">  <span class="function"><span class="title">SbtExclusionRule</span><span class="params">(<span class="string">"org.slf4j"</span>, <span class="string">"slf4j-jdk12"</span>)</span></span> ,</span><br><span class="line">  <span class="function"><span class="title">SbtExclusionRule</span><span class="params">(<span class="string">"org.slf4j"</span>, <span class="string">"slf4j-log4j12"</span>)</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h2 id="Run_&amp;_Debug_With_IDEA">Run &amp; Debug With IDEA</h2><p>参考：<a href="http://stackoverflow.com/questions/24218341/how-to-run-play-framework-2-x-in-debug-mode-in-intellij-idea" target="_blank" rel="external">http://stackoverflow.com/questions/24218341/how-to-run-play-framework-2-x-in-debug-mode-in-intellij-idea</a><br><a href="http://stackoverflow.com/questions/22195364/debugging-sbt-project-with-play-in-intellij-idea" target="_blank" rel="external">http://stackoverflow.com/questions/22195364/debugging-sbt-project-with-play-in-intellij-idea</a><br><a href="http://stackoverflow.com/questions/4150776/debugging-scala-code-with-simple-build-tool-sbt-and-intellij" target="_blank" rel="external">http://stackoverflow.com/questions/4150776/debugging-scala-code-with-simple-build-tool-sbt-and-intellij</a></p>
<p>命令行运行： <code>sbt web/run -Dconfig.resource=local/application.zqh.conf -Dhttp.port=9091</code></p>
<h3 id="1-_Play_App（❌）">1. Play App（❌）</h3><p>IDEA中运行Play App，或者直接在Controller上右键点击Run Play 2 App</p>
<p><img src="http://img.blog.csdn.net/20170512103522643" alt="1"></p>
<p>sbt多模块无法定位到web</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[info] Loading project definition <span class="keyword">from</span> /Users/zhengqh/Github/pontus/project</span><br><span class="line">[info] Updating &#123;<span class="type">file</span>:/Users/zhengqh/Github/pontus/project/&#125;pontus-build...</span><br><span class="line">[info] Compiling <span class="number">3</span> Scala sources <span class="keyword">to</span> /Users/zhengqh/Github/pontus/project/target/scala-<span class="number">2.10</span>/sbt-<span class="number">0.13</span>/classes...</span><br><span class="line">[info] Set current project <span class="keyword">to</span> pontus-root (<span class="keyword">in</span> build <span class="type">file</span>:/Users/zhengqh/Github/pontus/)</span><br><span class="line">[warn] compile:<span class="command">run</span>::javaOptions will be ignored, compile:<span class="command">run</span>::fork <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> <span class="constant">false</span></span><br><span class="line">java.lang.RuntimeException: No main <span class="type">class</span> detected.</span><br><span class="line">  <span class="keyword">at</span> scala.sys.package$.<span class="keyword">error</span>(package.scala:<span class="number">27</span>)</span><br><span class="line">[trace] Stack trace suppressed: <span class="command">run</span> '<span class="keyword">last</span> root/compile:<span class="command">run</span>' <span class="keyword">for</span> <span class="keyword">the</span> full output.</span><br><span class="line">[<span class="keyword">error</span>] (root/compile:<span class="command">run</span>) No main <span class="type">class</span> detected.</span><br><span class="line">[<span class="keyword">error</span>] Total <span class="property">time</span>: <span class="number">0</span> s, completed <span class="number">2017</span>-<span class="number">5</span>-<span class="number">12</span> <span class="number">10</span>:<span class="number">35</span>:<span class="number">01</span></span><br><span class="line">Disconnected <span class="keyword">from</span> <span class="keyword">the</span> target VM, address: '<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">62036</span>', transport: 'socket'</span><br></pre></td></tr></table></figure>
<p>只有Play工程，应该是可以的</p>
<h3 id="2-_Sbt_Task（✅）">2. Sbt Task（✅）</h3><p>IDEA中运行Sbt Task，注意-D参数必须添加到VM arguments，不能放在Tasks中</p>
<p><img src="http://img.blog.csdn.net/20170512103539643" alt="2"></p>
<h3 id="3-_jvm-debug（✅）">3. jvm-debug（✅）</h3><p>Play工程的命令行执行方式：sbt -jvm-debug 9999 “run 9091”</p>
<p>Sbt多模块的命令行执行方式：sbt -jvm-debug 9999  web/run -Dconfig.resource=local/application.zqh.conf -Dhttp.port=9091</p>
<p>先在命令行启动sbt，然后在IDEA中配置Remote</p>
<p><img src="http://img.blog.csdn.net/20170512104754468" alt="3"></p>
<p>用启动Remote的debug，设置断点，可以进入断点，控制器会打印</p>
<p>Connected to the target VM, address: ‘localhost:9999’, transport: ‘socket’</p>
<p>访问：<a href="http://localhost:9091/api/v1/job" target="_blank" rel="external">http://localhost:9091/api/v1/job</a> ，进入DEBUG模式</p>
<p><img src="http://img.blog.csdn.net/20170512105802005" alt="4"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Scala PlayFramework（2.4）入门&lt;br&gt;示例程序：&lt;a href=&quot;https://github.com/zqhxuyuan/first-player&quot;&gt;https://github.com/zqhxuyuan/first-player&lt;/a&gt;&lt;/p&gt;
&lt;!-- MarkdownTOC --&gt;
&lt;ul&gt;
&lt;li&gt;Run! Run!! Run!!!&lt;/li&gt;
&lt;li&gt;Hello World!&lt;ul&gt;
&lt;li&gt;路由和Controller&lt;/li&gt;
&lt;li&gt;页面和渲染&lt;ul&gt;
&lt;li&gt;模板编译&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Products Example&lt;ul&gt;
&lt;li&gt;implicit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spark集成&lt;ul&gt;
&lt;li&gt;play-spark-module&lt;/li&gt;
&lt;li&gt;Spark Launcher&lt;ul&gt;
&lt;li&gt;mesos&lt;/li&gt;
&lt;li&gt;问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spark Cassandra&lt;/li&gt;
&lt;li&gt;预览&lt;/li&gt;
&lt;li&gt;Actor&lt;/li&gt;
&lt;li&gt;Quartz&lt;ul&gt;
&lt;li&gt;Job依赖注入&lt;/li&gt;
&lt;li&gt;Quartz作业的自动重启&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Kafka&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;附录&lt;ul&gt;
&lt;li&gt;sbt私服&lt;/li&gt;
&lt;li&gt;Play MultiProject&lt;/li&gt;
&lt;li&gt;Run &amp;amp; Debug With IDEA&lt;ul&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;Play App（❌）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;Sbt Task（✅）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;jvm-debug（✅）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /MarkdownTOC --&gt;
    
    </summary>
    
      <category term="scala" scheme="http://github.com/zqhxuyuan/categories/scala/"/>
    
    
      <category term="scala" scheme="http://github.com/zqhxuyuan/tags/scala/"/>
    
  </entry>
  
</feed>
